- en: Chapter 6\. Group Segmentation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 6 章\. 群体分割
- en: In [Chapter 5](ch05.html#Chapter_5), we introduced clustering, an unsupervised
    learning approach to identify the underlying structure in data and grouping points
    based on similarity. These groups (known as clusters) should be homogeneous and
    distinct. In other words, the members within a group should be very similar to
    each other and very distinct from members of any other group.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第 5 章](ch05.html#Chapter_5) 中，我们介绍了聚类，一种无监督学习方法，用于识别数据中的潜在结构并根据相似性将点分组。这些组（称为簇）应该是同质且明显不同的。换句话说，组内成员应该彼此非常相似，并且与任何其他组的成员非常不同。
- en: From an applied perspective, the ability to segment members into groups based
    on similarity and without any guidance from labels is very powerful. For example,
    such a technique could be applied to find different consumer groups for online
    retailers, customizing a marketing strategy for each of the distinct groups (i.e.,
    budget shoppers, fashionistas, sneakerheads, techies, audiophiles, etc.). Group
    segmentation could improve targeting in online advertising and improve recommendations
    in recommender systems for movies, music, news, social networking, dating, etc.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 从应用的角度来看，基于相似性将成员分组且无需标签指导的能力非常强大。例如，这样的技术可以应用于为在线零售商找到不同的消费者群体，为每个不同的群体定制营销策略（例如预算购物者、时尚达人、球鞋爱好者、技术爱好者、发烧友等）。群体分割可以提高在线广告的定位精度，并改进电影、音乐、新闻、社交网络、约会等推荐系统的推荐效果。
- en: In this chapter, we will build an applied unsupervised learning solution using
    the clustering algorithms from the previous chapter—more specifically, we will
    perform group segmentation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用前一章的聚类算法构建一个应用型无监督学习解决方案 —— 具体来说，我们将执行群体分割。
- en: Lending Club Data
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Lending Club 数据
- en: For this chapter, we will use loan data from Lending Club, a US peer-to-peer
    lending company. Borrowers on the platform can borrow between $1,000 to $40,000
    in the form of unsecured personal loans, for a term of either three or five years.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，我们将使用 Lending Club 的贷款数据，这是一家美国的点对点借贷公司。平台上的借款人可以以未担保的个人贷款形式借款 $1,000 到
    $40,000，期限为三年或五年。
- en: Investors can browse the loan applications and choose to finance the loans based
    on the credit history of the borrower, the amount of the loan, the loan grade,
    and the purpose of the loan. Investors earn money through interest paid on the
    loans, and Lending Club makes money from loan origination fees and service charges.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 投资者可以浏览贷款申请，并根据借款人的信用历史、贷款金额、贷款等级和贷款用途选择是否融资。投资者通过贷款支付的利息赚钱，而 Lending Club 则通过贷款起始费用和服务费赚钱。
- en: The loan data we will use is from 2007–2011 and is publicly available on [the
    Lending Club website](http://bit.ly/2FYN2zX). A data dictionary is also available
    there.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的贷款数据来自 2007–2011 年，并且可以在 [Lending Club 网站](http://bit.ly/2FYN2zX) 上公开获取。数据字典也可以在那里找到。
- en: Data Preparation
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据准备
- en: Like in previous chapters, let’s prepare the environment to work with the Lending
    Club data.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 像在前几章中一样，让我们准备好环境以处理 Lending Club 数据。
- en: Load libraries
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 加载库
- en: 'First, let’s load the necessary libraries:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们加载必要的库：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Explore the data
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 探索数据
- en: 'Next, let’s load the loan data and designate which of the columns to keep:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们加载贷款数据并指定要保留哪些列：
- en: The original loan data file has 144 columns, but most of these columns are empty
    and are of little value to us. Therefore, we will designate a subset of the columns
    that are mostly populated and are worth using in our clustering application. These
    fields include attributes of the loan such as the amount requested, the amount
    funded, the term, the interest rate, the loan grade, etc., and attributes of the
    borrower such as employment length, home ownership status, annual income, address,
    and purpose for borrowing money.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 原始贷款数据文件有 144 列，但大多数列为空，并且对我们的价值有限。因此，我们将指定一部分主要填充且值得在我们的聚类应用中使用的列。这些字段包括贷款请求金额、资助金额、期限、利率、贷款等级等贷款属性，以及借款人的就业长度、住房所有权状态、年收入、地址以及借款用途等借款人属性。
- en: 'We will also explore the data a bit:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将稍微探索一下数据：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The data has 42,542 loans and 37 features (42,542, 37).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 数据包含 42,542 笔贷款和 37 个特征（42,542, 37）。
- en: '[Table 6-1](#first_few_rows_of_the_loan_data) previews the data.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 6-1](#first_few_rows_of_the_loan_data) 预览数据。'
- en: Table 6-1\. First few rows of the loan data
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6-1\. 贷款数据的前几行
- en: '|  | loan_amnt | funded_amnt | funded_amnt_inv | term | int_rate | instsallment
    | grade |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '|  | loan_amnt | funded_amnt | funded_amnt_inv | term | int_rate | instsallment
    | grade |'
- en: '| --- | --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- | --- |'
- en: '| 0 | 5000.0 | 5000.0 | 4975.0 | 36 months | 10.65% | 162.87 | B |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 5000.0 | 5000.0 | 4975.0 | 36 个月 | 10.65% | 162.87 | B |'
- en: '| 1 | 2500.0 | 2500.0 | 2500.0 | 60 months | 15.27% | 59.83 | C |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 2500.0 | 2500.0 | 2500.0 | 60 个月 | 15.27% | 59.83 | C |'
- en: '| 2 | 2400.0 | 2400.0 | 2400.0 | 35 months | 15.96% | 84.33 | C |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 2400.0 | 2400.0 | 2400.0 | 35 个月 | 15.96% | 84.33 | C |'
- en: '| 3 | 10000.0 | 10000.0 | 10000.0 | 36 months | 13.49% | 339.31 | C |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 10000.0 | 10000.0 | 10000.0 | 36 个月 | 13.49% | 339.31 | C |'
- en: '| 4 | 3000.0 | 3000.0 | 3000.0 | 60 months | 12.69% | 67.79 | B |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 3000.0 | 3000.0 | 3000.0 | 60 个月 | 12.69% | 67.79 | B |'
- en: Transform String Format to Numerical Format
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将字符串格式转换为数值格式
- en: 'A few of the features—the term of the loan, the interest rate of the loan,
    employment length of the borrower, and revolving utilization of the borrower—need
    to be altered from a string format to a numerical format. Let’s perform the transformation:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一些特征，如贷款的期限、贷款的利率、借款人的就业时长以及借款人的循环利用率，需要从字符串格式转换为数值格式。让我们进行转换：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For our clustering application, we will consider just the numerical features
    and ignore all the categorical features because nonnumerical features cannot be
    handled by our clustering algorithms in their current form.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的聚类应用程序，我们将只考虑数值特征，忽略所有的分类特征，因为非数值特征在当前形式下无法被我们的聚类算法处理。
- en: Impute Missing Values
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 填充缺失值
- en: 'Let’s find these numerical features and count the number of NaNs per feature.
    We will then impute these NaNs with either the mean of the feature or, in some
    cases, just the number zero, depending on what the feature represents from a business
    perspective:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 找到这些数值特征，并计算每个特征中 NaN 的数量。然后我们将用特征的平均值或者有时仅仅是数字零来填充这些 NaN，具体取决于从业务角度来看这些特征代表什么：
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The following code shows the number of NaNs by feature:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码显示了每个特征中的 NaN 数量：
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Most features have a few NaNs, and some—such as the months since last delinquency
    and last change in record—have many.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数特征有少量的 NaN，而一些特征，例如自上次拖欠以来的月数和记录变更以来的时间，有很多 NaN。
- en: 'Let’s impute these so we do not have to deal with any NaNs during the clustering
    process:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们填充这些 NaN，这样我们在聚类过程中就不必处理任何 NaN：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Let’s recalculate the NaNs to make sure no NaNs remain.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们重新计算 NaN，以确保没有任何 NaN 保留。
- en: 'We are now safe. All the NaNs have been filled:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在是安全的。所有的 NaN 都已经填充：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Engineer Features
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工程特征
- en: 'Let’s also engineer a few more features to add to the existing feature set.
    These new features are mostly ratios between loan amount, revolving balance, payments,
    and the borrower’s annual income:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们还要工程化几个新特征，以补充现有的特征集。这些新特征大多是贷款金额、循环余额、还款和借款人年收入之间的比率：
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Select Final Set of Features and Perform Scaling
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择最终的特征集并执行缩放
- en: 'Next, we will generate the training dataframe and scale the features for our
    clustering algorithms:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将生成训练数据集，并为我们的聚类算法缩放特征：
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Designate Labels for Evaluation
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指定评估标签
- en: Clustering is an unsupervised learning approach, and, therefore, labels are
    not used. However, to judge the goodness of our clustering algorithm at finding
    distinct and homogeneous groups of borrowers in this Lending Club dataset, we
    will use the loan grade as a proxy label.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类是一种无监督学习方法，因此不使用标签。然而，为了评估我们的聚类算法在找到这个 Lending Club 数据集中不同且同质化的借款人群组时的好坏程度，我们将使用贷款等级作为代理标签。
- en: 'The loan grade is currently graded by letters, with loan grade “A” as the most
    credit-worthy and safe and loan grade “G” as the least:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 贷款等级目前由字母进行评分，“A” 级贷款最值得信赖和安全，“G” 级贷款最不值得：
- en: '[PRE10]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'There are some NaNs in the loan grade. We will fill these with a value of “Z”
    and then use the `LabelEncoder` from Scikit-Learn to transform the letter grades
    to numerical grades. To remain consistent, we will load these labels into a “y_train”
    Python series:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 贷款等级中有一些 NaN。我们将用值“Z”来填充这些 NaN，然后使用 Scikit-Learn 中的 `LabelEncoder` 将字母等级转换为数值等级。为了保持一致性，我们将这些标签加载到一个名为“y_train”的
    Python 系列中：
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Table 6-2\. Numerical versus letter loan grades
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6-2\. 数字与字母贷款等级对比
- en: '|  | grade | grade |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '|  | grade | grade |'
- en: '| --- | --- | --- |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 0 | 1 | B |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 1 | B |'
- en: '| 1 | 2 | C |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 2 | C |'
- en: '| 2 | 2 | C |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 2 | C |'
- en: '| 3 | 2 | C |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 2 | C |'
- en: '| 4 | 1 | B |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 1 | B |'
- en: '| 5 | 0 | A |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 0 | A |'
- en: '| 6 | 2 | C |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 2 | C |'
- en: '| 7 | 4 | E |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 4 | E |'
- en: '| 8 | 5 | F |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 5 | F |'
- en: '| 9 | 1 | B |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 1 | B |'
- en: '| 10 | 2 | C |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| 10 | 2 | C |'
- en: '| 11 | 1 | B |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 11 | 1 | B |'
- en: '| 12 | 2 | C |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 12 | 2 | C |'
- en: '| 13 | 1 | B |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 13 | 1 | B |'
- en: '| 14 | 1 | B |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 14 | 1 | B |'
- en: '| 15 | 3 | D |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 15 | 3 | D |'
- en: '| 16 | 2 | C |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 16 | 2 | C |'
- en: As you can see from [Table 6-2](#numerical_versus_letter_loan_grades), all the
    “A” grades have been transformed into 0, the “B” grades into 1, etc.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你从[表 6-2](#numerical_versus_letter_loan_grades)中所看到的，所有的“A”等级都被转换为 0，“B”等级为
    1，以此类推。
- en: 'Let’s also check whether grade “A” loans generally have the lowest interest
    rate charged, since they are the least risky and other loans are charged progressively
    higher rates of interest:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们也检查一下是否“A”等级的贷款通常有最低的收费利率，因为它们是最不风险的，其他贷款的利率会逐渐增加：
- en: '[PRE13]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[Table 6-3](#grade_versus_interest_rate) confirms this. Higher letter grade
    loans have higher interest rates.^([1](ch06.html#idm140637543541600))'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 6-3](#grade_versus_interest_rate)证实了这一点。较高的字母等级贷款有较高的利率。^([1](ch06.html#idm140637543541600))'
- en: Table 6-3\. Grade versus interest rate
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6-3\. 等级与利率
- en: '| grade | int_rate |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| grade | int_rate |'
- en: '| --- | --- |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 0.0 | 734.270844 |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 0.0 | 734.270844 |'
- en: '| 1.0 | 1101.420857 |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 1.0 | 1101.420857 |'
- en: '| 2.0 | 1349.988902 |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 2.0 | 1349.988902 |'
- en: '| 3.0 | 1557.714927 |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 3.0 | 1557.714927 |'
- en: '| 4.0 | 1737.676783 |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 4.0 | 1737.676783 |'
- en: '| 5.0 | 1926.530361 |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 5.0 | 1926.530361 |'
- en: '| 6.0 | 2045.125000 |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 6.0 | 2045.125000 |'
- en: '| 7.0 | 1216.501563 |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 7.0 | 1216.501563 |'
- en: Goodness of the Clusters
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 聚类的优度
- en: Now the data is ready. We have an X_train with all of our 34 numerical features,
    and a y_train with the numerical loan grades, which we use only to validate the
    results, not to train with the algorithm as you would do in a supervised machine
    learning problem. Before we build our first clustering application, let’s introduce
    a function to analyze the goodness of the clusters we generate using the clustering
    algorithms. Specifically, we will use the concept of homogeneity to assess the
    goodness of each cluster.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在数据准备就绪。我们有一个包含所有 34 个数值特征的 X_train，以及一个包含数值贷款等级的 y_train，我们仅用于验证结果，而不是像在监督式机器学习问题中那样用于训练算法。在构建我们的第一个聚类应用之前，让我们介绍一个函数来分析我们使用聚类算法生成的聚类的优度。具体来说，我们将使用一致性的概念来评估每个聚类的优度。
- en: If the clustering algorithm does a good job separating the borrowers in the
    Lending Club dataset, each cluster should have borrowers that are very similar
    to each other and dissimilar to those in other groups. Presumably, borrowers that
    are similar to each other and grouped together should have similar credit profiles—in
    other words, their creditworthiness should be similar.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果聚类算法在 Lending Club 数据集中很好地分离借款人，那么每个集群都应该有非常相似的借款人，并且与其他组中的借款人不相似。假设相似并被分组在一起的借款人应该有相似的信用档案—换句话说，他们的信用价值应该相似。
- en: If this is the case (and with real-world problems, a lot of these assumptions
    are only partially true), borrowers in a given cluster should generally be assigned
    the same numerical loan grade, which we will validate using the numerical loan
    grades we set aside in y_train. The higher the percentage of borrowers that have
    the most frequently occurring numerical loan grade in each and every cluster,
    the better the clustering application.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是这种情况（而在现实世界中，这些假设大部分只是部分成立），给定集群中的借款人通常应被分配相同的数值贷款等级，我们将使用 y_train 中设置的数值贷款等级来验证。在每个集群中具有最频繁出现的数值贷款等级的借款人所占的百分比越高，聚类应用的效果就越好。
- en: As an example, consider a cluster with one hundred borrowers. If 30 borrowers
    have a numerical loan grade of 0, 25 borrowers have a loan grade of 1, 20 borrowers
    have a loan grade of 2, and the remaining borrowers have loan grades ranging from
    3 to 7, we would say that the cluster has a 30% accuracy, given that the most
    frequently occuring loan grade for that cluster applies to just 30% of the borrowers
    in that cluster.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 举例来说，考虑一个拥有一百名借款人的集群。如果有 30 名借款人的数值贷款等级为 0，25 名借款人的贷款等级为 1，20 名借款人的贷款等级为 2，剩余的借款人贷款等级在
    3 到 7 之间，我们会说该集群的准确率为 30%，因为该集群中最频繁出现的贷款等级仅适用于该集群中的 30% 借款人。
- en: If we did not have a y_train with the numerical loan grades to validate the
    goodness of the clusters, we could use an alternative approach. We could sample
    a few borrowers in each cluster, determine the numerical loan grade for them by
    hand, and determine if we would give roughly the same numerical loan grade to
    those borrowers. If yes, then the cluster is a good cluster—it is homogeneous
    enough that we would give roughly the same numerical loan grade to the borrowers
    we sampled. If not, then the cluster is not good enough—the borrowers are too
    heterogeneous, and we should try to improve the solution using more data, a different
    clustering algorithm, etc.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们没有一个包含数值贷款等级的*y_train*来验证簇的好坏，我们可以采用替代方法。我们可以从每个簇中抽样一些借款人，手动确定他们的数值贷款等级，并确定我们是否会给这些借款人大致相同的数值贷款等级。如果是，则该簇是一个好簇——它足够同质化，我们会给我们抽样的借款人大致相同的数值贷款等级。如果不是，则该簇不够好——借款人过于异质化，我们应该尝试使用更多数据、不同的聚类算法等来改进解决方案。
- en: We won’t have to sample and manually hand-label the borrowers, though, given
    that we have the numerical loan grades already, but this is important to keep
    in mind in case you do not have labels for your particular problem.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，我们不需要对借款人进行抽样和手动标记，因为我们已经有了数值贷款等级，但在没有标签的特定问题上，这一点很重要。
- en: 'Here is the function to analyze the clusters:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这是分析簇的函数：
- en: '[PRE14]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: k-Means Application
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*k*-均值应用'
- en: Our first clustering application using this Lending Club dataset will use *k*-means,
    which we introduced in [Chapter 5](ch05.html#Chapter_5). Recall that in *k*-means
    clustering, we need to specify the desired clusters *k*, and the algorithm will
    assign each borrower to exactly one of these *k* clusters.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用这个Lending Club数据集的第一个聚类应用将使用*k*-均值，这在[第5章](ch05.html#Chapter_5)中有介绍。回顾一下，在*k*-均值聚类中，我们需要指定所需的簇*k*，算法将每个借款人精确地分配到这些*k*簇中的一个。
- en: The algorithm will accomplish this by minimizing the within-cluster variation,
    which is also known as inertia, such that the sum of the within-cluster variations
    across all *k* clusters is as small as possible.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法将通过最小化簇内变化（也称为惯性），使得所有*k*簇中的簇内变化之和尽可能小，来实现这一点。
- en: Instead of specifying just one value of *k*, we will run an experiment where
    we set *k* from a range of 10 to 30 and plot the results of the accuracy measure
    we defined in the previous section.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不只是指定一个*k*值，而是进行一个实验，将*k*从10到30的范围内设置，并绘制我们在前一节定义的准确度测量结果。
- en: 'Based on which *k* measure performs best, we can build the pipeline for clustering
    using this best-performing *k* measure:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 基于哪种*k*度量表现最佳，我们可以构建使用这种最佳*k*度量的聚类管道：
- en: '[PRE15]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[Figure 6-1](#overall_accuracy_for_different_ks_using_k_means) displays the
    plot of the results.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 6-1](#overall_accuracy_for_different_ks_using_k_means)显示了结果的图表。'
- en: '![Overall Accuracy for Different Ks using K-means](assets/hulp_0601.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![使用K-means进行不同K值的整体准确率](assets/hulp_0601.png)'
- en: Figure 6-1\. Overall accuracy for different k measures using k-means
  id: totrans-109
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 6-1\. 使用*k*-均值进行不同*k*度量的整体准确率
- en: As we can see, the accuracy is best around 30 clusters and levels out there
    at approximately 39%. In other words, for any given cluster, the most-frequently
    occurring label for that cluster applies to approximately 39% of the borrowers.
    The remaining 61% of the borrowers have labels that are not the most-frequently
    occurring.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，准确率在大约30个簇时最佳，约为39%。换句话说，对于任何给定的簇，大约39%的借款人具有该簇中最常见的标签。其余61%的借款人具有非最常见的标签。
- en: 'The following code displays the accuracy by cluster for *k* = 30:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码显示了*k* = 30时的准确率：
- en: '[PRE16]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The accuracy varies quite a bit cluster to cluster. Some clusters are much more
    homogeneous than others. For example, cluster 7 has an accuracy of 76%, while
    cluster 12 has an accuracy of just 21%. This is a starting point to build a clustering
    application to automatically assign new borrowers that apply for a Lending Club
    loan into a preexisting group based on how similar they are to other borrowers.
    Based on this clustering, it is possible to automatically assign a tentative numerical
    loan grade to the new borrower, which will be correct approximately 39% of the
    time.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 准确率在不同簇之间变化很大。有些簇比其他簇更加同质化。例如，簇7的准确率为76%，而簇12的准确率仅为21%。这是构建一个聚类应用程序的起点，用于根据其与其他借款人的相似度将申请Lending
    Club贷款的新借款人自动分配到预先存在的组中。基于这种聚类，可以自动为新借款人分配一个暂定的数值贷款等级，大约39%的时间是正确的。
- en: This is not the best possible solution, and we should consider whether acquiring
    more data, performing more feature engineering and selection, selecting different
    parameters for the *k*-means algorithm, or changing to a different clustering
    algorithm will improve the results. It is possible that we do not have enough
    data to meaningfully separate the borrowers into distinct and homogeneous groups
    more than we have already; if this is the case, more data and more feature engineering
    and selection are required. Or, it could be that, for the limited data that we
    have, *k*-means is not best for performing this separation.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是最佳解决方案，我们应考虑是否获取更多数据、执行更多特征工程和选择、选择不同的*k*-均值算法参数或更改为其他聚类算法以改善结果。可能我们没有足够的数据能够像我们已经做的那样有效地将借款人分成不同且同质的群体；如果是这种情况，需要更多数据和更多的特征工程和选择。或者，对于我们拥有的有限数据，*k*-均值算法不适合执行此分离。
- en: Let’s switch to hierarchical clustering to see if our results improve.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们转向层次聚类，看看我们的结果是否会有所改善。
- en: Hierarchical Clustering Application
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 层次聚类应用
- en: Recall that in hierarchical clustering we do not need to precommit to a particular
    number of clusters. Instead, we can choose how many clusters we would like after
    the hierarchical clustering has finished running. Hierarchical clustering will
    build a dendrogram, which can be conceptually viewed as an upside-down tree. The
    leaves at the very bottom are the individual borrowers that apply for loans on
    Lending Club.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在层次聚类中，我们不需要预先确定特定数量的群集。相反，我们可以在层次聚类运行结束后选择我们想要的群集数量。层次聚类将构建一个树状图，概念上可以视为倒置的树。底部的叶子是在Lending
    Club上申请贷款的个体借款人。
- en: Hierarchical clustering joins the borrowers together as we move vertically up
    the upside-down tree based on how similar they are to each other. The borrowers
    that are most similar to each other are joined sooner, while borrowers that are
    not as similar are joined much later. Eventually, all the borrowers are joined
    together at the very top—the trunk—of the upside-down tree.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 层次聚类根据借款人彼此之间的相似程度，随着我们垂直向上移动倒置树而将它们连接在一起。彼此最相似的借款人更早加入，而不那么相似的借款人则加入得更晚。最终，所有借款人都在倒置树的顶部——主干处一起加入。
- en: From a business perspective, this clustering process is clearly very powerful.
    If we are able to find borrowers that are similar to each other and group them
    together, we can more efficiently assign creditworthiness ratings to them. We
    can also have specific strategies for distinct groups of borrowers and better
    manage them from a relationship perspective, providing better overall client service.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 从业务角度来看，这种聚类过程显然非常强大。如果我们能够找到彼此相似并将它们分组的借款人，我们可以更有效地为它们分配信用评级。我们还可以针对不同的借款人群体制定具体策略，并从关系的角度更好地管理它们，提供更好的整体客户服务。
- en: Once the hierarchical clustering algorithm finishes running, we can determine
    where we want to cut the tree. The lower we cut, the more groups of borrowers
    we are left with.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦层次聚类算法运行完毕，我们可以确定我们想要切割树的位置。我们切得越低，留下的借款人群体就越多。
- en: 'Let’s first train the hierarchical clustering algorithm like we did in [Chapter 5](ch05.html#Chapter_5):'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先像我们在[第5章](ch05.html#Chapter_5)中所做的那样训练层次聚类算法：
- en: '[PRE17]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[Table 6-4](#bottom_most_leaves_of_hierarchical_clustering) shows what the
    output dataframe looks like. The first few rows are the initial linkages of the
    bottom-most borrowers.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 6-4](#bottom_most_leaves_of_hierarchical_clustering) 展示了输出的数据框的样子。前几行是最底层借款人的初始联接。'
- en: Table 6-4\. Bottom-most leaves of hierarchical clustering
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6-4\. 层次聚类的最底层叶子节点
- en: '|  | clusterOne | clusterTwo | distance | newClusterSize |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '|  | clusterOne | clusterTwo | distance | newClusterSize |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| 0 | 39786.0 | 39787.0 | 0.000000e+00 | 2.0 |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| 0 | 39786.0 | 39787.0 | 0.000000e+00 | 2.0 |'
- en: '| 1 | 39788.0 | 42542.0 | 0.000000e+00 | 3.0 |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 39788.0 | 42542.0 | 0.000000e+00 | 3.0 |'
- en: '| 2 | 42538.0 | 42539.0 | 0.000000e+00 | 2.0 |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 42538.0 | 42539.0 | 0.000000e+00 | 2.0 |'
- en: '| 3 | 42540.0 | 42544.0 | 0.000000e+00 | 3.0 |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 42540.0 | 42544.0 | 0.000000e+00 | 3.0 |'
- en: '| 4 | 42541.0 | 42545.0 | 3.399350e-17 | 4.0 |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 42541.0 | 42545.0 | 3.399350e-17 | 4.0 |'
- en: '| 5 | 42543.0 | 42546.0 | 5.139334e-17 | 7.0 |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 42543.0 | 42546.0 | 5.139334e-17 | 7.0 |'
- en: '| 6 | 33251.0 | 33261.0 | 1.561313e-01 | 2.0 |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 33251.0 | 33261.0 | 1.561313e-01 | 2.0 |'
- en: '| 7 | 42512.0 | 42535.0 | 3.342654e-01 | 2.0 |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 42512.0 | 42535.0 | 3.342654e-01 | 2.0 |'
- en: '| 8 | 42219.0 | 42316.0 | 3.368231e-01 | 2.0 |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 42219.0 | 42316.0 | 3.368231e-01 | 2.0 |'
- en: '| 9 | 6112.0 | 21928.0 | 3.384368e-01 | 2.0 |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 6112.0 | 21928.0 | 3.384368e-01 | 2.0 |'
- en: '| 10 | 33248.0 | 33275.0 | 3.583819e-01 | 2.0 |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| 10 | 33248.0 | 33275.0 | 3.583819e-01 | 2.0 |'
- en: '| 11 | 33253.0 | 33265.0 | 3.595331e-01 | 2.0 |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| 11 | 33253.0 | 33265.0 | 3.595331e-01 | 2.0 |'
- en: '| 12 | 33258.0 | 42552.0 | 3.719377e-01 | 3.0 |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| 12 | 33258.0 | 42552.0 | 3.719377e-01 | 3.0 |'
- en: '| 13 | 20430.0 | 23299.0 | 3.757307e-01 | 2.0 |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| 13 | 20430.0 | 23299.0 | 3.757307e-01 | 2.0 |'
- en: '| 14 | 5455.0 | 32845.0 | 3.828709e-01 | 2.0 |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| 14 | 5455.0 | 32845.0 | 3.828709e-01 | 2.0 |'
- en: '| 15 | 28615.0 | 30306.0 | 3.900294e-01 | 2.0 |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| 15 | 28615.0 | 30306.0 | 3.900294e-01 | 2.0 |'
- en: '| 16 | 9056 .0 | 9769.0 | 3.967378e-01 | 2.0 |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| 16 | 9056 .0 | 9769.0 | 3.967378e-01 | 2.0 |'
- en: '| 17 | 11162.0 | 13857.0 | 3.991124e-01 | 2.0 |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| 17 | 11162.0 | 13857.0 | 3.991124e-01 | 2.0 |'
- en: '| 18 | 33270.0 | 42548.0 | 3.995620e-01 | 3.0 |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| 18 | 33270.0 | 42548.0 | 3.995620e-01 | 3.0 |'
- en: '| 19 | 17422.0 | 17986.0 | 4.061704e-01 | 2.0 |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| 19 | 17422.0 | 17986.0 | 4.061704e-01 | 2.0 |'
- en: Recall that the last few rows represent the top of the upside-down tree, and
    all 42,541 borrowers are combined together eventually (see [Table 6-5](#topmost_leaves_of_hierarchical_clustering)).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，最后几行表示倒置树的顶部，最终将42,541名借款人汇总在一起（见[表6-5](#topmost_leaves_of_hierarchical_clustering)）。
- en: Table 6-5\. Top-most leaves of hierarchical clustering
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 表6-5\. 层次聚类的最顶层叶节点
- en: '|  | clusterOne | clusterTwo | distance | newClusterSize |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '|  | clusterOne | clusterTwo | distance | newClusterSize |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| 42521 | 85038.0 | 85043.0 | 132.715723 | 3969.0 |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| 42521 | 85038.0 | 85043.0 | 132.715723 | 3969.0 |'
- en: '| 42522 | 85051.0 | 85052.0 | 141.386569 | 2899.0 |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| 42522 | 85051.0 | 85052.0 | 141.386569 | 2899.0 |'
- en: '| 42532 | 85026.0 | 85027.0 | 146.976703 | 2351.0 |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| 42532 | 85026.0 | 85027.0 | 146.976703 | 2351.0 |'
- en: '| 42524 | 85048.0 | 85049.0 | 152.660192 | 5691.0 |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| 42524 | 85048.0 | 85049.0 | 152.660192 | 5691.0 |'
- en: '| 42525 | 85036.0 | 85059.0 | 153.512281 | 5956.0 |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| 42525 | 85036.0 | 85059.0 | 153.512281 | 5956.0 |'
- en: '| 42526 | 85033.0 | 85044.0 | 160.825959 | 2203.0 |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| 42526 | 85033.0 | 85044.0 | 160.825959 | 2203.0 |'
- en: '| 42527 | 85055.0 | 85061.0 | 163.701428 | 668.0 |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| 42527 | 85055.0 | 85061.0 | 163.701428 | 668.0 |'
- en: '| 42528 | 85062.0 | 85066.0 | 168.199295 | 6897.0 |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| 42528 | 85062.0 | 85066.0 | 168.199295 | 6897.0 |'
- en: '| 42529 | 85054.0 | 85060.0 | 168.924039 | 9414.0 |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| 42529 | 85054.0 | 85060.0 | 168.924039 | 9414.0 |'
- en: '| 42530 | 85028.0 | 85064.0 | 185.215769 | 3118.0 |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| 42530 | 85028.0 | 85064.0 | 185.215769 | 3118.0 |'
- en: '| 42531 | 85067.0 | 85071.0 | 187.832588 | 15370.0 |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| 42531 | 85067.0 | 85071.0 | 187.832588 | 15370.0 |'
- en: '| 42532 | 85056.0 | 85073.0 | 203.212147 | 17995.0 |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| 42532 | 85056.0 | 85073.0 | 203.212147 | 17995.0 |'
- en: '| 42533 | 85057.0 | 85063.0 | 205.285993 | 9221.0 |'
  id: totrans-163
  prefs: []
  type: TYPE_TB
  zh: '| 42533 | 85057.0 | 85063.0 | 205.285993 | 9221.0 |'
- en: '| 42534 | 85068.0 | 85072.0 | 207.902660 | 5321.0 |'
  id: totrans-164
  prefs: []
  type: TYPE_TB
  zh: '| 42534 | 85068.0 | 85072.0 | 207.902660 | 5321.0 |'
- en: '| 42535 | 85069.0 | 85075.0 | 236.754581 | 9889.0 |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| 42535 | 85069.0 | 85075.0 | 236.754581 | 9889.0 |'
- en: '| 42536 | 85070.0 | 85077.0 | 298.587755 | 16786.0 |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| 42536 | 85070.0 | 85077.0 | 298.587755 | 16786.0 |'
- en: '| 42537 | 85058.0 | 85078.0 | 309.946867 | 16875.0 |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| 42537 | 85058.0 | 85078.0 | 309.946867 | 16875.0 |'
- en: '| 42538 | 85074.0 | 85079.0 | 375.698458 | 34870.0 |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| 42538 | 85074.0 | 85079.0 | 375.698458 | 34870.0 |'
- en: '| 42539 | 85065.0 | 85080.0 | 400.711547 | 37221.0 |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| 42539 | 85065.0 | 85080.0 | 400.711547 | 37221.0 |'
- en: '| 42504 | 85076.0 | 85081.0 | 644.047472 | 42542.0 |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| 42504 | 85076.0 | 85081.0 | 644.047472 | 42542.0 |'
- en: Now, let’s cut the dendrogram so that we are left with a manageable number of
    clusters. This is set based on the `distance_threshold`. Based on trial and error,
    a `distance_threshold` of 100 results in 32 clusters, which is what we will use
    for this example.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们根据`distance_threshold`来截取树状图，以便获得可管理的集群数量。根据试验，设置`distance_threshold`为100，结果得到32个集群，这是我们将在本例中使用的数量。
- en: '[PRE18]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The number of distinct clusters given the distance threshold we picked is 32:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择的距离阈值所给出的不同集群数量为32：
- en: '[PRE19]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The following code shows the overall accuracy of hierarchical clustering:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码展示了层次聚类的总体准确率：
- en: '[PRE20]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The overall accuracy is approximately 37%, a bit worse than with *k*-means clustering.
    That being said, hierarchical clustering works differently than *k*-means and
    may group some borrowers more accurately than *k*-means, while *k*-means may group
    other borrowers more accurately than hierarchical clustering.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 总体准确率约为37%，略低于*k*-means聚类。尽管如此，层次聚类与*k*-means聚类的工作方式不同，可能会更准确地分组一些借款人，而*k*-means可能会比层次聚类更准确地分组其他借款人。
- en: 'In other words, the two clustering algorithms may complement each other, and
    this is worth exploring by ensembling the two and assessing the ensemble’s results
    compared to the results of either standalone solution.^([2](ch06.html#idm140637542559056))
    As with *k*-means, the accuracy varies quite a bit across the clusters. Some clusters
    are much more homogeneous than others:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，这两种聚类算法可能互补，值得通过合并两种算法并评估合并结果来探索。与*k*-means一样，准确率在不同集群之间差异很大。一些集群比其他集群更同质化：
- en: '[PRE21]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: HDBSCAN Application
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HDBSCAN 应用
- en: Now let’s turn to HDBSCAN and apply this clustering algorithm to group similar
    borrowers in this Lending Club dataset.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们转向HDBSCAN，并将此聚类算法应用于在Lending Club数据集中对相似借款人进行分组。
- en: Recall that HDBSCAN will group borrowers together based on how closely packed
    together their attributes are in a high-dimensional space. Unlike *k*-means or
    hierarchical clustering, not all the borrowers will be grouped. Some borrowers
    that are very distinct from other groups of borrowers may remain ungrouped. These
    are outlier borrowers and are worth investigating to see if there is a good business
    reason they are dissimilar from other borrowers. It may be possible to automatically
    assign numerical loan grades to some groups of borrowers but other borrowers—those
    that are dissimilar—may require a more nuanced credit-scoring approach.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，HDBSCAN将根据借款人在高维空间中属性的密集程度将其分组在一起。与*k*-means或分层聚类不同，不是所有的借款人都会被分组。一些与其他借款人群体非常不同的借款人可能保持未分组状态。这些是异常借款人，值得调查，看看它们与其他借款人不同的良好业务原因。可能可以为一些借款人群体自动分配数值贷款等级，但对于那些不同的借款人，可能需要更为细致的信用评分方法。
- en: 'Let’s see how well HDBSCAN does:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看HDBSCAN的表现：
- en: '[PRE22]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The following code shows the overall accuracy for HDBSCAN:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码显示了HDBSCAN的整体准确率：
- en: '[PRE23]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: As seen here, the overall accuracy is approximately 32%, worse than that of
    either *k*-means or hierarchical clustering.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如此所见，整体准确率约为32%，比*k*-means或分层聚类的准确率都差。
- en: '[Table 6-6](#cluster_results_for_hdbscan_chap_six) shows the various clusters
    and their cluster sizes.'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 6-6](#cluster_results_for_hdbscan_chap_six) 显示了各种簇及其簇大小。'
- en: Table 6-6\. Cluster results for HDBSCAN
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6-6\. HDBSCAN的簇结果
- en: '|  | cluster | clusterCount |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '|  | 簇 | 簇计数 |'
- en: '| --- | --- | --- |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 0 | –1 | 32708 |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| 0 | –1 | 32708 |'
- en: '| 1 | 7 | 4070 |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| 1 | 7 | 4070 |'
- en: '| 2 | 2 | 3668 |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 2 | 3668 |'
- en: '| 3 | 1 | 1096 |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 1 | 1096 |'
- en: '| 4 | 4 | 773 |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 4 | 773 |'
- en: '| 5 | 0 | 120 |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 0 | 120 |'
- en: '| 6 | 6 | 49 |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 6 | 49 |'
- en: '| 7 | 3 | 38 |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 3 | 38 |'
- en: '| 8 | 5 | 20 |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 5 | 20 |'
- en: 32,708 of the borrowers are in cluster -1, which means they are ungrouped.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 32,708名借款人属于簇-1，意味着它们未分组。
- en: 'The following shows the accuracy by cluster:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 以下显示了各簇的准确率：
- en: '[PRE24]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Among these clusters, the accuracy ranges from 28% to 59%.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些簇中，准确率从28%到59%不等。
- en: Conclusion
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this chapter, we built an unsupervised clustering application based on borrowers
    that applied for unsecured personal loans on Lending Club from 2007-2011\. The
    applications were based on *k*-means, hierarchical clustering, and hierarchical
    DBSCAN. *k*-means performed the best, scoring an approximately 39% overall accuracy.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们基于从2007年到2011年在Lending Club申请无抵押个人贷款的借款人构建了一个无监督的聚类应用程序。这些应用程序基于*k*-means、分层聚类和分层DBSCAN。*k*-means表现最佳，整体准确率约为39%。
- en: While these applications performed okay, they can be improved quite a bit. You
    should experiment with these algorithms to improve the solution from here.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这些应用程序表现还可以，但它们可以大幅改进。你应该尝试使用这些算法来改进解决方案。
- en: This concludes the unsupervised learning using Scikit-Learn portion of the book.
    Next, we will explore neural network-based forms of unsupervised learning using
    TensorFlow and Keras. We will start with representation learning and autoencoders
    in [Chapter 7](ch07.html#Chapter_7).
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这结束了本书中使用Scikit-Learn的无监督学习部分。接下来，我们将探索基于神经网络的形式的无监督学习，使用TensorFlow和Keras。我们将从[第7章](ch07.html#Chapter_7)中的表示学习和自编码器开始。
- en: ^([1](ch06.html#idm140637543541600-marker)) We can ignore grade “7,” which corresponds
    to loan grade “Z.” These are the loans with missing loan grades that we had to
    fill in.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch06.html#idm140637543541600-marker)) 我们可以忽略评级为“7”的，这对应于贷款等级“Z”。这些是我们不得不填补贷款等级缺失的贷款。
- en: ^([2](ch06.html#idm140637542559056-marker)) We explored ensembling in [Chapter 2](ch02.html#Chapter_2).
    Refer back to [“Ensembles”](ch02.html#ensembles) if you need a refresher.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch06.html#idm140637542559056-marker)) 我们在[第2章](ch02.html#Chapter_2)中探讨了集成学习。如果需要复习，请参考[“集成”](ch02.html#ensembles)。

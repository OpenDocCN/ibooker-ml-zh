- en: Chapter 9\. Extending a Data Platform Using Hybrid and Edge
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。使用混合和边缘扩展数据平台
- en: 'So far in this book, we have discussed how to plan, design, and implement a
    data platform using the capabilities of a public cloud. However, there are many
    situations where a single public cloud will not be enough because it is inherent
    to the use case for data to originate at, be processed at, or be stored in some
    other location—this could be on premises, in multiple hyperscalers, or in connected
    intelligent devices such as smartphones or sensors. In situations like these,
    there is a new challenge that needs to be addressed: how do you provide a holistic
    view of the platform so that users can effectively mix and join the data spread
    across different places? In this chapter you will learn the approaches, techniques,
    and architectural patterns that your organization can take when dealing with such
    distributed architectures.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在本书中，我们已经讨论了如何利用公共云的能力来规划、设计和实施数据平台。然而，有许多情况下单一公共云将不足够，因为数据在产生、处理或存储时有时候需要位于其他位置——这可以是本地、多个超大规模云提供商，或连接的智能设备如智能手机或传感器。在这些情况下，需要解决一个新的挑战：如何提供平台的整体视图，以便用户可以有效地混合和联接分布在不同位置的数据？在本章中，您将学习处理这类分布式架构时，组织可以采取的方法、技术和架构模式。
- en: Furthermore, there are other situations where you need to make your data work
    in a partially connected or disconnected mode environment. You will learn in this
    chapter how to deal with such a situation leveraging a new approach, called *edge
    computing*, that can bring a portion of storage and compute resources out of the
    cloud and closer to the subject that is generating or using data itself.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有其他一些情况需要使您的数据在部分连接或断开的模式环境中工作。在本章中，您将学习如何利用一种新的方法——称为*边缘计算*，可以将部分存储和计算资源从云中移出，靠近产生或使用数据的主体。
- en: Why Multicloud?
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么要多云？
- en: As a data leader, your organization wants you to continuously look for ways
    to boost business outcomes while minimizing the technology costs you incur. When
    it comes to data platforms, you are expected to manage the entire data lifecycle
    by adopting the best solution available in the market, or at least the one best
    suited to the business’s needs.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 作为数据领导者，您的组织希望您不断寻找方法来提高业务成果，同时尽量减少技术成本。在数据平台方面，您被期望通过采用市场上最佳的解决方案或至少最适合业务需求的解决方案来管理整个数据生命周期。
- en: A Single Cloud Is Simpler and Cost-Effective
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单一云更简单且具有成本效益
- en: 'Consolidating your entire software architecture on a single cloud provider
    is very appealing for several reasons:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 将整个软件架构整合到单一云提供商上在多方面都非常有吸引力：
- en: Simplicity
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 简单性
- en: When using a single cloud provider, the resulting technology stack is much simpler
    and more streamlined. It is often the case that services within a cloud are natively
    integrated. For example, on Google Cloud, the DWH tool (BigQuery) can natively
    read data from the managed relational database (Cloud SQL) with no data movement.
    There is similar zero-ETL integration between Redshift and Aurora on AWS and between
    Azure SQL Data Warehouse and Azure SQL Database (via Azure Synapse Link).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用单一云提供商时，所得到的技术堆栈要简单得多，更加流畅。在云内部服务通常是本地集成的。例如，在Google Cloud上，DWH工具（BigQuery）可以直接从托管的关系数据库（Cloud
    SQL）读取数据，无需数据移动。在AWS上的Redshift和Aurora之间以及在Azure SQL Data Warehouse和Azure SQL Database之间（通过Azure
    Synapse Link）也有类似的零ETL集成。
- en: Learning curve
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 学习曲线
- en: When you have only one cloud, it is easier for employees to move around within
    the organization. Onboarding new employees becomes easier, and it is easier for
    staff to use tools built in other parts of the organization.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当您只有一个云时，员工在组织内部移动变得更加容易。新员工的入职变得更加简单，员工使用在组织其他部分构建的工具也变得更加容易。
- en: Cost
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 成本
- en: Using a single cloud provider makes everything from security to contracting
    simpler. The cost savings on IT and legal services alone can make a single cloud
    the best choice. Because cloud providers provide discounts based on usage, it
    is possible to extract larger discounts by consolidating all technology expenditure
    in one provider.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用单一的云提供商使得从安全到合同都更加简单。仅在IT和法律服务上的成本节省就足以使单一云成为最佳选择。由于云提供商根据使用量提供折扣，通过将所有技术支出整合在一个提供商处，可以获得更大的折扣。
- en: For these reasons, we recommend that small and medium-sized businesses choose
    a single cloud provider and design their architecture using fully managed services
    available on that hyperscaler.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 出于这些原因，我们建议中小型企业选择一个单一的云提供商，并使用该超大规模提供商提供的完全托管服务设计其架构。
- en: Multicloud Is Inevitable
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多云是不可避免的
- en: We find lots of organizations that may want to be on a single cloud but end
    up with a hybrid or multicloud environment. Why?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现许多组织可能希望使用单一云，但最终却在混合或多云环境中结束。为什么呢？
- en: Acquisitions
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 收购
- en: Even if your organization started out with a single cloud, you may acquire a
    company that runs its entire technology stack on another cloud. Now, you are a
    multicloud shop. This is the most common scenario, as the cost of replatforming
    can be very high and not be worth the drag on the business.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 即使您的组织最初只使用一个云，您可能会收购一家在另一个云上运行其整个技术堆栈的公司。现在，您成为了一个多云的商店。这是最常见的情况，因为重新平台化的成本可能非常高，并且可能不值得为业务带来拖累。
- en: Best cloud
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳云
- en: There *are* differences in the capabilities available on different hyperscalers.
    If you really like BigQuery or DynamoDB or Azure OpenAI, believe they are best
    of breed, and have architected your application around those capabilities, you
    will want that application to run on Google Cloud, AWS, or Azure, respectively,
    even if the rest of your technology infrastructure is elsewhere. The differences
    in productivity available with the best/most familiar tools, the ability to start
    shadow IT initiatives with just a credit card, and the disinclination to rewrite
    what’s working mean that many organizations slowly evolve into a de facto multicloud
    system.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在不同超大规模供应商上可用的功能存在差异。如果您真的喜欢BigQuery或DynamoDB或Azure OpenAI，并认为它们是最优秀的，并围绕这些能力构建了您的应用程序，那么您将希望该应用程序在Google
    Cloud、AWS或Azure上运行，即使其余的技术基础设施位于其他地方。使用最佳/最熟悉工具可获得的生产力差异，仅需信用卡即可启动影子IT倡议的能力，以及不愿重写正在运行的内容，意味着许多组织慢慢进化成为事实上的多云系统。
- en: Support customers
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 支持客户
- en: If you are building software that runs within your customers’ environments,
    you will need to support all the major clouds because you will have customers
    on all three clouds. This is why, for example, SAP or Teradata is available on
    AWS, Azure, and Google Cloud.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在构建在客户环境中运行的软件，您将需要支持所有主要的云，因为您将有客户使用三个云。这就是为什么例如SAP或Teradata可以在AWS、Azure和Google
    Cloud上使用的原因。
- en: When faced with these inevitabilities, it is important to recognize that there
    is no reason to become a roadblock. It is no longer necessary to be tied to a
    single vendor and build your entire data stack around a single technology. Cloud
    technologies are far more open than traditional on-premises technologies, and
    businesses can now create complex architectures that rely on multiple interconnected
    environments running various solutions from several vendors or fully open source
    software (e.g., there are companies that are implementing their main site in one
    cloud provider and the disaster-recovery site in another one to reduce the risk
    of dependencies on a single hyperscaler). Of course, this level of freedom comes
    at a cost (in terms of technology and personnel) that is different and requires
    additional governance and management. For example, if you are working with multiple
    hypervisors, you will need to deal with different platforms that may require different
    skills, and you will also have more contracts to manage, which will increase the
    management burden. However, as you will see later, this approach is becoming increasingly
    popular due to the advantages it can offer.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 面对这些必然性时，重要的是要认识到没有理由成为阻碍。不再需要绑定在一个单一供应商上，并围绕单一技术构建整个数据堆栈。与传统的本地技术相比，云技术要开放得多，企业现在可以创建依赖于多个互联环境的复杂架构，这些环境运行着来自多个供应商的各种解决方案或完全开源软件（例如，有些公司将其主站点部署在一个云提供商上，而灾难恢复站点部署在另一个云提供商上，以减少对单一超大规模供应商的依赖风险）。当然，这种自由程度带来了不同的成本（在技术和人员方面），这需要额外的治理和管理。例如，如果您正在使用多个虚拟化技术，您将需要处理可能需要不同技能的不同平台，并且您还将有更多的合同需要管理，这将增加管理负担。然而，正如稍后将看到的那样，由于它可以提供的优势，这种方法正在变得越来越受欢迎。
- en: Multicloud Could Be Strategic
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多云可能是战略性的
- en: 'In talking with IT executives of large enterprises, it is pretty common for
    us to hear that they are working on a digital transformation journey that includes
    a multicloud strategy. There are several examples of large organizations that
    are already adopting a multicloud approach: for example, Apple, which for its
    iCloud services [is leveraging all three main public hyperscalers](https://oreil.ly/ZLo-B);
    or Twitter, which (before a recent buyout) [used Google Cloud Platform](https://oreil.ly/IEtIt)
    for its data platform but powered its news feed [using AWS](https://oreil.ly/uNvmL);
    or HSBC, which splits workloads between Google Cloud and AWS and [migrates some
    legacy services to Azure](https://oreil.ly/SSjc2).'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在与大型企业的IT高管交谈中，我们经常听到他们正在进行包括多云战略在内的数字转型之旅。已有多个大型组织采用多云方法，例如，苹果为其iCloud服务[利用了三大公共超大规模云服务商](https://oreil.ly/ZLo-B)；Twitter（在最近的收购之前）[使用Google
    Cloud平台](https://oreil.ly/IEtIt)进行其数据平台的支持，但是为其新闻提供了[AWS的动力支持](https://oreil.ly/uNvmL)；或者汇丰银行，将工作负载分担在Google
    Cloud和AWS之间，并[将一些传统服务迁移到Azure](https://oreil.ly/SSjc2)。
- en: When done right, multicloud allows you to add value for the business by combining
    the best-of-breed solutions deployed on different environments. It is, in practice,
    the development of a brand-new ecosystem of interconnected services that becomes
    the landing zone for all the company’s solutions.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当正确执行时，多云可以通过在不同环境中部署的最佳解决方案相结合，为业务增加价值。实际上，这是一个全新的互联服务生态系统的开发，成为公司所有解决方案的着陆区。
- en: 'What are the main drivers for the adoption of a multicloud environment? The
    most relevant are:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 采用多云环境的主要驱动因素是什么？最重要的是：
- en: Fear of lock-in
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 担心被锁定
- en: This is one of the biggest concerns organizations have because they do not want
    to fall under the “tyranny” of a single provider. This is not a technology concern
    (as there is no way to escape lock-in, either to a cloud or to a multicloud software
    vendor) but more of a business strategy one.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这是组织面临的最大关注之一，因为他们不希望陷入单一提供商的“专制”之下。这不是技术问题（因为无论是对云还是对多云软件供应商，都无法摆脱锁定），而更多是一种业务战略问题。
- en: Exit strategy
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 退出策略
- en: The ability to leave a provider in case of a failure (that can be even a contractual
    breach).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在出现失败情况（甚至可能是合同违约）时离开服务提供商的能力。
- en: Leverage
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 利用
- en: Your management may want to preserve negotiating leverage with the hyperscalers
    by maintaining two or more cloud providers.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 管理层可能希望通过维持两个或更多的云服务提供商来保留与超大规模云服务供应商的谈判筹码。
- en: Commercial
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 商业
- en: It may be that your organization uses Microsoft’s enterprise software, sells
    on Amazon, and advertises on Google. There may be a larger commercial imperative
    to have a footprint on more than one public cloud.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 可能您的组织使用微软的企业软件，在亚马逊上销售，并在谷歌上进行广告宣传。可能存在一个更大的商业需求，在多个公共云上留下印记。
- en: Regulatory requirements
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 法规要求
- en: Maybe one provider does not offer proper services in selected regions or with
    an adequate set of services in that region (e.g., disaster recovery).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 也许某个提供商在特定地区提供的服务不合适，或者在该地区提供的服务集不够充足（例如，灾难恢复）。
- en: Sustainability
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 可持续性
- en: Companies want to choose the best sustainable cloud because it is critical to
    meet future trends in environmental, social, and corporate governance strategy.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 公司希望选择最佳的可持续云，因为这对满足未来环境、社会和公司治理战略的趋势至关重要。
- en: Innovation
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 创新
- en: Adoption of solutions without barriers of cost, commercial aspect, or functionality.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 采用解决方案，没有成本、商业方面或功能方面的障碍。
- en: Knowledge
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 知识
- en: It is critical to provide an environment for employees to succeed without barriers
    and where people can leverage the skills they have already gained during their
    career or can gain new ones.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 提供一个无障碍的环境，让员工能够成功，并且人们可以利用他们在职业生涯中已经获得的技能或者获得新技能是至关重要的。
- en: Portability
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 可移植性
- en: Hyperscaler proprietary solutions tend to be limited in terms of where you can
    run them, whereas open source solutions that run on multiple clouds are often
    also usable on premises and on the edge.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 超大规模云服务商专有的解决方案在运行位置方面往往受限，而在多云上运行的开源解决方案通常也可以在本地和边缘设备上使用。
- en: Now that you have a better understanding of why you should consider a multicloud
    strategy for your business, let’s look at some architectural patterns you can
    use to make it a reality.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您对于为您的业务考虑多云战略的原因有了更好的理解，让我们来看看一些可以用来实现这一战略的架构模式。
- en: Multicloud Architectural Patterns
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多云架构模式
- en: Multicloud architectures can use different patterns to connect data and allow
    users to interact with all the solutions required for analysis. In this section,
    you will learn about the most common patterns you will encounter when working
    with these paradigms.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 多云架构可以使用不同的模式来连接数据，并允许用户与所有需要分析的解决方案进行交互。在本节中，您将了解与这些范式一起工作时可能遇到的最常见模式。
- en: Single Pane of Glass
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 单一视图
- en: 'One of the biggest challenges is to develop a solution to enable data analysis
    across several data silos that might be seated in various locations managed by
    different vendors. To achieve that, it is essential to leverage open solutions
    that are *cloud agnostic* by definition and that are capable of being connected
    with several and different data sources, with the ability to blend the data when
    needed. There are mainly two different approaches that can be leveraged here:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 最大的挑战之一是开发解决方案，使得能够跨多个由不同供应商管理的各种位置的数据孤岛进行数据分析。为了实现这一目标，利用那些从本质上讲是*云无关*的开放式解决方案，并且能够在需要时与多个不同的数据源连接和混合数据是至关重要的。在这里可以利用主要有两种不同的方法：
- en: BI tool–based approach, as depicted in [Figure 9-1](#single_pane_of_glass_leveraging_a_bi_so)
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于BI工具的方法，如图[9-1](#single_pane_of_glass_leveraging_a_bi_so)
- en: Processing engine–based approach, as depicted in [Figure 9-2](#single_pane_of_glass_leveraging_a_distr)
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于处理引擎的方法，如图[9-2](#single_pane_of_glass_leveraging_a_distr)
- en: '![Single pane of glass leveraging a BI solution](assets/adml_0901.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![利用BI解决方案的单一视图](assets/adml_0901.png)'
- en: Figure 9-1\. Single pane of glass leveraging a BI solution
  id: totrans-53
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9-1\. 利用BI解决方案的单一视图
- en: '![Single pane of glass leveraging a distributed process engine solution](assets/adml_0902.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![利用分布式处理引擎解决方案的单一视图](assets/adml_0902.png)'
- en: Figure 9-2\. Single pane of glass leveraging a distributed process engine solution
  id: totrans-55
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9-2\. 利用分布式处理引擎解决方案的单一视图
- en: 'In the first one, you are delegating to the BI tool (e.g., Looker or Power
    BI) the task of connecting multiple sparse data sources, retrieving related information,
    executing queries remotely, and eventually aggregating results. In the second
    approach, you are instead giving the process engine (e.g., PrestoSQL, BigQuery
    Omni) the ability to be connected with various data sources sitting in different
    environments. There could be in this case two different approaches:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一种方法中，您委托BI工具（例如Looker或Power BI）连接多个稀疏数据源、检索相关信息、远程执行查询并最终聚合结果的任务。在第二种方法中，您将处理引擎（例如PrestoSQL、BigQuery
    Omni）与位于不同环境中的各种数据源连接起来。在这种情况下可能存在两种不同的方法：
- en: Leverage a distributed environment spanning multiple hyperscalers (e.g., BigQuery
    Omni), providing the final users with a single pane of glass to interact with
    the solution
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用跨多个超大规模环境的分布式环境（例如，BigQuery Omni），为最终用户提供与解决方案交互的单一视图
- en: Leverage connectors (e.g., Java Database Connectivity [JDBC]) to query and blend
    data across multiple systems
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用连接器（例如Java数据库连接[JDBC]）来跨多个系统查询和混合数据
- en: Write Once, Run Anywhere
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一次编写，多处运行
- en: 'A common approach to gain cloud optionality is to use software that can be
    run as-is on different hyperscale platforms. There are several potential ways
    to achieve this pattern:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 获得云选择性的常见方法是使用可以直接在不同超大规模平台上运行的软件。有几种可能的方法来实现这种模式：
- en: Managed open source software
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 管理的开源软件
- en: You could use Apache Airflow (an open source tool) for your workflow orchestration
    but avoid the overhead of managing it by using Amazon Managed Workflows for Apache
    Airflow (MWAA), Cloud Composer on Google Cloud, or Azure Data Factory on Azure.
    This way, developer-written code is portable across clouds, but you still get
    the benefits of managed services, other than for small differences in initial
    setup. This pattern of using open source with different managed services on different
    hyperscalers works in several other situations, including Presto, Spark, PyTorch,
    and TensorFlow.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用Apache Airflow（一种开源工具）来进行工作流编排，但通过使用Amazon Managed Workflows for Apache
    Airflow（MWAA）、Google Cloud的Cloud Composer或Azure的Azure Data Factory来避免管理的开销。这样，开发人员编写的代码可以在各种云上进行移植，同时仍能获得托管服务的好处，除了初始设置中的一些小差异。在不同超大规模上使用开源与不同托管服务的模式，例如Presto、Spark、PyTorch和TensorFlow，在许多其他情况下同样适用。
- en: Multicloud products
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 多云产品
- en: Tools such as Snowflake, Confluent Kafka, and Databricks are available as fully
    managed services on the major hyperscalers. As such, it is possible to take a
    Snowflake workload consisting of Snowflake SQL, Snowpark, etc., on AWS and run
    it nearly as-is on Azure or GCP. Be aware that there is often some lag between
    the versions of the software that are available on the different hyperscalers.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 工具如 Snowflake、Confluent Kafka 和 Databricks 在主要超级云平台上提供完全托管的服务。因此，可以将由 Snowflake
    SQL、Snowpark 等组成的 Snowflake 工作负载在 AWS 上运行，并且几乎原封不动地在 Azure 或 GCP 上运行。需要注意的是，不同超级云平台上软件版本的可用性通常会有一些滞后。
- en: Multiple runners
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 多个跑步者
- en: Google Cloud made the software API used for writing Cloud Dataflow pipelines
    open source as Apache Beam. Because Apache Flink and Apache Spark now offer runner
    implementations for Apache Beam, you can run Apache Beam pipelines with minimal
    changes on managed Flink services such as Amazon Kinesis Data Analytics.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Google Cloud 将用于编写 Cloud Dataflow 流水线的软件 API 开源为 Apache Beam。因为 Apache Flink
    和 Apache Spark 现在提供 Apache Beam 的运行器实现，所以可以在托管的 Flink 服务（如 Amazon Kinesis Data
    Analytics）上几乎不经过大量更改地运行 Apache Beam 流水线。
- en: OSS abstraction layer
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS 的开源软件抽象层
- en: Instead of invoking an LLM through the prompting APIs offered by Azure OpenAI
    or Google Cloud Vertex AI, you could choose to access the models through LangChain,
    which provides a consistent interface. This allows you to keep the software workload
    portable between different LLM providers (although you will have to verify that
    the prompts in question do work interchangeably).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 不是通过 Azure OpenAI 或 Google Cloud Vertex AI 提供的提示 API 调用 LLM，而是选择通过 LangChain
    访问模型，LangChain 提供一致的接口。这样可以在不同的 LLM 提供商之间保持软件工作负载的可移植性（尽管您需要验证相关提示是否可以互换使用）。
- en: OSS on IaaS
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS 上的开源软件
- en: Open source software such as Dask, Modin, RAPIDS, etc., can be run on virtual
    machines or clusters rented from the hyperscalers. Try to avoid this unless you
    have the scale of usage where managing the software on IaaS is cost-effective.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 诸如 Dask、Modin、RAPIDS 等的开源软件可以在从超级云平台租用的虚拟机或集群上运行。除非您具有管理 IaaS 上软件成本效益高的使用规模，否则应尽量避免这种情况。
- en: Bursting from On Premises to Cloud
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从本地突发到云端
- en: This is a pattern aimed to support organizations who have a large data lake
    on prem and want to expand their footprint into the cloud but are not ready to
    complete a full migration yet. Hybrid workloads can help address their immediate
    pain points, and as an added bonus, they can actually pave the way for future
    migration by showing how easy it is to adopt and use cloud technologies.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种旨在支持在本地拥有大型数据湖并希望扩展到云端但尚未完全迁移的组织的模式。混合工作负载可以帮助解决他们的直接痛点，并作为未来迁移的铺路石，展示采用和使用云技术是多么简单。
- en: The easiest way to get started with a cloud approach is to burst on-prem Hadoop
    workloads. Bursting is great for organizations with significant investments in
    both the hardware and Hadoop-related stack that are capacity constrained. Prime
    candidates for bursting are large one-off jobs—for example, monthly reports that
    require a large cluster to process the data. Bursting works really well for the
    cases where multiple jobs can run against the data uploaded to a blob storage
    service (e.g., AWS S3, Google Cloud Storage, Azure Blob Storage) and where the
    data used for processing can be incrementally updated. One of the main advantages
    of this solution is that the same Spark or Hive job that runs on prem can run
    on a PaaS cluster (e.g., Amazon EMR, Google Cloud Dataproc, Azure HDInsight).
    It resonates with the organizations that value open source solutions and prefer
    no vendor lock-in. What is important here is that all the upstream processes of
    ingesting the data into the data lake remain unchanged. All of this significantly
    minimizes the risk of redoing and retesting existing processes and shortens the
    time to the first deployment.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 采用云方法开始的最简单方式是将本地 Hadoop 工作负载突发。对于在硬件和与 Hadoop 相关的堆栈上都有重大投资且受容量限制的组织来说，突发非常适合。突发的主要应用场景包括大型一次性作业，例如需要大型集群处理数据的月度报告。突发在那些可以针对上传到
    blob 存储服务（例如 AWS S3、Google Cloud Storage、Azure Blob Storage）的数据运行多个作业，并且处理所用数据可以进行增量更新的情况下效果非常好。这种解决方案的主要优势之一是，同样的
    Spark 或 Hive 作业既可以在本地运行，也可以在 PaaS 集群（例如 Amazon EMR、Google Cloud Dataproc、Azure
    HDInsight）上运行。这与重视开源解决方案并且偏好不绑定供应商的组织非常契合。重要的是，这里所有的数据湖中数据摄入的上游流程保持不变。所有这些显著降低了重新执行和重新测试现有流程的风险，并缩短了首次部署时间。
- en: How does it actually work? This approach uses Hadoop’s distributed copy tool,
    also known as *DistCp*, to move data from your on-premises HDFS to the target
    cloud blob storage. Once the data is transferred, a PaaS cluster gets created
    and Spark jobs can be run on this cluster. Once the job is completed, the cluster
    gets destroyed, the job results are saved, and, if you are not planning to run
    additional jobs, the blob storage bucket can be destroyed too. Orchestration of
    the burst workloads can be done leveraging open source solutions like Airflow
    that can work both on premises and in the cloud (available even in a PaaS mode,
    via Google Cloud Composer, for example), as you can see in [Figure 9-3](#bursting_hadoop_on_premises_workload).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 它实际上是如何工作的？这种方法使用Hadoop的分布式复制工具，也称为*DistCp*，从您的本地HDFS移动数据到目标云Blob存储。数据传输完成后，会创建一个PaaS集群，可以在该集群上运行Spark作业。作业完成后，集群被销毁，作业结果被保存，如果不计划运行其他作业，则可以销毁Blob存储桶。可以利用像Airflow这样的开源解决方案来协调突发工作负载，该解决方案可以在本地和云端工作（例如，通过Google
    Cloud Composer也可以在PaaS模式下使用），如[图9-3](#bursting_hadoop_on_premises_workload)所示。
- en: '![Bursting Hadoop on-premises workload](assets/adml_0903.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![在本地Hadoop工作负载中突发](assets/adml_0903.png)'
- en: Figure 9-3\. Bursting Hadoop on-premises workload
  id: totrans-76
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9-3. 在本地Hadoop工作负载中突发
- en: 'Additional use cases that this pattern covers are:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这种模式涵盖的其他用例包括：
- en: The ability for organizations to test version upgrades. It is often less risky
    and less costly to start a PaaS cluster in the cloud with a particular Spark version
    and verify that the job works on a subset of on-prem data.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组织测试版本升级的能力。在云中启动特定Spark版本的PaaS集群并验证作业在部分本地数据上是否正常工作，通常比完全迁移更少风险和成本高昂。
- en: Experimentation and testing new technologies (e.g., integration of third-party
    services directly in Spark jobs).
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实验和测试新技术（例如直接在Spark作业中集成第三方服务）。
- en: Bursting is a common pattern that we have seen so many times in several organizations;
    let’s have a look at how we can expand it.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 突发是我们在多个组织中多次看到的常见模式；让我们看看如何扩展它。
- en: Pass-Through from On Premises to Cloud
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从本地到云端的直通
- en: This pattern can be viewed as complementary to the previous one. In the previous
    scenario, we showed how to move a portion of the on-prem data lake to a cloud
    blob storage bucket using a Hadoop native tool, DistCp. Once the data is there,
    then—in addition to Hadoop native tools—the organization can leverage other process
    engines’ (e.g., AWS Redshift, Google BigQuery, Azure Synapse) tools to process
    the data, as described in [Figure 9-4](#hadoop_pass_through_to_enable_process_d).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这种模式可以视为前一个模式的补充。在前一个场景中，我们展示了如何使用Hadoop原生工具DistCp将部分本地数据湖移动到云Blob存储桶。一旦数据到位，组织可以利用其他处理引擎的工具（如AWS
    Redshift、Google BigQuery、Azure Synapse）来处理数据，如[图9-4](#hadoop_pass_through_to_enable_process_d)中描述。
- en: 'Several workloads can be enabled by leveraging a cloud process engine:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 利用云处理引擎可以启用多个工作负载：
- en: Process ORC, Parquet, or Avro files, including Hive-partitioned data, leveraging
    federated queries.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理ORC、Parquet或Avro文件，包括Hive分区数据，利用联合查询。
- en: 'Join on-prem originated data with data in the cloud: a great example is joining
    an organization’s transactional data located on prem with data loaded from marketing
    tools like Adobe or Google Analytics.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将本地数据与云中数据联接：一个很好的例子是将组织的事务数据（位于本地）与从营销工具（如Adobe或Google Analytics）加载的数据联接。
- en: Build models based on on-prem data leveraging AI/ML tools.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于本地数据构建模型，利用AI/ML工具。
- en: Run batch predictions at scale on the on-prem data.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在本地数据上运行规模化的批量预测。
- en: '![Hadoop pass-through to enable process data in the cloud](assets/adml_0904.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![Hadoop通过启用云中的过程数据](assets/adml_0904.png)'
- en: Figure 9-4\. Hadoop pass-through to enable process data in the cloud
  id: totrans-89
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9-4. Hadoop通过启用云中的过程数据
- en: 'With this approach, it is important to note some key points:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法，重要的是注意一些关键点：
- en: In contrast to the full migration, there is no need to change any of the systems
    that feed or use the on-prem data lake.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与完全迁移相比，无需更改任何供给或使用本地数据湖的系统。
- en: Data analysis can be done through a cloud process engine in addition to the
    Hadoop tools.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除了Hadoop工具外，还可以通过云处理引擎进行数据分析。
- en: Once the data is transferred to the cloud storage bucket, there is no additional
    delay or processing needed to access federated data via the selected process engine.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据一旦传输到云存储桶中，通过选择的处理引擎访问联合数据时无需额外延迟或处理。
- en: The same data transferred to the cloud bucket can be processed by the same Spark
    jobs that run on prem.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将相同的数据传输到云存储桶，可以由在本地运行的相同Spark作业进行处理。
- en: Integration platform as a service (iPaaS) solutions like Informatica, Talend,
    TIBCO, or MuleSoft can be handled to facilitate the integration of data sources
    and maintain synchronization.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 像Informatica、Talend、TIBCO或MuleSoft这样的集成平台即服务（iPaaS）解决方案可以用来促进数据源的集成并保持同步。
- en: Data Integration Through Streaming
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 流式数据集成
- en: Organizations have barriers between databases and applications, on premises
    and in the cloud. Processes are batch, so they don’t support the fast operational
    decision making that businesses demand. Services are often self-managed, legacy
    and not built for the cloud, and expensive to run and maintain. This results in
    expensive, slow, and fragmented system architectures.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 组织之间存在数据库和应用程序之间的障碍，无论是在本地还是在云端。处理过程是批处理的，因此不支持企业需要的快速运营决策。服务通常是自我管理的、遗留的，不适合云环境，并且运行和维护成本高昂。这导致了昂贵、缓慢和碎片化的系统架构。
- en: '*Change streaming* is the movement of data changes as they happen from a (typically
    database) source to a destination. Powered by CDCs, change streaming has become
    a critical data architecture building block. Global companies are demanding CDC
    to provide replication capabilities across different data sources and provide
    a real-time source of streaming data for real-time analytics and business operations.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '*变更流*是将数据更改作为它们发生的移动，从（通常是数据库）源到目标的过程。由CDC支持，变更流已成为关键的数据架构构建块。全球公司正在要求CDC提供跨不同数据源的复制能力，并为实时分析和业务运营提供实时流式数据源。'
- en: 'But what is CDC? CDC is an approach to data integration that enables organizations
    to integrate and analyze data faster, using fewer system resources. It’s a method
    for pulling only the latest changes (updates, inserts, or deletes) from a data
    source, often by reading the log of changes that the source keeps for its own
    internal transactional integrity. CDC is a highly effective mechanism for limiting
    the impact on the source when loading new data into operational data stores and
    DWHs, and it eliminates the need for bulk-load updating and inconvenient batch
    windows by enabling incremental loading or real-time streaming of data changes
    into a data destination. CDC can be used in many use cases that derive value from
    constant access to data changes as they happen; the most common use cases, in
    order of commonality, are as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 那么CDC是什么呢？CDC是一种数据集成方法，使组织能够更快地集成和分析数据，同时使用更少的系统资源。它是一种从数据源中仅拉取最新更改（更新、插入或删除）的方法，通常通过读取数据源保留的变更日志来实现。CDC对于将新数据加载到操作数据存储和数据仓库时减少对源系统影响非常有效，它消除了批量加载更新和不便的批处理窗口的需要，通过使增量加载或实时流式数据更改进入数据目标成为可能。CDC可以在许多从数据实时变化中获取价值的使用案例中使用；按照常见程度排序，最常见的使用案例如下：
- en: Analytics
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 分析
- en: By integrating CDC for loading data into a DWH, organizations can, for example,
    get up-to-date materialized views of source data. Organizations can use this continuously
    updated data to build up-to-date dashboards for the data. These can be used, for
    example, for monitoring your systems and for deriving up-to-date insights about
    the state of your business, as described in the [Figure 9-5](#cdc_architecture_to_enable_analytics).
    There is always a trade-off you have to consider between the business impact of
    data freshness and the cost to collect and process it.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 通过集成CDC以将数据加载到数据仓库中，组织可以例如获取源数据的最新物化视图。组织可以使用这些持续更新的数据来构建最新的仪表板，用于监视系统并获取关于业务状态的最新洞察，如[图9-5](#cdc_architecture_to_enable_analytics)所述。在数据新鲜度对业务影响和收集处理成本之间必须权衡考虑。
- en: '![CDC architecture to enable analytics](assets/adml_0905.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![启用分析的CDC架构](assets/adml_0905.png)'
- en: Figure 9-5\. CDC architecture to enable analytics
  id: totrans-103
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9-5. 启用分析的CDC架构
- en: Database replication and synchronization scenarios
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库复制和同步场景
- en: By integrating CDC for loading data into SQL databases, organizations can get
    up-to-date materialized views of their source data in these databases. Organizations
    can use this continuously updated data in the destination databases for a low-downtime
    database migration from the source to the destination or for multi/hybrid-cloud
    configurations, where the source and destination reside in different hosting environments,
    as you can see in [Figure 9-6](#cdc_architecture_to_enable_database_rep).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 通过集成CDC来将数据加载到SQL数据库，组织可以在这些数据库中获得其源数据的最新材料化视图。组织可以在目标数据库中使用这些持续更新的数据，以实现从源到目标的低停机时间数据库迁移，或者用于多/混合云配置，其中源和目标位于不同的托管环境中，正如您可以在[图 9-6](#cdc_architecture_to_enable_database_rep)中看到的。
- en: '![CDC architecture to enable database replication and synchronization](assets/adml_0906.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![CDC架构以实现数据库复制和同步](assets/adml_0906.png)'
- en: Figure 9-6\. CDC architecture to enable database replication and synchronization
  id: totrans-107
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-6\. 用于实现数据库复制和同步的CDC架构
- en: Event-driven architectures
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 事件驱动架构
- en: Modern microservices-based architectures rely on central hubs of data that are
    updated with events continuously from across your organization to be event driven.
    By continuously writing into destinations such as a cloud blob storage, organizations
    can build event-driven architectures that are based on consumption of event data
    from these destinations, as described in [Figure 9-7](#cdc_architecture_to_implement_event_dri).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现代基于微服务的架构依赖于数据的中心化数据中心，这些数据中心持续不断地从整个组织中更新事件以实现事件驱动。通过持续写入到云blob存储等目的地，组织可以构建基于消费来自这些目的地的事件数据的事件驱动架构，如[图 9-7](#cdc_architecture_to_implement_event_dri)所述。
- en: '![CDC architecture to implement event-driven architecture](assets/adml_0907.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![CDC架构以实现事件驱动架构](assets/adml_0907.png)'
- en: Figure 9-7\. CDC architecture to implement event-driven architecture
  id: totrans-111
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-7\. 用于实现事件驱动架构的CDC架构
- en: Now that you have a better understanding of the possible patterns that allow
    you to build multicloud data capabilities, let’s have a look at how to adopt an
    overall multicloud strategy.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您对允许构建多云数据能力的可能模式有了更好的理解，让我们看看如何采纳全面的多云战略。
- en: Adopting Multicloud
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 采纳多云
- en: Adoption of a multicloud paradigm is a part of a strategy that should be then
    translated into an IT architecture.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 采纳多云范式是战略的一部分，应该随后转化为IT架构。
- en: Framework
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 框架
- en: To translate a multicloud strategy into a multicloud IT architecture, enterprise
    architects leverage some common framework like TOGAF (The Open Group Architecture
    Framework) to identify business needs, define what data is needed to support the
    process, and define how this data is processed by the applications (Architecture
    Development Model [ADM] process), as represented in [Figure 9-8](#adm_cycle_as_per_the_togaf_framework).
    Once completed, it is possible to identify technology requirements that bring
    vision to an integrated architecture, and here multicloud paradigms offer organizations
    a high level of flexibility and freedom.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要将多云战略转化为多云IT架构，企业架构师利用像TOGAF（开放组织架构框架）这样的常见框架来识别业务需求，定义支持过程所需的数据以及应用程序如何处理这些数据（架构开发模型[ADM]过程），如[图 9-8](#adm_cycle_as_per_the_togaf_framework)所示。完成后，可以确定技术需求，为整合架构带来视野，而多云范式为组织提供了高度的灵活性和自由度。
- en: '![ADM cycle as per the TOGAF framework](assets/adml_0908.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![TOGAF框架下的ADM周期](assets/adml_0908.png)'
- en: Figure 9-8\. ADM cycle as per the [TOGAF framework](https://oreil.ly/nWTYa)
  id: totrans-118
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-8\. 根据[TOGAF框架](https://oreil.ly/nWTYa)的ADM周期
- en: Having access to a wide range of services is certainly an opportunity, but it
    is important to manage it carefully to avoid losing focus. It is crucial to identify
    the services that can help you achieve your business goals in accordance with
    your strategy and organizational rules, particularly on the compliance side. This
    is especially important today, as organizations are increasingly (re)insourcing
    IT functions to take ownership and control of their software and solutions.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 能够访问广泛的服务当然是一个机会，但是重要的是要小心管理，以避免失去焦点。识别能够帮助您按照战略和组织规则实现业务目标的服务至关重要，特别是在合规方面。随着组织越来越多地将IT功能重新(内)部署以拥有其软件和解决方案的所有权和控制权，这一点尤为重要。
- en: Let’s take the financial services industry as an example. We can see that a
    lot of investment has been made in transforming legacy environments (mainly based
    on mainframe solutions) into something modern, especially on the data side. Fraud
    detection systems are based on real-time analytics, know-your-customer processes
    work thanks to advanced ML algorithms, and anti-money laundering requires the
    ability to process huge amounts of data. Obtaining access to such a specific solution/workload
    can be difficult if relying on a single provider; hence, organizations are looking
    at a multicloud approach to get the best of breed to meet their needs.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以金融服务行业为例。我们可以看到，大量投资已经用于转变传统环境（主要基于主机解决方案）成为现代化解决方案，特别是在数据方面。诈骗检测系统基于实时分析，了解客户流程依靠先进的ML算法工作，反洗钱需要处理大量数据。如果仅依赖于单一提供商，则很难获得这种特定的解决方案/工作负载；因此，组织正在考虑采用多云方法以获取最佳解决方案以满足其需求。
- en: Time Scale
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 时间尺度
- en: 'It is important to identify the time scale at which multicloud is to be adopted.
    Specifically:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 确定采用多云的时间尺度非常重要。具体来说：
- en: Some organizations *may never fully migrate to the public cloud*, perhaps because
    they are in finance or healthcare and need to obey strict industry regulations
    on how data is stored. For them, “data residency” is very important. Some enterprises
    may want to protect their legacy on-prem workloads like SAP, Oracle, or Informatica
    but at the same time want to take advantage of public cloud innovations like fully
    managed DWHs.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些组织*可能永远不会完全迁移到公共云*，可能是因为它们属于金融或医疗行业，需要遵守严格的行业规定以及数据存储方式。对于它们来说，“数据驻留”非常重要。有些企业可能希望保护其类似SAP、Oracle或Informatica的本地工作负载，但同时也希望利用公共云创新技术，如全面管理的数据仓库。
- en: 'Other large enterprises instead are committed to their multiyear journey to
    *modernize with native public cloud*: they will have to adopt multicloud architectures
    as an end state for years.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他大型企业则致力于他们多年的*与本地公共云现代化*之旅：他们将不得不在多年内采用多云架构作为最终状态。
- en: 'Finally, there are organizations who are *not ready to migrate yet* but *have
    challenges of meeting business SLAs due to ad hoc large batch jobs*: they want
    to take advantage of the scalable capacity of public clouds and avoid the cost
    to scale up the on-premises infrastructure.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，有些组织*尚未准备好迁移到公共云*，但由于临时大批处理作业的挑战，*无法满足业务SLA*：他们希望利用公共云的可扩展能力，并避免增加本地基础设施的成本。
- en: With the preceding concepts in mind, how do you end up with a multicloud architecture?
    Let’s dig into that.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在前述概念的基础上，如何形成多云架构？让我们深入探讨。
- en: Define a Target Multicloud Architecture
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义目标多云架构
- en: You can follow the same approach (covered in the previous chapters) as when
    you worked with one single (public or private) cloud provider, but you need to
    (1) repeat the approach for every vendor involved and (2) do so in the context
    of an overarching target architecture.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以采用与之前章节讨论的相同方法（处理单个（公共或私有）云供应商时），但您需要（1）为每个涉及的供应商重复该方法，并且（2）在总体目标架构的背景下执行此操作。
- en: 'The following steps will help you define and adopt your target cloud architecture:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助您定义和采纳目标云架构：
- en: 1\. Define your strategy.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 制定您的策略。
- en: You need to have a clear understanding of your goals before adopting a multicloud
    strategy. These goals could be related to business, strategy, or technology. Once
    you know your goals, you need to identify the drivers that are pushing you toward
    a multicloud strategy. These drivers could be cost, lack of features, openness,
    or regulatory compliance. For example, if you are adopting a multicloud strategy
    for leverage, you would want to put your most easily transferable workloads (e.g.,
    Hadoop or Kafka) on the secondary cloud. Once you have a clear understanding of
    your goals and drivers, you can proceed to the next steps in your multicloud journey.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在采用多云战略之前，您需要清楚地了解自己的目标。这些目标可能与业务、战略或技术相关。一旦确定了您的目标，您需要识别推动您采用多云战略的驱动因素。这些驱动因素可能是成本、功能缺失、开放性或法规合规性。例如，如果您采用多云策略是为了利用优势，您可能会将最易迁移的工作负载（例如Hadoop或Kafka）放在次要云上。一旦您清楚了解了您的目标和驱动因素，您就可以继续您多云旅程中的下一步骤。
- en: 2\. Develop the team.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 发展团队。
- en: 'When talking about cloud in general, the number of skills that are needed can
    be incredibly high. Identity, security, networking, coding, etc., are just a few
    of the topics that cloud engineers should be able to master. When dealing with
    multicloud architectures, this set of skills becomes numerous because even if
    the topics are interchangeable from a high-level point of view, there is the need
    to bring deep and specific knowledge related to the platform that engineers have
    to operate. It’s usually imperative that you set up a Cloud Center of Excellence
    as described in [“Step 1: Strategy and Planning”](ch02.html#step_one_strategy_and_planning)
    so that all the needed skills are brought together under a “single hat,” becoming
    the reference for the entire project.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 谈到云时，所需的技能可能非常丰富。身份、安全性、网络、编程等只是云工程师应该掌握的一些主题。处理多云架构时，这套技能变得更加庞大，因为即使这些主题在高层面上是可以互换的，但工程师们必须具备深入和特定平台相关的知识。通常情况下，你需要建立一个云卓越中心，如[“第1步：战略与规划”](ch02.html#step_one_strategy_and_planning)所述，以便将所有所需技能聚集在一个“单一的帽子”下，成为整个项目的参考基础。
- en: 3\. Assess.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 评估。
- en: To identify a candidate target solution, it is necessary to have a better understanding
    of what is currently operational. This part is crucial because it can completely
    change the approach in the following steps. Are you going to perform a lift and
    shift to maintain solutions your organization has, or is it better to adopt an
    approach based on replatforming/redeveloping to get the most from the cloud provider?
    Usually, in this step there are tools that simplify the discovery and that collect
    several pieces of data that can be used to define a migration plan. Moving to
    a fully serverless architecture with cloud native tools tends to be the best solution,
    but it may not be feasible in the short term with the resources you have at your
    disposal.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要识别候选目标解决方案，有必要更好地了解当前的运作情况。这部分至关重要，因为它完全可以改变接下来步骤的方法。你是否将执行搬迁和转移以维护组织已有的解决方案，还是最好采取基于重新平台化/重新开发的方法来充分利用云提供商的优势？通常，在此步骤中有一些工具可以简化发现，收集多种数据片段，这些数据可以用来定义迁移计划。使用云原生工具过渡到完全无服务器架构往往是最佳解决方案，但在短期内使用你手头拥有的资源可能并不可行。
- en: 4\. Design the architecture.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 设计架构。
- en: Once the business goals are clear and you have the sufficient knowledge to make
    everything real, start to translate requirements into a technology architecture.
    Define how components will talk to one another, how they will exchange information,
    and how they can work together to execute defined tasks. The architect’s goal
    is to identify the best possible solution to give more flexibility to the final
    users, guaranteeing the maximum level of security and performance while keeping
    an eye on the overall cost.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦业务目标明确，你有足够的知识使一切成为现实，开始将需求转化为技术架构。定义组件如何相互通信，如何交换信息，以及如何共同执行定义的任务。架构师的目标是确定最佳解决方案，为最终用户提供更大的灵活性，保证最高水平的安全性和性能，同时关注整体成本。
- en: 5\. Prepare a migration plan.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 准备迁移计划。
- en: 'Once you have collected all the information about where to start and where
    you want to go, you must identify how to get there: modality, timelines, effort
    required, and milestones. It is even important to understand what the relationships
    between different activities/environments are and what are possible dependencies,
    if any.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你收集到关于从哪里开始和要去哪里的所有信息，你必须确定如何到达目的地：模式、时间表、所需工作量和里程碑。了解不同活动/环境之间的关系以及可能的依赖关系也很重要。
- en: 6\. Build the landing zone.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. 构建着陆区。
- en: Everything starts with the landing zone’s definition (as you have read in [Chapter 4](ch04.html#a_migration_framework)),
    the foundational environments where workloads will be deployed*:* identity and
    access management, network connectivity, security, monitoring, and cost management
    are just a few of the elements that need to be taken into consideration at this
    stage. This stage is fundamental to prepare the target environment receiving data
    as per the model defined in the previous step.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 一切始于着陆区的定义（如在[第4章](ch04.html#a_migration_framework)中所读到的），这是工作负载将被部署的基础环境*：*身份和访问管理、网络连接、安全性、监控和成本管理只是这个阶段需要考虑的一些元素。这个阶段对于准备接收根据上一步定义的模型传输数据的目标环境至关重要。
- en: 7\. Migrate and transform.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 7\. 迁移和转换。
- en: Based on all the things defined in the previous steps, it is time to migrate
    solutions into the new architecture. In this final step, we will shift our applications
    to the new environments, apply new services, or entirely rebuild applications
    leveraging native services.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 基于前面步骤中定义的所有内容，现在是将解决方案迁移到新架构的时候了。在这最后一步中，我们将把我们的应用程序转移到新的环境中，应用新的服务，或者完全重建应用程序以利用原生服务。
- en: 'Now that you have a better understanding of how to deal with multicloud architecture,
    let’s deep dive into another hybrid paradigm: edge computing.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您对如何处理多云架构有了更好的理解，让我们深入探讨另一种混合范式：边缘计算。
- en: Why Edge Computing?
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么要进行边缘计算？
- en: '*Edge computing* in a nutshell is the architectural pattern that promotes the
    execution of the data processing right where the data is generated, even though
    it’s at the periphery of the architecture.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '*边缘计算* 简而言之是促进数据处理在数据生成的地方执行的架构模式，即使它是在架构的边缘。'
- en: Edge computing is a complement of the cloud computing paradigm. While cloud
    enables organizations to get access to infinitely scalable computing and storage
    resources with a centralized approach, edge computing is meant to address different
    challenges. Edge computing helps organizations handle workloads that require data
    to be processed in place (or with a very low latency) or when activities need
    to be running even in case of a disconnection from the network. While cloud computing
    is more oriented toward bringing the business to planet scale, edge computing
    is more focused on bringing capabilities closer to the decision point (i.e., factories,
    points of sale, etc.).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘计算是云计算范式的补充。云计算使组织能够通过集中化方法获得无限可扩展的计算和存储资源的访问权，而边缘计算旨在应对不同的挑战。边缘计算帮助组织处理需要在原地处理数据（或者需要非常低延迟）的工作负载，或者当与网络断开连接时需要继续运行的活动。云计算更倾向于将业务推向全球规模，而边缘计算更专注于将能力带到决策点附近（例如工厂、销售点等）。
- en: Bandwidth, Latency, and Patchy Connectivity
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 带宽、延迟和不稳定的连接
- en: Data coming from machinery deployed in factories has permitted manufacturing
    companies to analyze how their instruments are used and to predict the need for
    maintenance and limit potential damages. Telcos have been able to gain better
    visibility on the congestion of their networks and take proper action to mitigate
    possible issues.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 来自工厂部署的设备的数据已经允许制造公司分析其仪器的使用情况，并预测维护的需求并限制潜在的损害。电信公司已能更好地了解其网络的拥塞情况，并采取适当措施以减轻可能出现的问题。
- en: The problem is that you cannot do such analysis on the cloud. Why?
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是您无法在云上进行此类分析。为什么？
- en: 'Imagine yourself as the CIO of a manufacturing company. The CEO has asked you
    to find a way to speed up the product quality checks on the production assembly
    line that at the moment are carried out manually. Your team has developed an ML-based
    image recognition solution to compare items in the assembly line with perfect
    products to quickly identify defects. The PoC that you decided to conduct to demonstrate
    the power of the solution has been a success—it identifies 98% of defects in an
    automatic fashion, and now you are ready to put it in production. How could you
    do this? What is the best way to proceed? The PoC process has been pretty straightforward:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 想象自己是一个制造公司的首席信息官。首席执行官要求您找到一种加快目前手动进行的生产装配线产品质量检查的方法。您的团队已开发了基于机器学习的图像识别解决方案，以将装配线上的物品与完美产品进行比较，快速识别缺陷。您决定进行的概念验证证明了该解决方案的强大性能—它以自动方式识别了98%的缺陷，现在您准备投入生产。您该如何做到这一点？最佳操作方法是什么？概念验证过程非常简单：
- en: Collecting pictures that represent perfect items
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集代表完美物品的图片
- en: Collecting pictures that represent items with damages/imperfections
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集代表带损坏/瑕疵物品的图片
- en: Assigning a specific label for each picture (good item, item with defect)
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为每张图片分配特定标签（良好物品、有缺陷物品）
- en: Developing and training an image recognition model to identify the two clusters
    of objects
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发和训练图像识别模型以识别两类物体的聚类
- en: Deploying the model and making it available via an API
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署模型并通过API使其可用
- en: 'Executing the following steps, for every item in the assembly line:'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对装配线上每个物品执行以下步骤：
- en: Take a picture of the item with a camera.
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用相机拍摄物品的照片。
- en: Upload the picture to the cloud environment as an input payload of the API invoking
    the developed model.
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将图片作为API调用开发模型的输入负载上传到云环境中。
- en: Based on the model output, decide to proceed (*item good*) or stop the process
    (*item with defect*).
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据模型输出，决定是否继续（*物品良好*）或停止流程（*有缺陷物品*）。
- en: 'This approach is good for testing purposes, but there are some caveats that
    make it impracticable to deploy it in a production scenario:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法对于测试目的很好，但有些注意事项使得在生产场景中部署它不切实际：
- en: Bandwidth
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 带宽
- en: The system needs to take high-resolution pictures to be effective; every picture
    that needs to be uploaded into the cloud is of considerable size. Considering
    the number of items that have to be checked every day for every single assembly
    line, there is a huge amount of data that needs to be transferred, which requires
    a lot of bandwidth.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 系统需要拍摄高分辨率的照片才能有效；每张需要上传到云端的照片都很大。考虑到每天需要检查的每个装配线上的物品数量，需要传输的数据量非常庞大，这需要大量带宽。
- en: Latency
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 延迟
- en: To be effective and scalable, you need to get an outcome (item good versus item
    with defect) within a few milliseconds after taking the picture. Even with a high-speed
    connection, it would be difficult to make it fast enough to keep up with the assembly
    line.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 要有效和可扩展，您需要在拍摄照片后几毫秒内获得结果（物品良好与有缺陷物品）。即使有高速连接，要使其快速到足以跟上装配线仍然很困难。
- en: Offline
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 脱机
- en: Factories are often in out-of-the-way places where it is difficult to maintain
    a stable network connection. So it is crucial these solutions are available even
    offline.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 工厂通常位于偏远地区，维持稳定网络连接很困难。因此，即使脱机，这些解决方案也至关重要。
- en: 'All these caveats are tied to a single point of failure: the need for a connection
    with the cloud environment. But what if you could bring more intelligence close
    to the physical devices/sensors and give them the ability to operate and make
    smart decisions with imperceptible latency or even offline? The goal of edge computing
    is aimed to do exactly this: bring a portion of storage and compute resources
    out of the cloud and closer to the subject that is generating/using data itself.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些注意事项都与单点故障相关联：需要与云环境连接的需求。但如果能够将更多智能带到物理设备/传感器附近，并使其能够在几乎无感知的延迟甚至脱机情况下运行和做出智能决策，那会是非常有益的。边缘计算的目标正是这样做的：将一部分存储和计算资源从云端带到生成/使用数据的主体附近。
- en: Use Cases
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用案例
- en: 'There are several situations where a centralized cloud environment won’t work
    and an edge deployment can be beneficial. This is not an exhaustive list, but
    it should give you an idea of the possibilities:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 存在多种情况下，集中式云环境无法工作而边缘部署可以带来好处。以下是一些例子，这并不是详尽的清单，但它应该让您了解到可能性：
- en: Automated optical inspection
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 自动光学检测
- en: Use cases that leverage image analysis via deep learning models to identify
    something that is not aligned with the desired state—for example, automated checks
    to verify the quality of an item on an assembly line or a solution to speed up
    inspection checks on vehicle components to discover their wear level.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 使用深度学习模型进行图像分析的应用案例，以识别与期望状态不符的情况，例如自动检查装配线上物品的质量或加快检查车辆部件磨损水平的解决方案。
- en: Improved security
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 提高安全性
- en: Use cases where cameras and other sensors are leveraged to monitor people’s
    safety in a specific location like a factory, workplace, or dangerous site. This
    may include thermal cameras to recognize people in dangerous places or close to
    dangerous machineries, or sensors to check if someone has fallen and needs help.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 使用摄像头和其他传感器监控特定位置（如工厂、工作场所或危险场所）以确保人员安全的应用场景。这可能包括热成像摄像头用于识别危险场所或靠近危险机械的人员，或者传感器检测是否有人摔倒需要帮助。
- en: Agriculture
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 农业
- en: Using sensors to monitor the health, growth, and level of nutrients absorbed
    by plants. Collected data can be analyzed in real time to verify if there is something
    missing or exceeding.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 使用传感器监测植物的健康、生长和吸收的营养水平。收集的数据可以实时分析，以验证是否缺少或超过某些营养物质。
- en: Healthcare
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 医疗保健
- en: Analyzing real-time patient data to extract more insight—for example, magnetic
    resonance images, echographies, glucose monitors, health tools, and other sensors.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 分析实时患者数据以提取更多洞察，例如磁共振图像、超声波、葡萄糖监测器、健康工具和其他传感器。
- en: Content Delivery Network (CDN)
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 内容传送网络（CDN）
- en: To improve the browsing experience, content providers who deliver their data
    over the internet (e.g., music, video stream, web pages, etc.) usually cache information
    at the edge to reduce the latency when recovering it. Choosing what to cache can
    be greatly improved by real-time algorithms.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 为了改善浏览体验，通过互联网传输数据的内容提供商（例如，音乐、视频流、网页等）通常会在边缘缓存信息，以减少检索时的延迟。选择缓存什么可以通过实时算法大大改进。
- en: Immersive interactions
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 沉浸式互动
- en: Real-time, speedy feedback is important to improve the realism of the immersive
    experience offered by VR headsets (e.g., augmented reality, gaming, etc.).
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 实时   实时、快速的反馈对于提高 VR 头显（例如增强现实、游戏等）沉浸式体验的真实性非常重要。
- en: Smart cities
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 智慧城市
- en: Applications aimed to make cities more intelligent and to avoid waste of energy
    and resources—for example, the automated lighting systems implemented by sensors
    that monitor and control a single light or group of lights to maximize efficiency
    and maintain security at the same time.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 旨在使城市更加智能，避免能源和资源浪费的应用，例如由传感器实现的自动照明系统，这些传感器监控和控制单个灯光或一组灯光，以最大化效率同时保持安全。
- en: Traffic management system
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 交通管理系统
- en: Leveraging cameras and sensors, it is possible to adjust traffic signals in
    real time or manage the opening and closing of traffic lanes to avoid congestion.
    The importance of this case will increase even more when self-driving cars become
    more common.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 借助摄像头和传感器，可以实时调整交通信号灯或管理交通车道的开闭，以避免拥堵。当自动驾驶汽车变得更加普遍时，这一案例的重要性将进一步增加。
- en: You are now familiar with possible use cases where the pattern can be adopted;
    let’s focus now on the benefits you may get.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在熟悉了可能采用此模式的用例；现在让我们专注于你可能获得的好处。
- en: Benefits
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 好处
- en: 'The role of edge computing is to extend centralized infrastructure and bring
    more computing power closer to the boundaries of the architecture. This enables
    connected (or disconnected) devices to execute tasks (e.g., ML inference) that
    require very low latency and power compute in place. This pattern addresses some
    infrastructure challenges like bandwidth limitations and network congestion. Other
    benefits include the following:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘计算的作用是扩展集中式基础设施，将更多的计算能力带到架构的边界附近。这使得连接（或断开连接）设备能够执行需要非常低延迟和本地计算的任务（例如，机器学习推断）。这种模式解决了一些基础设施挑战，如带宽限制和网络拥塞。其他好处包括以下几点：
- en: Reliability
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性
- en: The majority of IoT architectures include elements that are not in a fully connected
    environment like your office or home. There are pretty common situations where
    it is practically impossible to maintain a constant reliable connection with the
    world with a defined and constant low latency. Think about rural industrial sites
    where telcos are not investing in high-speed wired connections, or wind turbines
    in the middle of the sea leveraging old-style connectivity (2G/3G), or self-driving
    cars requiring microseconds of latency in making decisions (you would not want
    to wait for the response coming from the cloud if your car has to brake to avoid
    an accident). All these use cases, to be effective, require devices that can store
    and process data locally and that can handle temporary connectivity disruption
    without that having an impact on their functioning.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数物联网架构包含在像办公室或家里这样不完全连接的环境中不存在的元素。有相当常见的情况，在这种情况下，几乎不可能保持与世界的恒定可靠连接，且延迟低且稳定。想一想那些电信公司没有投资高速有线连接的农村工业场所，或者在海中使用旧式连接（2G/3G）的风力涡轮机，或者需要在决策时使用微秒级延迟的自动驾驶汽车（如果你的车需要刹车以避免事故，你肯定不希望等待来自云端的响应）。所有这些用例，要有效，都需要能够本地存储和处理数据，并且能够在临时连接中断时处理，而不会影响其功能的设备。
- en: Legal/compliance
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 法律/合规
- en: In some industries (e.g., financial services and insurance) in specific countries
    there are strict rules for storing, processing, and exposing the data (think about
    GDPR regulation). The ability to transform and use the data locally and potentially
    send back to the cloud a modified version of it (e.g., deidentification, encryption,
    etc.) would increase the ability of an organization to adopt a modern architecture
    while remaining compliant with regulations.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些行业（例如金融服务和保险）中特定国家有严格的规定，关于存储、处理和披露数据（想想 GDPR 规定）。能够本地转换和使用数据，并可能将修改后的版本（例如，去标识化、加密等）发送回云端，将提高组织采用现代架构的能力，同时保持合规。
- en: Security
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 安全
- en: Data exfiltration, distributed denial-of-service (DDoS) attack prevention, and
    data protection are some of the scenarios where edge computing can drastically
    reduce risk because devices can work fully offline and can even be forced to connect
    with the external world via a hardened gateway that can implement an extra layer
    of data protection, like ad hoc encryption.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 数据外泄、分布式拒绝服务（DDoS）攻击防护和数据保护是一些场景，边缘计算可以显著降低风险，因为设备可以完全脱机工作，甚至可以通过加固网关强制与外部世界连接，从而实施额外的数据保护层，例如临时加密。
- en: Let’s now shift our attention to the challenges you may face when dealing with
    an edge computing paradigm.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将注意力转向处理边缘计算范式时可能遇到的挑战。
- en: Challenges
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 挑战
- en: 'Along with the benefits that this new paradigm can bring to the organization,
    there are some drawbacks that you may have to tackle, such as:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这种新模式可以为组织带来的好处外，还有一些缺点需要解决，例如：
- en: Limitations in computing and storage capabilities
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 计算和存储能力的限制
- en: Devices deployed at the edge typically come with limited hardware that executes
    a defined operation very well (e.g., sensors collecting data of temperature, etc.).
    Because of this, devices tend to be super-specialized and not great for general-purpose
    tasks. Even if the device is capable of some general task such as locally running
    an ML model, the configured version of the device as installed may not have the
    necessary capabilities.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 部署在边缘的设备通常具有有限的硬件，可以非常好地执行定义的操作（例如收集温度数据的传感器等）。因此，设备往往是超专业化的，不适合进行通用任务。即使设备能够执行一些通用任务，例如本地运行机器学习模型，但安装的设备配置版本可能没有必要的功能。
- en: Device management/remote control
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 设备管理/远程控制
- en: As we outlined before, the connection between the cloud and these devices can
    be tricky due to the connectivity or because of strict access policies. You may
    need to physically access each device to check the status and, even­tually, apply
    updates/patches that might be required. This may not be straightforward if some
    locations are inhospitable or devices are deployed in inaccessible positions.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所概述的，由于连接性或严格的访问政策，云与这些设备之间的连接可能会很棘手。您可能需要物理访问每个设备来检查状态，最终可能需要应用所需的更新/补丁。如果某些位置环境恶劣或设备部署在无法访问的位置，则可能并不简单。
- en: Backup and restore
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 备份和恢复
- en: Because these devices could be offline the majority of the time, you might need
    to implement extra local physical infrastructure (e.g., smart gateway plus network
    area storage) to backup and restore, which would raise the overall cost.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些设备大部分时间可能处于离线状态，您可能需要实施额外的本地物理基础设施（例如智能网关加网络区域存储）来进行备份和恢复，这会增加总体成本。
- en: If any of these challenges apply to your use case, you’ll need to evaluate whether
    they represent a blocker or whether there are valid workarounds to mitigate the
    issues.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的使用情况中存在任何这些挑战，您需要评估它们是否是阻碍因素，或者是否存在有效的解决方案来缓解这些问题。
- en: Edge Computing Architectural Patterns
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 边缘计算架构模式
- en: 'As with cloud, it is important to have a clear strategy in mind when defining
    an edge computing architecture: there could be situations where all devices are
    governed centrally (maybe by a cloud application), while there could be other
    situations where nodes are fully disconnected or partially connected just with
    the local network (to communicate with one another or with a local gateway).'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 与云计算类似，在定义边缘计算架构时有清晰的策略非常重要：可能存在所有设备由中央（可能是由云应用程序）集中管理的情况，而也可能存在节点完全断开连接或部分连接仅通过本地网络（用于彼此或与本地网关通信）的其他情况。
- en: 'There are, broadly, two types of edge computing architectures: one where the
    devices are smart and the other where a smart gateway is added at the edge. Regardless
    of whether you have a smart device or a smart gateway, ML activation works similarly.
    Let’s look at both of these patterns.'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 从广义上讲，边缘计算架构可以分为两种类型：一种是设备智能化，另一种是在边缘添加智能网关。无论是智能设备还是智能网关，机器学习的激活方式都类似。我们来看看这两种模式。
- en: Smart Devices
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 智能设备
- en: 'Smart devices are a straightforward (albeit expensive) way to implement an
    edge computing architecture. In our example scenario, the machines used to produce
    items that have to pass a quality check will all need to have hardware capable
    of executing the ML algorithm that is able to recognize defects in pictures. The
    devices that have to perform the logic can be called, for simplicity, “nodes,”
    and their hardware can vary a lot depending on the use case they have to solve:
    they can come with general-purpose CPU or dedicated hardware to execute specific
    tasks.'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 智能设备是实施边缘计算架构的一种直接（尽管昂贵）方式。在我们的示例场景中，用于生产必须通过质量检查的物品的机器都需要具备执行ML算法的硬件，能够识别图片中的缺陷。负责执行逻辑的设备可以简单地称为“节点”，它们的硬件可以根据它们需要解决的用例而异：它们可以配备通用CPU或专用硬件来执行特定任务。
- en: Smart devices with nontrivial hardware that can directly execute complex logic
    (e.g., Raspberry Pi, Coral sensors, etc.), as shown in [Figure 9-9](#edge_architecture_with_smart_devices),
    give a great level of flexibility but require a huge management effort (e.g.,
    software updates, security patches, etc.) and an increased hardware cost.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 配备能够直接执行复杂逻辑的非平凡硬件的智能设备（例如树莓派、珊瑚传感器等），如[图 9-9](#edge_architecture_with_smart_devices)所示，提供了极大的灵活性，但需要大量的管理工作（例如软件更新、安全补丁等）和增加的硬件成本。
- en: '![Edge architecture with smart devices](assets/adml_0909.png)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![带智能设备的边缘架构](assets/adml_0909.png)'
- en: Figure 9-9\. Edge architecture with smart devices
  id: totrans-213
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-9\. 带智能设备的边缘架构
- en: Smart Gateways
  id: totrans-214
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 智能网关
- en: “Dumb” devices/sensors connected, via wire or wireless, to smart gateways that
    can execute the logic on their behalf, as shown in [Figure 9-10](#edge_architecture_with_smart_gateways),
    is the preferred approach for dealing with a huge number of sensors in the same
    place (e.g., within a factory) because it can reduce the management (one single
    smart device instead of *n*) and related cost. However, this introduces some security
    challenges in the architecture because it can become a single point of failure
    (SPOF).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 通过电线或无线连接到智能网关的“愚蠢”设备/传感器，可以代表它们执行逻辑，如[图 9-10](#edge_architecture_with_smart_gateways)所示，是处理同一地点（例如工厂内）大量传感器的首选方法，因为它可以减少管理（一个单一的智能设备代替*n*个）及相关成本。然而，这也在架构中引入了一些安全挑战，因为它可能成为单点故障（SPOF）。
- en: '![Edge architecture with smart gateways](assets/adml_0910.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![带智能网关的边缘架构](assets/adml_0910.png)'
- en: Figure 9-10\. Edge architecture with smart gateways
  id: totrans-217
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-10\. 带智能网关的边缘架构
- en: ML Activation
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ML激活
- en: We have discussed before a PoC scenario where machines, fully connected with
    a cloud environment, were continuously sending back and forth data to make a decision
    on how to handle items in the assembly line (*accept or reject*). You have seen,
    then, that the only way to make this architecture deployable in production was
    to extend it, making devices able to directly execute that logic at the edge.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前讨论过一个PoC场景，在这个场景中，机器与云环境完全连接，持续地发送和接收数据，以便决定如何处理流水线上的物品（*接受或拒绝*）。那么您已经看到，使这种架构能够在生产中部署的唯一方法是扩展它，使设备能够在边缘直接执行该逻辑。
- en: The code executed by devices at the edge can vary case by case, but it can be
    generalized as an ML model that crunches some inputs (*the pictures* in this case)
    to get the desired output (*the final decision on items* in our example). In the
    previous chapters, when discussing modern data cloud architectures, you have seen
    that one of the main benefits of the cloud is its ability to collect and process
    data at scale, allowing developers to implement state-of-the-art ML algorithms
    easily.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在边缘设备上执行的代码可能因情况而异，但可以概括为一个ML模型，用于处理一些输入（*在本例中是图片*），以获得所需的输出（*在我们的例子中是对物品的最终决策*）。在前几章中，讨论现代数据云架构时，您已经看到云的主要好处之一是其能够大规模收集和处理数据，使开发人员能够轻松实现最先进的ML算法。
- en: 'Let’s have a look at the different steps of the process (represented in [Figure 9-11](#ml_developmentsolidusdeployment_on_edge))
    of developing an ML algorithm and, for doing that, let’s leverage the previous
    example:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看开发ML算法过程的不同步骤（见[图 9-11](#ml_developmentsolidusdeployment_on_edge)）以及为此，让我们利用之前的例子：
- en: 1\. Data collection
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 数据收集
- en: 'Everything starts with data that will be used as input to the process. In our
    scenario, we need to develop a model that can recognize information and features
    of items starting from pictures, so it is important to have access to a vast number
    of pictures of good items and items with defects. (Please note that you can create
    as many states as you want, but for the sake of simplicity we will consider only
    two states: good item and item with generic defect.)'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 一切都始于作为处理输入数据的数据。在我们的场景中，我们需要开发一个能够从图片开始识别物品信息和特征的模型，因此拥有大量良好项目和带有缺陷项目的图片访问权限非常重要。（请注意，你可以创建任意数量的状态，但为简单起见，我们将仅考虑两个状态：良好项目和通用缺陷项目。）
- en: 2\. Data analysis
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 数据分析
- en: 'The data collected at the previous step needs to be refined (e.g., cleaned,
    transformed, enriched) to be leveraged. In this specific example, we need to verify
    the quality of all shots (e.g., focus, alignment, noise, etc.), and then, for
    each image, we need to apply a label indicating what has been reported in the
    picture to produce two separated sets: good item and item with a defect.'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 前一步骤收集的数据需要进行精炼（例如清洗、转换、丰富）以便利用。在这个具体的例子中，我们需要验证所有拍摄的质量（例如焦点、对齐、噪声等），然后针对每张图片，我们需要应用一个标签，指示图片中报告的内容，以生成两个分离的集合：良好项目和带有缺陷的项目。
- en: 3\. ML model development, training, and test
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. ML 模型开发、训练和测试
- en: It is time to develop the algorithm; there are plenty of tools and techniques
    you can use (e.g., scikit-learn, TensorFlow, PyTorch) and even automated solutions
    that make life easier (e.g., support in feature engineering, model selection,
    and parameters hypertuning). In our example, we can use transfer learning techniques
    to develop a deep learning model to recognize images.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候开发算法了；有很多工具和技术可供使用（例如 scikit-learn、TensorFlow、PyTorch），甚至有自动化解决方案可使生活更轻松（例如在特征工程、模型选择和参数调优中提供支持）。在我们的例子中，我们可以使用迁移学习技术开发一个深度学习模型来识别图片。
- en: 4\. ML model deployment
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. ML 模型部署
- en: The model is ready to be used for predictions. It can be deployed as an API
    service in the cloud or directly in the edge nodes.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 模型已准备好用于预测。它可以作为 API 服务部署在云端或直接部署在边缘节点。
- en: 5\. Feedback data collection
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 反馈数据收集
- en: To improve the quality of the model, it is possible to collect data coming from
    the edge and then restart the process from the beginning in an interactive process
    aimed at making the prediction even better. In our case, the edge nodes will send
    back (leveraging, for example, a batch process) results of predictions together
    with the analyzed images.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高模型质量，可以收集来自边缘的数据，然后重新开始交互式过程，旨在使预测结果更好。在我们的案例中，边缘节点将返回（例如批处理过程）预测结果和分析过的图片。
- en: '![ML development/deployment on edge at scale](assets/adml_0911.png)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![边缘规模上的 ML 开发/部署](assets/adml_0911.png)'
- en: Figure 9-11\. ML development/deployment on edge at scale
  id: totrans-233
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-11\. 边缘规模上的 ML 开发/部署
- en: 'It is clear that these ML modeling steps impose certain requirements on the
    edge architecture:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 很明显，这些 ML 建模步骤对边缘架构施加了一定的要求：
- en: Data collection requires the ability to store collected images for a long enough
    period of time that disks can be swapped out and moved to a location with better
    connectivity, and the data uploaded to the cloud.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据收集需要能够长时间存储收集的图片，以便可以更换硬盘并将其移至网络连接更好的地方，并将数据上传到云端。
- en: Data analysis can be carried out in the cloud.
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据分析可以在云端进行。
- en: ML model development can also be carried out in the cloud. Testing, however,
    requires the ability to simulate the edge environment on the cloud.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ML 模型开发也可以在云端进行。然而，测试需要能够在云端模拟边缘环境。
- en: Deployment requires that the characteristics of the edge hardware be kept in
    mind when developing the ML model. Deployment of the ML model to the edge may
    require an upgrade of hardware components to include ML inference chips such as
    a Google Coral Edge TPU or NVIDIA Jetson Nano.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署要求在开发 ML 模型时考虑边缘硬件的特性。将 ML 模型部署到边缘可能需要升级硬件组件，以包括如 Google Coral Edge TPU 或
    NVIDIA Jetson Nano 的 ML 推断芯片。
- en: Feedback of data collection requires the implementation of an application to
    keep track of situations where a human operator overrides the decision suggested
    by the ML algorithm.
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 反馈数据收集要求实施一个应用程序，以跟踪人工操作员在 ML 算法建议的决策上覆盖的情况。
- en: Now that you are more familiar with the theory of the edge computing paradigm,
    let’s have a look at how you can adopt it.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您对边缘计算范式的理论有了更多了解，让我们看看您如何采用它。
- en: Adopting Edge Computing
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 采用边缘计算
- en: Let’s have a look at how the adoption of this paradigm may give greater visibility
    and more efficiency to a model organization.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看采用这种范 paradigm 可以为模范组织带来更大的可见性和更高的效率。
- en: The Initial Context
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 初始背景
- en: MagiCan is a (fictitious) manufacturing company specializing in the production
    of cans for beverages serving the most iconic brands in the world. The company
    has several production plants all around the world, and in each factory there
    are multiple machines working 24/7/365\. The strategy of the company has always
    been to build plants in areas outside cities, and in some locations, local telcos
    provided the company with internet connections built on top of old wireless technology
    (e.g., 3G carriers).
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: MagiCan 是一家专门生产饮料罐头的（虚构）制造公司，为世界上最具标志性的品牌提供服务。该公司在全球各地设有多个生产工厂，每个工厂都有多台机器全年无休地运行。该公司的战略一直是在城市外地区建厂，并且在某些地点，当地电信公司提供了基于旧无线技术（例如，3G运营商）的互联网连接。
- en: One of the core values of the company is “high-quality product is a must, whatever
    it takes,” and the organization has always invested a lot of money to ensure the
    quality of the end-to-end production cycle (for example, maintenance of the machineries
    and quality checks on produced items).
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 公司的核心价值之一是“高质量产品是必须的，无论付出多大努力”，并且一直投入大量资金确保端到端生产周期的质量（例如，维护机械设备和对生产物品进行质量检查）。
- en: 'MagiCan discovered that there were several issues it needed to handle: too
    many faults on machines that caused multiple pauses in production at several sites,
    defects in produced items that resulted in fines, and difficulties in having a
    cohesive view of the status of its production plants. Because of this, the board
    decided to start a new project to improve the way it was collecting and elaborating
    data on its plants with the aim of addressing all these issues.'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: MagiCan 发现需要处理的几个问题：多台机器存在过多故障，导致多个生产点多次停工；产品存在缺陷，导致罚款；难以全面查看生产厂的状态。因此，董事会决定启动一个新项目，改善其收集和处理工厂数据的方式，以解决所有这些问题。
- en: The Project
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目
- en: 'The organization was already leveraging cloud computing solutions for several
    workloads (e.g., DWH, website, SAP, etc.) and decided to expand its current architecture
    to invest in devices that would be directly connected to its machineries: the
    goal was not only to collect data directly from the plants for real-time visibility
    into how machines were working but also to allow users to operate on some parameters/​com⁠ponents
    (e.g., actuators, assembly lines, etc.) to fix issues or correct inaccuracies
    and improve the overall quality of the production process.'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 该组织已经利用云计算解决方案处理多个工作负载（例如，DWH、网站、SAP等），并决定扩展当前架构，投资于直接连接到其机械设备的设备：目标不仅是直接从工厂收集数据，实时查看机器运行情况，还允许用户操作某些参数/组件（例如，执行器、装配线等），以修复问题或校正不准确之处，提高生产过程的整体质量。
- en: 'The organization, with the help of a third-party partner specializing in IoT
    projects, defined a three-step journey:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 该组织在物联网项目专业的第三方合作伙伴的帮助下，定义了一个三步旅程：
- en: '*Improve overall system observability* by developing the architecture needed
    to collect data from the plants and build a near-real-time monitoring system.'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*通过开发所需架构*从工厂收集数据并构建近实时监控系统来提高整体系统的可观察性。'
- en: '*Develop automations* to tune actuators’ functioning.'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*开发自动化*以调整执行器的功能。'
- en: '*Optimize the maintenance* of the machineries via the development of a predictive
    model.'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*通过开发预测模型优化*机械设备的维护。'
- en: Let’s deep dive into the three steps of the journey.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入探讨这次旅程的三个步骤。
- en: Improve overall system observability
  id: totrans-254
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提高整体系统的可观察性
- en: 'Considering the fact that MagiCan has plants in several locations globally
    distributed and the majority of them do not offer a reliable connection with the
    cloud world, it was impossible to develop a real-time architecture based on a
    streaming pattern. The company decided to split the problem in two different parts:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到 MagiCan 在全球多个地点设有工厂，并且大部分工厂无法与云世界稳定连接，因此无法基于流式模式开发实时架构。公司决定将问题分为两个不同的部分：
- en: '*Local architecture* (at plant level), where all machines were connected in
    real time and all the information was immediately visible by a central but local
    application'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*本地架构*（在工厂级别），所有机器实时连接，并且所有信息可以立即被中央但本地的应用程序看到'
- en: '*Centralized architecture* leveraging the cloud system, where information coming
    from the plants was collected multiple times a day in a batch mode'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*集中式架构* 利用云系统，从工厂收集的信息每天多次以批处理方式处理'
- en: The goal was to develop a standard way to monitor machines at every single plant
    and keep the data available even when the plants were offline. The central cloud
    brain had to collect all the data coming from the different plants and then give
    data scientists the ability to study that data so they could extract more insights
    and leverage the power of the cloud, as shown in [Figure 9-12](#high_level_iot_platform_architecture).
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是在每个工厂开发一种标准的监控机器的方法，并在工厂脱机时保持数据可用。中央云脑必须收集来自不同工厂的所有数据，然后让数据科学家能够研究这些数据，以便能够提取更多的见解，并利用云的力量，如[图
    9-12](#high_level_iot_platform_architecture)所示。
- en: In each plant, devices with sensors were deployed to the various machineries
    to collect data coming from the different actuators (e.g., speed, rotation, temperature,
    etc.). These devices were locally connected to a smart gateway that was able to
    collect all the data in real time and via a custom-developed visualization tool,
    which provided users with a sort of continuous snapshot of the status of the plant.
    Every *x* minutes, data was compressed and sent to the cloud for further analysis
    and then aggregated with data coming from other plants. If there was an issue
    with the network, the batch would be enqueued and data sent to leverage the following
    batch.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个工厂，部署了带传感器的设备到各种机器上，以收集来自不同执行器（如速度、转速、温度等）的数据。这些设备通过智能网关与本地连接，能够实时收集所有数据，并通过自定义开发的可视化工具提供用户一种对工厂状态进行连续快照的方式。每隔
    *x* 分钟，数据被压缩并发送到云端进行进一步分析，然后与其他工厂的数据聚合。如果网络出现问题，批处理将排队，并在下一批次中发送数据以提升。
- en: '![High-level IoT platform architecture](assets/adml_0912.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![高级物联网平台架构](assets/adml_0912.png)'
- en: Figure 9-12\. High-level IoT platform architecture
  id: totrans-261
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-12\. 高级物联网平台架构
- en: Develop automations
  id: totrans-262
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开发自动化流程
- en: 'Once the data coming from all the plants was available in the cloud, it was
    time to start having some fun! The amount of information available allowed the
    team to gain visibility on several things, such as:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦云端收集到来自所有工厂的数据，就是开始有些有趣的时候了！可用的大量信息使团队能够获得关于多个方面的可见性，例如：
- en: How workers were interacting with the machineries
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工人如何与机器互动
- en: Correlation between configuration of the actuators and defects on cans
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 油罐上执行器配置与缺陷之间的相关性
- en: Average inactivity time due to a mechanical problem
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于机械问题导致的平均无活动时间
- en: Ideal machine configurations when using specific raw materials
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用特定原材料时的理想机器配置
- en: Considering the fact that the connectivity between the devices and the cloud,
    via the smart gateways, was bidirectional, it was possible to send feedback and
    have machines receive that updated information to tune the way they were operating.
    The company developed a near-real-time process to crunch all the data coming from
    the plants, understand the discrepancy with the ideal target operation mode, and
    send back updated configuration to immediately tune the actuators’ behaviors.
    With this process, centrally governed, it was possible to provide machines with
    a tailored configuration based on the current scenario where they were operating.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到设备与云之间通过智能网关的双向连接，可以发送反馈并使机器接收到更新信息以调整它们的操作方式。公司开发了一个几乎实时的过程，用于处理来自工厂的所有数据，了解与理想目标操作模式的差异，并发送更新配置以立即调整执行器行为。通过这种集中管理的流程，可以根据它们正在运行的当前情况为机器提供定制配置。
- en: Optimize the maintenance
  id: totrans-269
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优化维护
- en: 'The last step was to tackle an issue that was pretty difficult to handle: maintenance
    of the machines. Before having the ability to get a cohesive overview of the functioning
    of the machines, maintenance was carried out in two different ways:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是解决一个相当难以处理的问题：机器的维护。在获得机器运行的统一概览之前，维护是通过两种不同的方式进行的：
- en: Planned maintenance via scheduled intervention
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 通过计划的干预进行计划维护
- en: Machines were checked on a regular basis with a well-defined calendarization
    based on the machine model, its history, and the way it was operating.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 根据机器型号、历史记录和操作方式，定期检查机器。
- en: Unplanned maintenance via ad hoc intervention
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 通过临时干预进行的非计划维护
- en: Machines were checked on purpose because of some events like the damage of a
    component or a failure caused by an error of the operator.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 由于某些事件，如组件损坏或操作人员错误导致的故障，机器被有目的地检查。
- en: 'Considering the fact that a maintenance operation could pause a machine for
    hours or even days, it was important to reduce as much as possible the unplanned
    downtime. Leveraging the data coming from the plants (the analysis has been possible
    after some months from the initial go live, since an adequate amount of historical
    data was needed), a predictive ML model algorithm was developed to calculate the
    probability of a failure in a machine: when the percentage was superior to a certain
    threshold, an alert was sent to the plant manager, who had to decide how to handle
    that (i.e., schedule an unplanned maintenance operation or wait for the next scheduled
    one).'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到维护操作可能使机器停机数小时甚至数天，尽量减少非计划停机时间非常重要。利用来自工厂的数据（在初始投入使用后几个月后才可能进行分析，因为需要足够的历史数据量），开发了预测机器学习模型算法，用于计算机器故障的概率：当百分比超过一定阈值时，会向工厂经理发送警报，他必须决定如何处理（即，安排一次非计划维护操作或等待下一次计划维护操作）。
- en: The Final Outcomes and Next Steps
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最终成果和下一步计划
- en: 'The entire end-to-end project took more than one year to complete, but the
    first release of the most important part (that is, the development of a unified
    view of all the machines in the various plants) was implemented relatively quickly
    (in less than six months). Thanks to this distributed architecture, the company
    was able to increase its observability both at plant level and at company level,
    leveraging a common, standardized, and unified process. At the same time, it was
    able to improve the efficiency of the entire production chain. MagiCan is now
    focusing on a brand-new project aimed at reducing the cost of the quality check,
    automating as much as possible in the process. Similar to what was presented at
    the beginning of this section, the organization wants to extend the architecture
    already in place to implement a process to automatically identify defects directly
    on the assembly line: to achieve that, it will leverage new camera devices with
    the ability to execute logics on frames based on ML models. The goal is to reallocate
    the majority of the workforce currently performing quality checks to other activities.'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 整个端到端项目花费超过一年时间才完成，但最重要部分的第一版发布（即在各个工厂统一视图开发）相对较快地实现了（不到六个月）。由于这种分布式架构，公司能够提高在工厂和公司级别的可观察性，利用了一种通用、标准化和统一的流程。同时，它能够提高整个生产链的效率。MagiCan现在正在专注于一个全新的项目，旨在降低质量检查的成本，在过程中尽可能自动化。与本节开头介绍的类似，该组织希望扩展已经建立的架构，实施一个能够自动识别装配线上缺陷的流程：为实现这一目标，将利用具有基于机器学习模型逻辑执行能力的新摄像设备。其目标是将目前执行质量检查的大部分人力资源重新分配到其他活动中去。
- en: Summary
  id: totrans-278
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: 'This chapter has provided you with a high-level understanding of how to handle
    hybrid and multicloud architectures when a single cloud provider is insufficient
    to meet all of the business’s analytical requirements. It has presented you with
    the various factors to consider when dealing with such architectures as well as
    some common implementation patterns. Finally, it has given you some understanding
    of edge computing and how to use it. The key takeaways are as follows:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 本章为您提供了如何处理混合和多云架构的高层次理解，当单一云服务提供商无法满足所有业务分析需求时。它向您介绍了处理这类架构时需要考虑的各种因素，以及一些常见的实施模式。最后，它向您介绍了边缘计算及其使用方式。主要收获如下：
- en: Consolidating your entire software architecture on a single cloud provider is
    very appealing for the simplicity of the overall architecture, ease of learning/​adop⁠tion,
    and overall costs.
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将整个软件架构统一在单一云服务提供商上非常具有吸引力，因为整体架构简单，学习和采用容易，而且总体成本低廉。
- en: Small and medium-sized businesses should choose a single cloud provider and
    design their architecture using fully managed services available on that hyperscaler.
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 小型和中型企业应选择单一的云服务提供商，并利用该超大规模提供商提供的完全托管服务设计其架构。
- en: Multicloud architectures may become inevitable because of acquisitions or the
    desire to use a service that is available on one of the clouds.
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于收购或希望使用在某个云上可用的服务的愿望，多云架构可能变得不可避免。
- en: Multicloud strategy has to be considered when the organization has fear of lock-in,
    needs to implement an exit strategy, has some stringent regulatory requirements,
    or wants to increase the level of workload portability, innovation, knowledge,
    and sustainability.
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当组织担心被锁定、需要实施退出策略、有严格的监管要求或希望增加工作负载可移植性、创新、知识和可持续性水平时，必须考虑多云战略。
- en: The adoption of a multicloud strategy is a journey that requires a clear definition
    of the strategy to be followed and an extension of the skills of the team.
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 采用多云战略是一个旅程，需要明确定义要遵循的战略，并扩展团队的技能。
- en: There are various architectural patterns that you may leverage when dealing
    with multicloud architectures, like the development of a single pane of glass,
    bursting Hadoop on-premises workload, using Hadoop pass-through to enable data
    processing in the cloud, and change streaming to enable data integration.
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理多云架构时，可以利用各种架构模式，如开发单一玻璃窗口、在本地工作负载中突破Hadoop、使用Hadoop直通以在云中进行数据处理以及改变流以实现数据集成。
- en: Edge computing is a paradigm that aims to bring a portion of storage and compute
    resources out of the cloud and closer to the subject that is generating/using
    data itself.
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 边缘计算是一种旨在将部分存储和计算资源从云端带到生成/使用数据的主体附近的范式。
- en: Bandwidth limitations, network congestion, reliability, legal compliance, and
    security are just some of the benefits that the edge computing paradigm can bring.
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带宽限制、网络拥塞、可靠性、法律合规性和安全性只是边缘计算范式可能带来的一些好处。
- en: The main challenges of edge computing are limitations in computing and storage
    capabilities, management/remote control, and backup and restore.
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 边缘计算的主要挑战包括计算和存储能力的限制、管理/远程控制以及备份和恢复。
- en: The main use cases that leverage such an edge computing paradigm are automated
    optical inspection, improved security, farming, healthcare, CDNs, immersive interactions,
    smart cities, and traffic management systems.
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用这种边缘计算范式的主要用例包括自动光学检测、改进的安全性、农业、医疗保健、内容分发网络（CDN）、沉浸式互动、智能城市和交通管理系统。
- en: When choosing an edge architecture, smart devices are simpler but more expensive
    than using a smart gateway. In either case, ML activation involves adding capabilities
    such as on-device storage and ML inference chips.
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在选择边缘架构时，智能设备比使用智能网关更简单但更昂贵。在任何情况下，ML激活都涉及添加诸如设备存储和ML推理芯片等能力。
- en: In the next chapter you will learn the high-level decisions you should make
    on architecture and frameworks in AI and ML.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章中，您将学习在人工智能和机器学习中应该做出的关于架构和框架的高层次决策。

- en: Chapter 4\. Data Engineering
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章 数据工程
- en: Introduction
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: In earlier chapters, you were introduced to abstract concepts. Now, we’ll move
    forward from that technical introduction to discuss implementation details and
    more subjective choices. I’ll show you how we work with the art of Training Data
    in practice as we walk through scaling to larger projects and optimizing performance.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在早期章节中，您已经了解了抽象概念。现在，我们将从技术介绍向前迈进，讨论实施细节和更主观的选择。我将向您展示在实践中如何处理训练数据的艺术，我们将通过扩展到更大项目和优化性能来进行缩放。
- en: Data Ingestion is the first and one of the most important steps. At a high level,
    this means getting your data into and out of your Training Data Database. Why
    is Ingestion hard? Many reasons. For example, Training Data is a relatively new
    concept, there are a variety of formatting and communication challenges, the volume,
    variety, and velocity of data vary, and the lack of well-established norms, leading
    to many ways to do it.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 数据摄取是第一个也是最重要的步骤之一。在高层次上，这意味着将数据导入和导出到您的训练数据数据库中。为什么摄取很难？原因有很多。例如，训练数据是一个相对较新的概念，存在各种格式和通信挑战，数据的体积、多样性和速度各不相同，缺乏良好的建立规范，导致有许多方法可以完成它。
- en: Also, there are many concepts, like using a Training Data Database, and who
    wants to access what when, that may not be obvious, even to experienced engineers.
    Ingestion decisions ultimately determine query, access, and export considerations.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有许多概念，如使用训练数据数据库以及谁何时想要访问什么，这些对经验丰富的工程师甚至可能不明显。摄取决策最终确定查询、访问和导出考虑因素。
- en: 'This chapter is organized into:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章分为：
- en: Who wants to use the data and when they want to use it
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谁想要使用数据以及他们何时想要使用数据
- en: Why the data formats & communications matter, think “game of telephone”
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么数据格式和通信很重要，类似于“传声筒游戏”
- en: Introduction to a Training Data Database
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍训练数据数据库
- en: The technical basics of getting started
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始的技术基础
- en: Storage, media specific needs, and versioning
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储、特定媒体需求和版本控制
- en: Commercial concerns of formatting and mapping data
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 格式化和映射数据的商业考虑
- en: Data Access, Security, and Pre-labeled data
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据访问、安全性和预标记数据
- en: To achieve a data-driven or data-centric approach, tooling, iteration and data
    are needed. The more iteration and the more data the more need for great organization
    to handle it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现数据驱动或数据中心化的方法，需要工具、迭代和数据。迭代和数据越多，对处理它的优秀组织的需求就越大。
- en: You may ingest data, explore it, and annotate it in that order. Or perhaps you
    may go straight from ingesting to debugging a model. After streaming to training,
    you may ingest new predictions, then debug those, then use annotation workflow.
    The more you can lean on your Database to do the heavy lifting, the less you have
    to do yourself.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照摄取数据、探索数据和标注数据的顺序进行操作。或者您可以直接从摄取转到调试模型。在流式传输到训练之后，您可以摄取新的预测结果，然后调试这些结果，然后使用标注工作流。您越多地依赖您的数据库来进行大量工作，您需要自己完成的工作就越少。
- en: Who Wants The Data?
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谁需要这些数据？
- en: Before we dive into the challenges and the technical specifics, let’s set the
    table about goals and the humans involved here, and discuss how Data Engineering
    services those end users and systems. After, I’ll cover the conceptual reasons
    for wanting a Training Data Database. I’ll frame the need for this by showing
    what the default case looks like without it, and then what it looks like with
    it.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨挑战和技术细节之前，让我们先谈谈目标和参与其中的人员，并讨论数据工程如何服务于这些最终用户和系统。随后，我将讨论为什么需要一个训练数据数据库的概念性原因。我将通过展示没有它时的默认情况以及有它时的情况来说明这种需求。
- en: 'For ease of discussion, we can divide this into groups:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了便于讨论，我们可以将其分为以下几组：
- en: Annotators and End Users
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标注者和最终用户
- en: Data science
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据科学
- en: ML Programs (Machine to Machine)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ML程序（机器对机器）
- en: Application engineers
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用工程师
- en: Other stakeholders
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他利益相关者
- en: Annotators and End Users
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 标注者和最终用户
- en: End users need to be served the right data at the right time with the right
    permissions. Often this is done at a single file level, and is driven by very
    specifically scoped requests, There is an emphasis on permissions and authorization.
    What is the “right time?”, well in general it means on-demand or online access.
    This is where the file is identified by a software process, such as a task system,
    and served with fast response times.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 最终用户需要在正确的时间以及具有正确权限的情况下获取正确的数据。通常情况下，这是在单个文件级别上完成的，并且受到非常具体范围请求的驱动。强调权限和授权。什么是“正确的时间”？一般来说，这意味着按需或在线访问。这是文件由软件流程（例如任务系统）标识，并且以快速响应时间提供的地方。
- en: Data Science
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据科学
- en: Data Science most often looks at data at the set level. More emphasis is placed
    on query capabilities, the ability to handle large volumes of data, and formatting.
    Ideally, there is also the ability to drill down into specific samples and compare
    the results of different approaches both quantitatively and qualitatively.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学最常见的是在数据集级别查看数据。更多的重点放在查询能力、处理大量数据的能力和格式化上。理想情况下，还应该能够深入到具体样本，并且定量和定性地比较不同方法的结果。
- en: ML Programs
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 机器学习程序
- en: ML Programs follow a similar need to Data Science. Differences include permissions
    schemes, and clarity on what gets surfaced and when. Often ML programs can have
    a software defined integration or automation.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习程序与数据科学有类似的需求。区别在于权限方案以及什么时候以及如何公开显示内容。通常，机器学习程序可以具有软件定义的集成或自动化。
- en: Application Engineers
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用工程师
- en: Application Engineers are concerned with getting data from the application to
    the Training Data Database and how to embed the Annotation and Supervision to
    end users. Queries Per Second (Throughput), volume of data, are often top concerns.
    There is sometimes a faulty assumption that there is a linear flow of data from
    an “Ingestion” team, or the application, to Data Science.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 应用工程师关注将数据从应用程序传输到培训数据数据库，以及如何将注释和监督嵌入到最终用户中。每秒查询（吞吐量）、数据量通常是首要关注的问题。有时候会有一个错误的假设，即数据从“摄入”团队或应用程序流向数据科学的过程是线性的。
- en: Other Stakeholders
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他利益相关者
- en: Security, DevMLOps, backup systems, etc. These groups often have cross-domain
    concerns and cross-cut other users’ and systems needs. For example, Security cares
    about end-user permissions already mentioned. Security also cares about a single
    data scientist not being a single point of critical failure, e.g. having the entire
    dataset on their machine or overly broad access to remote sets.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性、DevMLOps、备份系统等。这些团队通常关注跨领域的问题，并且横切其他用户和系统的需求。例如，安全性关心已经提到的最终用户权限。安全性还关心单个数据科学家不成为关键失败的单一点，例如，在其机器上拥有整个数据集或对远程集有过于广泛的访问权限。
- en: Now that you have an overview of the groups involved, how do they talk with
    each other? How do they work together?
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经对涉及的群体有了概述，它们如何相互交流？它们如何共同工作？
- en: A Game of Telephone
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 电话游戏
- en: Without knowledge of Training Data Data Engineering your end users and systems
    will not work well with each other.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 没有对培训数据工程的知识，您的最终用户和系统将无法良好地互相配合。
- en: As an analogy, you can think of a Game of Telephone. Telephone is “a game where
    you come up with a phrase and then you whisper it into the ear of the person sitting
    next to you. Next, this person has to whisper what he or she heard in the next
    person’s ear. This continues in the circle until the last person has heard the
    phrase. Errors typically accumulate in the retellings, so the statement announced
    by the last player differs significantly from that of the first player, usually
    with amusing or humorous effect.”^([1](ch04.xhtml#idm45486431218624))
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 作为类比，可以将其比作电话游戏。电话游戏是“一个游戏，你首先想出一个短语，然后把它耳语给坐在你旁边的人。接下来，这个人必须耳语给下一个人听。这种过程在圈内继续，直到最后一个人听到这个短语。错误通常会在重复中累积，因此最后一个玩家宣布的声明与第一个玩家的声明明显不同，通常具有幽默或滑稽的效果。”^([1](ch04.xhtml#idm45486431218624))
- en: In Training Data, these accumulated errors are not humorous. Accumulated errors
    cause poor performance, system degradation, and failures. These errors are especially
    prevalent because it’s not a one-way, linear integration, or even a two-way sync.
    Instead, it’s a graph like, non-linear structure between sensors, humans, models,
    and other data engineering systems.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在培训数据中，这些累积的错误并不滑稽。累积的错误会导致性能不佳、系统退化和故障。这些错误尤其普遍，因为这不是单向线性的集成，甚至不是双向同步。相反，这是一个类似图形的、非线性结构，连接传感器、人类、模型和其他数据工程系统。
- en: Problems are especially prevalent in larger, multi-team contexts, and when the
    holistic needs of all major groups are not taken into account. As a new area with
    emerging standards, even seemingly simple things are poorly defined. In other
    words, Data Engineering is especially important for Training Data. If you have
    a Greenfield project then now is the perfect time to plan your Data Engineering.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这些问题在较大的、多团队的情境中特别普遍，在没有考虑到所有主要群体的整体需求时尤为突出。作为一个新兴标准的领域，即使是看似简单的事情也定义不清楚。换句话说，数据工程对于培训数据尤为重要。如果您有一个绿田项目，现在是计划您的数据工程的完美时机。
- en: 'Whether you are planning a new project or rethinking existing projects, some
    signals that you need a new take on Data Engineering include:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是在规划新项目还是重新思考现有项目，一些信号表明您需要对数据工程采取新的方法包括：
- en: Each team owns their own copy of the data
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个团队都拥有自己的数据副本。
- en: There is no true Training Data System of Record
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有真正的培训数据记录系统。
- en: Your System of Record does not holistically represent the state of Training
    Data (e.g. thinking of it as just labeling rather than as the center of gravity
    of the process).
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的记录系统并不全面地代表培训数据的状态（例如，将其视为仅仅是标签，而不是流程的重心）。
- en: There is an unreasonable level of communication required to make changes (e.g.
    changing the Schema).
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要进行不合理水平的沟通才能进行更改（例如，更改模式）。
- en: Changes cannot be done fluidly by end users but must be discussed as an engineering-level
    change.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变更不能由最终用户流畅进行，而必须作为工程级别的变更进行讨论。
- en: Overall system performance is not meeting expectations or models are slow to
    ship or update.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整体系统性能未达到预期或模型更新速度缓慢。
- en: If each team owns its own copy of the data, there will be unnecessary communications
    and integration overhead. This is often the “original sin”, since the moment there
    are multiple teams doing this, it will take an engineering-level change to update
    the overall system, meaning updates will not be fluid, leading to the overall
    system performance not meeting expectations.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果每个团队都拥有自己的数据副本，就会产生不必要的沟通和集成开销。这往往是“原罪”，因为一旦有多个团队这样做，要更新整个系统就需要进行工程级别的改变，这意味着更新不会顺畅进行，导致整体系统性能达不到预期。
- en: Some attempts to avoid this include keeping a separate system as the System
    of Record for the data instead of the Training Data System. This is another case
    of multiple teams owning a copy of the data, with similar problems. The data will
    keep getting garbled, so while one tool may know about xyz properties, the next
    tool does not import it, and it likely won’t export all of the properties that
    it stores or imports. No matter how trivial these issues seem on the whiteboard,
    they will always be a problem in the real world.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一些试图避免这种情况的方法包括保留一个独立的系统作为数据的记录系统，而不是培训数据系统。这是多个团队拥有数据副本的另一种情况，存在类似的问题。数据将继续混淆，因此，虽然一个工具可能了解
    xyz 属性，但下一个工具可能不会导入它，并且可能不会导出其存储或导入的所有属性。无论这些问题在白板上看起来多么微不足道，它们在现实世界中总是一个问题。
- en: The user expectations and data formats change frequently enough that it resists
    an overly rigid automatic process. So don’t think about this in terms of Automation,
    but rather in terms of “where is the center of gravity of Training Data?”. It
    should be with the humans and the Training Data Database in order to get the best
    results.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 用户的期望和数据格式经常变化，以至于抵制过度死板的自动化过程。因此，不要以自动化的方式思考这个问题，而是要以“培训数据的重心在哪里？”来思考。它应该与人类和培训数据数据库一起，以获得最佳结果。
- en: '![Example mental model of overall process.](Images/data_engineering_125013_01.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![整体流程的示例心理模型。](Images/data_engineering_125013_01.png)'
- en: Figure 4-1\. Example mental model of overall process.
  id: totrans-50
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-1\. 整体流程的示例心理模型。
- en: Planning A Great System
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 规划一个优秀的系统。
- en: So how do you avoid the Game of Telephone? It starts with planning. Here are
    a couple of thought starters, and then I’ll walk through best practices for the
    actual setup.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如何避免“电话游戏”呢？它始于规划。以下是一些思考的起点，然后我将介绍实际设置的最佳实践。
- en: The first, is to establish a meaningful unit of work relevant to your business.
    For example, for a company doing analytics on medical videos, it could be a single
    medical procedure. Then, within each procedure think about how many models (don’t
    assume one!), how often they will be updated, how the data will flow etc. We will
    cover this in more depth in the system design question, but for now, I just want
    to make sure it’s clear that ingestion is often not a “once and done” thing. It’s
    something that will need ongoing maintenance and likely expansion over time.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，是建立一个与您的业务相关的有意义的工作单元。例如，对于一家分析医疗视频的公司，可以是单个医疗程序。然后，在每个过程中，考虑有多少模型（不要假设只有一个！），它们将如何更新，数据将如何流动等等。我们将在系统设计问题中更深入地介绍这个问题，但现在，我只是想确保清楚地表明摄取通常不是“一劳永逸”的事情。它是需要持续维护并随时间可能扩展的事情。
- en: Second, is to think about the data storage and access, a Training Data Database.
    While it is possible to “role your own”, it’s difficult to holistically consider
    the needs of all of the groups. The more a Training Data Database is used, the
    easier is it is to manage the complexity. The more independent storage is used,
    the more pressure is put to “reinvent the wheel” of the database.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 第二，考虑数据存储和访问的问题，即训练数据数据库。虽然“自己实现”可能性存在，但全面考虑所有群体的需求却很困难。训练数据数据库使用得越多，管理复杂性就越容易。使用独立存储的越多，就越加压力要“重新发明数据库的轮子”。
- en: Specific to building a great ingestion sub-system. Usually the ideal is that
    these sensors feed directly into a training data system. Think about how much
    distance, or hops, is there between {sensors, predictions, raw data} and my training
    data tools?
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是在构建一个优秀的摄入子系统方面。通常理想情况是这些传感器直接反馈到训练数据系统中。想象一下在传感器、预测、原始数据与我的训练数据工具之间有多少距离或跳跃？
- en: Production data often needs to be reviewed by humans, analyzed at a set level,
    and potentially further “mined” for improvements. The more predictions, the more
    opportunity for further system correction. How will production data get to the
    training data system in a useful way? How many times is data duplicated during
    the tooling processes?
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 生产数据通常需要人类审核，以设置级别进行分析，并可能进一步“挖掘”以改进。预测越多，进一步系统校正的机会就越多。如何使生产数据以有用的方式进入训练数据系统？在工具处理过程中数据重复多少次？
- en: What are our assumptions around the distinctions between various uses of the
    data? For example querying the data within a training data tool scales better
    than expecting a data scientist to export all the data and then query it themselves
    after.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对数据的各种用途之间的区别有什么假设？例如，在训练数据工具中查询数据比期望数据科学家导出所有数据然后自行查询要更加可扩展。
- en: Naive & Training Data Centric approaches
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 天真与训练数据中心方法
- en: 'There are generally two major concepts to be aware of:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 通常有两个主要概念需要注意：
- en: Naive approaches
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 天真方法
- en: Tend to see Training Data as just one step to be bolted alongside a series of
    existing steps.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 认为训练数据只是一系列现有步骤中的一个步骤。
- en: Training Data centric approaches
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 训练数据中心方法
- en: Sees Training Data, the human supervision, as the “Center of Gravity” of the
    system. For example, a Training Data Database has the definitions, and/or literal
    storage, of the raw data, annotations, Schema, and mapping for machine-to-machine
    access.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 将训练数据视为人类监督系统的“重心”。例如，训练数据数据库具有原始数据、注释、架构和机器之间访问映射的定义和/或文字存储。
- en: There is naturally some overlap in approaches. In general, the greater the competency
    of the naive approach, the more it starts to look like a re-creation of a Training
    Data Centric one. While it’s possible to achieve desirable results using other
    approaches, it is much easier to consistently achieve desirable results with a
    Training Data Centric approach.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 方法上自然存在一些重叠。一般来说，天真方法的能力越大，它就越像是训练数据中心方法的再创造。虽然使用其他方法可以实现理想结果，但使用训练数据中心方法可以更容易地持续实现理想结果。
- en: Let’s get started by looking at how naive approaches typically work.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看看天真方法通常是如何工作的。
- en: Naive Approaches
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 天真方法
- en: Typically in a naive approach, sensors capture, store, & query the data *independently*
    of the training data tooling, as shown in Fig 4-2\. This usually ends up looking
    like a linear process, with pre-established start and end conditions.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 通常在天真方法中，传感器独立地捕获、存储和查询数据，如图 4-2\. 所示。这通常看起来像是一个线性过程，具有预先建立的起始和结束条件。
- en: '![Naive Data Engineering Process Example](Images/data_engineering_125013_02.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![天真数据工程流程示例](Images/data_engineering_125013_02.png)'
- en: Figure 4-2\. Naive Data Engineering Process Example
  id: totrans-69
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-2\. 天真数据工程流程示例
- en: 'The most common reasons Naive approaches get used:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的原因是使用天真的方法：
- en: The project started before Training Data Centric approaches had mature tooling
    support
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目在训练数据中心方法成熟的工具支持之前就已经开始了
- en: Engineers did not know about Training Data Centric approaches
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工程师们不知道有关训练数据中心方法的存在
- en: Testing and development of new systems
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试和开发新系统
- en: Old, historical data, with no chance of new data coming in (rare)
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 旧的历史数据，不可能有新数据进入（罕见）
- en: Cases where it’s impractical to use a Training Data Centric approach (rare)
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不实用训练数据中心方法的情况（罕见）
- en: Naive approaches tend to look like the Game of Telephone mentioned earlier.
    Since each team has their own copy of the data, errors accumulate as that data
    gets passed around. Since there is either no System of Record, or the System of
    Record does not contain the complete state of Training Data, it is difficult to
    make changes at the user level. Overall the harder it is to safely make changes,
    the slower it is to ship and iterate, and the worse the overall results are.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 初始方法往往像前面提到的电话游戏一样。由于每个团队都有自己的数据副本，因此随着数据的传递，错误会累积。由于没有记录系统或记录系统不包含训练数据的完整状态，因此难以在用户级别进行更改。总体而言，安全进行更改的难度越大，发货和迭代速度越慢，整体结果也越差。
- en: Additionally, naive approaches tend to be coupled to hidden or undefined human
    processes. For example, some engineer somewhere has a script on their local machine
    that does some critical part of the overall flow, but that script is not documented
    or not accessible to others in a reasonable way. Often because of a lack of understanding
    of how to use a Training Data Database as opposed to a purposefully decided process.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，初始方法往往与隐藏或未定义的人工流程耦合。例如，某个工程师在其本地机器上有一个脚本执行整个流程的某个关键部分，但该脚本未记录或无法合理地供其他人访问。通常是由于对如何使用训练数据数据库的理解不足，而不是故意决定的过程。
- en: In naive approaches there is a greater chance of data being unnecessarily duplicated.
    This increases hardware costs, such as storage and network bandwidth, in addition
    to the already mentioned conceptually bottlenecks between teams. It also can introduce
    security issues since the various copies may maintain different security postures.
    For example a team correlating data and bypassing security in a system earlier
    in the processing chain.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在初始方法中，数据不必要地重复的机会较大。这增加了硬件成本，例如存储和网络带宽，除了上述概念上的团队瓶颈之外。它还可能引入安全问题，因为各种副本可能保持不同的安全姿态。例如，团队在处理链中的早期阶段关联数据并绕过安全性。
- en: A major assumption in naive approaches is that a human is manually reviewing
    the data so that only the data desired to be annotated is imported. In other words,
    only data designated for annotation is imported. This “human before import” assumption
    makes it hard to effectively supervise production data, use exploration methods,
    and generally bottlenecks the process because of the manual and undefined nature
    of the hidden curation process.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 初始方法的一个主要假设是，人工手动审查数据，以便只导入希望注释的数据。换句话说，只有指定用于注释的数据才会被导入。这种“导入前人工”的假设使得有效监督生产数据、使用探索方法以及通常因隐藏的策展过程的手动和未定义特性而成为过程的瓶颈。
- en: Please think of this conceptually, not in terms of literal automation. A software-defined
    ingestion process is by itself a little indication of overall system health since
    it does not speak to any of the real architectural concerns around the usage of
    a Training Data Database.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 请从概念上考虑这一点，而不是从字面上的自动化角度。软件定义的摄取过程本身对整体系统健康的指示有所帮助，因为它并未涉及到关于使用训练数据数据库的任何真实架构问题。
- en: Training Data Centric
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 训练数据中心化
- en: Another option is to use a Training Data Centric approach. A Training Data Database,
    as shown in Fig 4-3, is the heart of a Training Data Centric approach.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种选择是使用训练数据中心化方法。如图4-3所示，训练数据数据库是训练数据中心化方法的核心。
- en: '![Training Data Database](Images/data_engineering_125013_03.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![训练数据数据库](Images/data_engineering_125013_03.png)'
- en: Figure 4-3\. Training Data Database
  id: totrans-84
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图4-3 训练数据数据库
- en: A Training Data Database has the definitions, and/or literal storage, of the
    raw data, annotations, Schema, and mapping for machine-to-machine access, and
    more. Ideally, it’s the complete definition of the system, meaning that given
    the Training Data Database, you could reproduce the entire ML process with no
    additional work.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 训练数据数据库具有原始数据、注释、架构和映射的定义和/或字面存储，供机器间访问等用途。理想情况下，它是系统的完整定义，这意味着有了训练数据数据库，你可以在不需要额外工作的情况下重新生成整个机器学习过程。
- en: When you use a Training Data Database as your System of Record there becomes
    a central place for all teams to store and access Training Data. The greater the
    usage of the Database the better the overall results, similar to proper use of
    a Database in a traditional application is well known to be essential.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将训练数据数据库作为你的记录系统时，所有团队都有一个集中存储和访问训练数据的地方。数据库的使用越广泛，整体结果就越好，类似于在传统应用程序中正确使用数据库被认为是至关重要的。
- en: 'The most common reasons to use this approach:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法的最常见原因：
- en: It supports a shift to data-centric machine learning. This means focusing on
    improving overall performance by improving the data instead of just improving
    the model algorithm.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它支持向数据为中心的机器学习迁移。这意味着专注于通过改进数据而不仅仅是改进模型算法来提升整体性能。
- en: It supports using multiple ML programs in one process, by having the definitions
    all in one place.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持在一个流程中使用多个ML程序，通过在一个地方定义所有的定义。
- en: Supports end users supervising (annotating) data. And supports embedding end-user
    supervision deeper in workflows and applications.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持最终用户监督（标注）数据，并支持将最终用户监督嵌入到工作流程和应用程序中。
- en: 'Other reasons include:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 其他原因包括：
- en: Decouples visual UI requirements from data modeling (e.g. query mechanisms)
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将视觉用户界面需求与数据建模（例如查询机制）解耦。
- en: Enables faster access to new tools for data discovery, what to label, and more.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以更快地访问新的数据发现工具、标记方式等。
- en: Enables user-defined file types, e.g. representing an “Interaction” as a set
    of images and text, supporting fluid iteration and end user-driven changes.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持用户定义的文件类型，例如将“交互”表示为一组图像和文本，支持流畅的迭代和端用户驱动的更改。
- en: Avoids data duplication, and stores external mapping definitions and relationships
    in one place.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免数据重复，并将外部映射定义和关系存储在一个地方。
- en: It unblocks teams to work as fast as they can instead of waiting for discrete
    stages.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它解除了团队的阻塞，使其能够尽快工作，而不必等待离散的阶段。
- en: 'The problems with a Training Data Database approach:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 使用训练数据数据库方法的问题：
- en: Requires knowledge of its existence and conceptual understanding.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要知道其存在并理解其概念。
- en: There is the time, ability, and resources to use a Training Data Database.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时间、能力和资源使用训练数据数据库。
- en: Well-established data access patterns may require re-working to the new context.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成熟的数据访问模式可能需要重新调整以适应新的上下文。
- en: Reliability of it as a system of Record does not have the same history as older
    systems have.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其作为记录系统的可靠性并不具有与旧系统相同的历史。
- en: Ideally, instead of deciding what raw data to send (e.g. from an Application
    to the Database), all relevant data gets sent to the Database. This means swapping
    the order to put all the data in the Database first. This helps to ensure it is
    the true system of record. For example, there may be a “what to label” program
    that uses all of the data, even if the humans only review a sample of it. Having
    all the data available to the “what to label” program through the Training Data
    Database makes this easy. The easiest way to remember this is to think of the
    Training Data Database as the center of gravity of the process.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，不是决定发送哪些原始数据（例如从应用程序到数据库），而是将所有相关数据发送到数据库。这意味着改变顺序，首先将所有数据放入数据库中。这有助于确保它是真正的记录系统。例如，可能有一个“标记方式”程序使用所有数据，即使人类只检查其中的一部分。通过训练数据数据库使所有数据对“标记方式”程序可用变得更加容易。记住这一点的最简单方法是将训练数据数据库视为流程的重心。
- en: The Training Data Database takes on the role of managing references to or even
    contains the literal byte storage of raw media. This means sending the data directly
    to the training data tooling. In actual implementation, there could be a series
    of processing steps, but the idea is that the final resting place of the data,
    the source of truth, is inside the Training Data Database.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 训练数据数据库承担管理对原始媒体的引用甚至包含文字字节存储的角色。这意味着直接将数据发送到训练数据工具中。在实际实施中，可能会有一系列处理步骤，但核心思想是数据的最终存放地、真实来源位于训练数据数据库内部。
- en: A Training Data Database is the complete definition of the system, meaning that
    given the Training Data Database, you can create, manage, and reproduce all end
    user ML application needs, including ML processes, with no additional work. This
    goes beyond MLOps which often focuses more on automation, modeling, and reproducibility
    purely on the ML side. You can think of MLOps as a sub concern of a more strategic
    Training Data Centric approach.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 训练数据数据库是系统的完整定义，这意味着给定训练数据数据库，您可以创建、管理和重现所有端用户ML应用程序需求，包括ML过程，而无需额外工作。这超越了通常更侧重于自动化、建模和单纯ML复现性的MLOps。您可以将MLOps视为更战略的训练数据中心方法的子关注点。
- en: A Training Data Database considers multiple users from day one and plans accordingly.
    For example an application designed to support data exploration can create indexes
    for data discovery automatically created at ingest. When it saves annotations,
    it can create indexes for discovery, for streaming, for security etc, all at the
    same time.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 训练数据数据库从一开始就考虑了多个用户，并相应地进行规划。例如，一个旨在支持数据探索的应用程序可以在摄入时自动创建用于数据发现的索引。当它保存注释时，可以同时创建用于发现、流式传输和安全性等的索引。
- en: A closely related theme is that of exporting the data to other tools. Perhaps
    you want to run some process to explore the data, and then need to send it to
    another tool for a security process, such as to blur personally identifiable info.
    Then you need to send it on to some other firm to annotate, get the results back
    from them into your models etc. At each of these steps, there is always a mapping
    (definitions) problem. Tool A outputs in a different format than Tool B inputs.
    I have talked a bit about data scale before, but as a quick reminder, this type
    of data transfer is often on the order of magnitude more than in other common
    systems. The best rule of thumb I can think of is that each transfer is more like
    a mini-database migration.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 导出数据到其他工具的一个相关主题是。也许您想运行一些进程来探索数据，然后需要将其发送到另一个工具进行安全处理，比如模糊化个人可识别信息。然后您需要将其发送给其他公司进行注释，将结果返回到您的模型中等。在每个步骤中，都存在映射（定义）问题。工具
    A 输出的格式与工具 B 的输入格式不同。之前我有过一些关于数据规模的讨论，但是快速提醒一下，这种数据传输通常比其他常见系统的数据传输量大一个数量级。我能想到的最好的经验法则是，每次传输更像是一个微型数据库迁移。
- en: Generally speaking, the tighter the connection between the sensors and the training
    data tools, the more potential for all of the end users and tools to be effective
    together. Every other step that’s added between sensors and the tools is virtually
    guaranteed to be a bottleneck. The data can still be backed up to some other service
    at the same time, but generally, this means organizing the data in the training
    data tooling from day one.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，传感器与训练数据工具之间的连接越紧密，所有最终用户和工具的潜力就越大。添加到传感器和工具之间的每一步几乎都有可能成为瓶颈。数据仍然可以同时备份到其他服务，但通常意味着从第一天开始组织训练数据工具中的数据。
- en: The First Steps
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第一步
- en: Let’s say you are on board to use a Training Data Centric approach. How do you
    actually get started?
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您准备使用训练数据中心化方法。那么，您实际上该如何开始？
- en: The first steps are to
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 首先步骤是
- en: Setup Training Data Database Definitions
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置训练数据数据库定义
- en: Setup Data Ingestion
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置数据摄入
- en: Let’s consider definitions first. A Training Data Database puts all the data
    in one place, including mapping definitions to other systems. This means that
    there is one single place for the System of Record and associated mapping definitions
    to modules running within the Training Data System and external to it. This reduces
    mapping errors, data transfer needs, and data duplication.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先考虑定义。训练数据数据库将所有数据放在一个地方，包括将映射定义到其他系统。这意味着系统记录和与训练数据系统内外运行的模块相关的映射定义都集中在一个地方。这减少了映射错误、数据传输需求和数据重复。
- en: Before we start actually ingesting data, here are a few more terms that need
    to be covered first.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始实际摄入数据之前，这里有一些需要首先涵盖的术语。
- en: Raw Data Storage
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原始数据存储
- en: Raw Media BLOB Specific Concerns
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 原始媒体 BLOB 特定关注点
- en: Formatting and Mapping
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 格式化和映射
- en: Data Access
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据访问
- en: Security Concerns
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全关注点
- en: Let’s start with Raw Data Storage.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从原始数据存储开始。
- en: Raw Data Storage
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 原始数据存储
- en: At a high level the goal is to get the raw data, such as images, video, and
    text, into a usable form for Training Data work.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在高层次上，目标是将原始数据，如图像、视频和文本，转换为可用于训练数据工作的形式。
- en: It is common to store raw data in a Bucket abstraction. This can be on the cloud
    or on local storage using software like MinIO. Some people like to think of these
    cloud buckets as “dump it and forget”, but there are actually a lot of performance
    tuning options available. At the Training Data scale raw storage choices matter.
    If you are a storage guru then feel free to skip this subsection.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 通常使用 Bucket 抽象来存储原始数据。这可以是在云上，也可以是使用像 MinIO 这样的本地存储软件。有些人喜欢把这些云桶看作是“倒入并忘记”，但实际上有很多性能调优选项可供选择。在训练数据规模下，原始存储选择很重要。如果您是一个存储专家，那么可以跳过这个小节。
- en: Storage Class
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 存储类别
- en: There are more major differences between storage tiers than it may first appear.
    The tradeoffs include access time, redundancy, geo-availability, etc. There are
    orders of magnitude price differences between the tiers. The most key tool to
    be aware of is Lifecycle rules, usually, with a few clicks you can set policies
    to automatically move old files to cheaper storage options as they age. Examples
    of best practices [in more granular detail](https://diffgram.readme.io/docs/storage-tier-best-practices)
    can be found here.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 存储层之间的主要差异比初看起来的要大得多。折衷方案包括访问时间、冗余、地理可用性等。不同存储层之间的价格差异有几个数量级。最关键的工具之一是生命周期规则，通常可以通过几次点击设置策略，使旧文件自动转移到更便宜的存储选项。有关最佳实践的更详细例子可以在这里找到
    [（更详细的内容）](https://diffgram.readme.io/docs/storage-tier-best-practices)。
- en: GeoLocation(AKA Zone, Region)
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 地理位置（又称区域、地区）
- en: Are you storing data on one side of the Atlantic Ocean and having annotators
    access it on the other? It’s worth considering where the actual annotation is
    expected to happen, and if there are options to store the data closer to it.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 您是否将数据存储在大西洋的一侧，而注释工具却需要在另一侧访问？值得考虑的是，实际的注释预期发生在何处，以及是否有存储数据更接近的选项。
- en: Vendor Support
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 供应商支持
- en: Not all annotation tools have the same degree of support for all major vendors.
    Keep in mind that you can typically manually integrate any of these offerings,
    but this requires more effort then tools that have native integration.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有注释工具对所有主要供应商的支持程度相同。请记住，通常可以手动集成其中任何一个提供的工具，但这需要比具有本机集成的工具更多的努力。
- en: Support for accessing data from these storage providers is different from the
    tool running on that provider. Some tools may support access from all three, but
    as a service, the tool itself runs on a single cloud. If you have a system you
    install on your own cloud usually the tool will support all three.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 支持从这些存储提供商访问数据的功能与运行在该提供商上的工具不同。有些工具可能支持从所有三个提供商访问，但作为服务，工具本身只在单一云上运行。如果您在自己的云上安装系统，则通常工具将支持所有三个云。
- en: For example, you may choose to install the system on Azure. You may then pull
    data into the tool from Azure which leads to better performance. However, that
    doesn’t prevent you from pulling data from Amazon and Google as needed.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以选择在Azure上安装系统。然后，您可以从Azure中将数据拉入工具中，这将带来更好的性能。然而，这并不妨碍您根据需要从亚马逊和谷歌中拉取数据。
- en: By Reference or by Value
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按引用或按值
- en: If you want to maintain your folder structure some tools support referencing
    the files instead of actually transferring them. The benefit of this is less data
    transfer. A downside is that now it’s possible to have broken links. Also separation
    of concerns could be an issue, for example some other process may modify a file
    that the annotation tool expects to be able to access.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望保持文件夹结构，一些工具支持引用文件而不是实际传输它们。这样做的好处是减少数据传输量。缺点是现在可能会出现断开的链接。此外，关注点分离可能是一个问题，例如，其他进程可能会修改注释工具期望能够访问的文件。
- en: Even when you use a pass-by-reference approach for the rate data, it’s crucial
    that the system of truth is the Training Data Database. For example, data may
    be organized into sets in the Database that are not represented in the bucket
    organization. The bucket also represents only the raw data, whereas the Database
    will have the annotations and other associated definitions.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 即使您对速率数据采用按引用传递的方法，系统的真实数据仍然是培训数据数据库。例如，数据可以在数据库中组织成集合，这些集合在存储桶组织中没有表示。存储桶仅表示原始数据，而数据库则包含注释和其他相关定义。
- en: For simplicity, it’s best to think of the Training Data Database as one abstraction,
    even if the raw data is stored outside the physical hardware of the Database.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 简单起见，最好将培训数据数据库视为一个抽象，即使原始数据存储在数据库物理硬件之外。
- en: '![How References to Raw Blobs Intersect a Training Data Database s other functions.](Images/data_engineering_125013_04.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![如何参考原始Blob与培训数据数据库的其他功能。](Images/data_engineering_125013_04.png)'
- en: Figure 4-4\. How References to Raw Blobs Intersect a Training Data Database’s
    other functions.
  id: totrans-137
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图4-4\. 如何参考原始Blob与培训数据数据库的其他功能。
- en: Off-the-shelf dedicated Training Data tooling on your own hardware
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自有硬件上的现成专用培训数据工具
- en: In this context, we trust the training data tooling to manage the signed URL
    process. We trust the Training Data tooling to handle the IAM concerns. With this,
    assuming we trust the tooling (perhaps because we can inspect the source code),
    the only real concern is what bucket it uses - and that generally becomes a one-time
    concern, because the tool manages the IAM. For advanced cases, the tool can still
    link up with a single sign-on (SSO) or more complex IAM scheme.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们信任训练数据工具来管理已签名的URL过程。我们信任训练数据工具来处理IAM方面的问题。假设我们信任该工具（也许是因为我们可以检查源代码），唯一真正的问题就是它使用哪个存储桶
    - 通常这成为一个一次性问题，因为该工具负责IAM的管理。对于高级案例，该工具仍然可以连接到单点登录（SSO）或更复杂的IAM方案。
- en: The tooling doesn’t have to run on the hardware. The next level up is to trust
    the training data tooling and trust the service provider to host/process the data.
    Although at that point most of this discussion is less relevant because really
    just following instructions, however, it’s the least level of control.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 工具不必在硬件上运行。更高级别是信任训练数据工具并信任服务提供商来托管/处理数据。尽管在那时大部分这些讨论已经不太相关，因为真的只是按照说明操作，然而，这是最低级别的控制。
- en: Data storage
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据存储
- en: By reference or physically moving the data.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 通过引用或实际移动数据。
- en: Where does the data rest?
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据位于何处？
- en: Generally speaking, any form of tooling will generate some form of data that
    is added to the “original” data.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，任何形式的工具都会生成某种形式的数据，将其添加到“原始”数据中。
- en: This means if I have data in bucket A and I use a tool to process it there either
    be additional data in bucket A or I will need a new bucket B to be used by the
    tool. This is true for Diffgram, Sagemaker, and as far as I’m aware most major
    tools.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着如果我在存储桶A中有数据，并且我使用工具在那里处理它，要么在存储桶A中会有附加数据，要么我需要一个新的存储桶B供工具使用。这对于Diffgram、Sagemaker以及据我所知大多数主要工具都是真实的。
- en: 'Depending on your cost and performance goals this may be a critical issue or
    of least concern. On a practical level for most use cases:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的成本和性能目标，这可能是一个关键问题或不太重要的问题。在大多数用例的实际水平上：
- en: Expect that additional data will be generated.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 期望将生成额外数据。
- en: Know where the data is being stored - but don’t overthink it.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 知道数据存储在哪里 - 但不要想得太多。
- en: In the same way, we don’t really question how much storage say a Postgres Write
    Ahead Log (WAL) generates, my personal opinion is that it’s best to trust the
    training data tool in this regard. If there’s an issue - address it within the
    training data tools realm of abstraction.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们并不真的关心例如Postgres Write Ahead Log（WAL）生成了多少存储空间，我个人认为最好在这方面信任训练数据工具。如果有问题
    - 在训练数据工具的抽象领域内解决。
- en: Bucket connection
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存储桶连接
- en: Saying all this above - the best abstraction is to create a connection from
    the training data tooling to the bucket. There are various opinions on how to
    do this and the specifics vary by hardware and cloud provider.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 说了上面的所有 - 最好的抽象是从训练数据工具到存储桶创建连接。如何做这件事有各种不同的观点，并且具体细节会根据硬件和云提供商而变化。
- en: '[ insert example from diffgram UI of file browser]'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '[从Diffgram UI的文件浏览器中插入示例]'
- en: '[ insert example of solution schema with training data tool and bucket]'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '[插入示例解决方案架构，训练数据工具和存储桶]'
- en: For the non-technical user, this is essentially “logging in” to a bucket. In
    other words, I create a new bucket A and it gets a user id and password (client
    ID / client secret) from the IAM system. I pass those credentials to the Training
    Data tool and it stores them securely. Then when needed the Training Data tool
    uses those credentials to interact with the bucket.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 对于非技术用户，这本质上是“登录”到一个存储桶。换句话说，我创建了一个新的存储桶A，并且从IAM系统获取了用户ID和密码（客户端ID /客户端密钥）。我将这些凭据传递给训练数据工具，并且它会安全地存储这些凭据。然后在需要时，训练数据工具使用这些凭据与存储桶进行交互。
- en: Raw Media (BLOB) Type Specific
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 原始媒体（BLOB）类型具体
- en: A BLOB is a Binary Large Object. It is the raw data of media. Depending on your
    media type, there will be specific concerns. Each media type will have vastly
    more concerns than can be listed here. You must research each type for your needs.
    Here I note some of the most common considerations to be aware of. A Training
    Data Database will help format BLOBs to be useful for multiple end users, such
    as Annotators and Data Science.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: BLOB是二进制大对象。这是媒体的原始数据。根据您的媒体类型，将存在特定的问题。每种媒体类型都会具有远比这里列出的问题更多的问题。您必须针对您的需求研究每种类型。在这里，我列出了一些最常见的需要注意的问题。训练数据数据库将帮助格式化BLOB，以便多个最终用户（如标注者和数据科学家）使用。
- en: Images
  id: totrans-157
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图像
- en: Images usually don’t require any technical data prep because they are individually
    small enough files. More complex formats like TIF will often be “flattened”, although
    it’s possible to preserve layers in some tools.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图像通常不需要任何技术数据准备，因为它们是个别文件且足够小。像TIF这样的更复杂格式通常会被“展开”，尽管在一些工具中保留图层是可能的。
- en: Video
  id: totrans-159
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 视频
- en: It’s common to split video files into smaller clips for easier annotation and
    processing. For example, splitting a 10-minute video into 60 second clips.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 将视频文件分割成较小的片段以便于注释和处理。例如，将一段10分钟的视频分割成60秒的片段。
- en: Sampling frames is one approach to reduce processing overhead. This can be done
    by reducing the frame rate and extracting frames. For example, converting a 30
    frames per second (FPS) to 5 or 10\. The drawback is that it makes it more difficult
    to annotate or use other relevant video features like interpolation or tracking.
    Usually it’s best to keep the video as a playable video and also extract all the
    frames required. This improves the end user annotation experience and maximizes
    annotation ability.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 采样帧是减少处理开销的一种方法。这可以通过降低帧率和提取帧来实现。例如，将每秒30帧的视频转换为每秒5或10帧。缺点是这使得注释或使用其他相关视频功能（如插值或跟踪）变得更加困难。通常最好保留视频作为可播放的视频，并提取所有所需的帧。这提高了最终用户的注释体验并最大化了注释能力。
- en: Event-focused analytics need the exact frame when something happens which effectively
    becomes lost if many frames are removed. Further, the full data is available to
    be sampled by “find interesting highlights” algorithms. This leads Annotators
    to see more “interesting” things happening and higher quality data. Object tracking
    and interpolation further drives this point home, an annotator may only need to
    label a handful of frames and often get many back “for free” through those algorithms.
    And while nearby frames are generally similar in practice it often still helps
    to have the extra data.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 针对事件的分析需要准确的发生帧，如果删除了许多帧，这些信息可能会丢失。此外，“查找有趣的亮点”算法可以对完整数据进行采样。这使得注释者可以看到更多“有趣”的事情发生，从而获得更高质量的数据。对象跟踪和插值进一步支持这一点，注释者可能只需要标记少量帧，通常可以通过这些算法免费获取更多帧。虽然附近的帧通常在实践中是相似的，但拥有额外的数据仍然有助于处理。
- en: An exception to this is that sometimes very high FPS video (e.g. 240-480+) may
    still need to be sampled down to 120 FPS or similar. Note that just because many
    frames are available to be annotated, we can still choose to only train models
    on completed videos, completed frames, etc. If you must downsample the frames,
    use the global reference frame to maintain the mapping of the downsampled frame
    to the original frame.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例外是，有时非常高的FPS视频（例如240-480+）仍然需要采样到120 FPS或类似的帧率。请注意，尽管有许多帧可以进行注释，但我们仍然可以选择仅在完整视频、完整帧等上训练模型。如果必须对帧进行降采样，请使用全局参考帧以保持降采样帧与原始帧的映射关系。
- en: 3D
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3D
- en: Usually you will need to transmit each files series of x,y,z triples to the
    SDK.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您需要将每个文件系列的x、y、z三元组传输到SDK。
- en: Text
  id: totrans-166
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本
- en: Tokenizer
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 分词器
- en: You will need to select your desired tokenizer or confirm the tokziner used
    by the system meets your needs. The tokenizer divides up words, for example based
    on spaces, or more complex algorithms.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要选择你所需的分词器或确认系统使用的分词器是否符合你的需求。分词器将单词分割开来，例如基于空格或更复杂的算法。
- en: Medical
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 医疗
- en: If your specific medical file is not supported by the tool you may need to
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的特定医疗文件不受工具支持，可能需要
- en: Downsample color channels
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 降低色彩通道的采样率
- en: Select which z-axis or slice you wish to use
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您希望使用的z轴或切片
- en: Crop out images from a too - large single image.
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从过大的单个图片中裁剪出图像。
- en: Geospatial
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 地理空间
- en: GEOTiff (and cloud GEOTiff COG) is a standard format. Be aware that a projection
    mapping change may be needed to standardize layers.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: GEOTiff（以及云GEOTiff COG）是一种标准格式。请注意，可能需要进行投影映射变换以标准化图层。
- en: Formatting & Mapping
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 格式化与映射
- en: Raw media is one part. Annotations and predictions are another big part. Think
    in terms of setting up data definitions rather than a one time import. The better
    your Definitions, the more easily data can flow between ML applications, and the
    more end users can update the data without engineering.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 原始媒体是一部分，注释和预测是另一个重要部分。考虑设置数据定义，而不是一次性导入。您的定义越好，数据就越容易在机器学习应用程序之间流动，终端用户也能够更新数据而无需工程支持。
- en: User Defined Types (Compound Files)
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户定义的类型（复合文件）
- en: Real world cases often involve more than one file. For example, a Driver’s license
    has a front and a back. We can think of creating a new user defined type of “Drivers
    License” and then having it support two child files, each being an Image. Or we
    can consider a “Rich Text” conversation that has multiple text files, images,
    etc.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现实世界的案例通常涉及多个文件。例如，驾驶证件有正面和反面。我们可以考虑创建一个新的用户定义类型的“驾驶执照”，然后支持两个子文件，每个文件都是图像。或者我们可以考虑一个“富文本”对话，其中包含多个文本文件、图像等。
- en: Defining DataMaps
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义数据映射
- en: A DataMap handles the loading and unloading definitions between applications.
    For example, loading data to a model training system or a What to Label analyzer.
    Having these definitions well defined allows smooth integrations by end users,
    and decouples the need for engineering level changes. In other words, it decouples
    when an Application is called from the data definition itself. Examples include
    declaring a mapping between spatial locations formatted as *x_min**,* *y_min**,*
    *x_max**,* *y_max* and *top_left**,* *bottom_right*. Or mapping integer results
    from a model back to a Schema.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 数据映射处理应用程序之间的加载和卸载定义。例如，将数据加载到模型训练系统或 What to Label 分析器中。这些定义清晰地定义允许最终用户进行平稳集成，并解耦了需要工程级别更改的需求。换句话说，它解耦了从数据定义本身调用应用程序的时机。例如，声明空间位置格式化的映射
    *x_min**,* *y_min**,* *x_max**,* *y_max* 和 *top_left**,* *bottom_right* 之间的映射。或者将模型的整数结果映射回模式。
- en: Ingest Wizards
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据导入向导
- en: A new item is UI based ingestion wizards. This started originally with file
    browsers for cloud based systems. And has progressed into full grown mapping engines,
    similar to smart switch apps for phones, where I use an app to move all my data
    from android to iphone or versa.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 新的基于 UI 的数据摄取向导项目。最初是为云系统的文件浏览器而设计。并发展成为完全成熟的映射引擎，类似于智能切换应用程序，比如我使用一个应用程序将所有数据从安卓移动到iPhone或相反。
- en: At a high level a mapping engine steps you through the process of mapping each
    field from one data source to another.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在高层次上，映射引擎引导您通过将一个数据源的每个字段映射到另一个数据源的过程。
- en: Mapping wizards offer tremendous value. They save having to do a more technical
    integration. They typically provide more validations and checks to ensure the
    data is what you expect (picture like seeing a email preview in gmail before committing
    to open the email). And best of all once the mappings are setup, then can easily
    be swapped out from a list without any context switching!
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 映射向导提供了巨大的价值。它们避免了进行更加技术性的集成。它们通常提供更多的验证和检查，以确保数据符合您的预期（就像在 Gmail 中查看电子邮件预览之后再决定是否打开电子邮件）。最重要的是，一旦设置了映射，就可以轻松地从列表中切换，而无需任何上下文切换！
- en: The impact of this is hard to understate. Before you may have been hesitant
    to say try a new model architecture, commercial prediction service, etc. because
    of the nuances of getting the data to and from it. This dramatically relieves
    that pressure.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做的影响难以低估。以前，你可能因为数据的细微差别而犹豫不决，比如尝试新的模型架构、商业预测服务等。这显著减轻了这种压力。
- en: What are the limitations of wizards? Well first some tools don’t support them
    yet so it may not be available yet. It may impose technical limitations that are
    not present in more pure API calls or SDK integrations.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 向导的限制是什么？首先，有些工具尚不支持它们，因此可能尚不可用。它可能会施加技术上的限制，这些限制在更纯粹的 API 调用或 SDK 集成中并不存在。
- en: One of the biggest gaps in tooling is often around the question “How hard is
    it to set up my data in the system and maintain it?”
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 工具中最大的空白之一通常围绕着一个问题：“设置我的数据到系统中并维护它有多难？”
- en: Then comes what type of media it can ingest? How quickly can it ingest it?
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是它可以摄入什么类型的媒体？它摄入速度有多快？
- en: This is a problem that’s somewhat distinct from other software. You know when
    you get a link to a document and you load it for the first time? Or some big document
    starts to load on your computer?
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个与其他软件有些不同的问题。你知道当你第一次加载一个文档的链接时？或者当你的计算机开始加载一个大文档时？
- en: Recently new technology like “Import Wizards” - step by step forms - have come
    up that help make some of the data import process easier. While I fully expect
    these processes to continue to become even easier over time, the more you know
    about the behind the scenes aspects, the more you understand how these new wonderful
    wizards are actually working.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 最近出现了像“导入向导” - 逐步表单 - 这样的新技术，有助于简化一些数据导入过程。虽然我完全预期这些过程随着时间的推移会变得更加简单，但是你了解幕后方面的知识越多，你就越能理解这些新奇的向导是如何实际工作的。
- en: Bucket
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 桶
- en: 'A technology that stores raw data such as images and video. Also called: Object
    Store'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 一种存储原始数据（例如图像和视频）的技术。也称为：对象存储
- en: Binary Large Object - BLOB
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 二进制大对象 - BLOB
- en: 'Raw data such as images, video, text. Also known as: Object'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 原始数据，例如图像、视频、文本。又称为：对象
- en: Organizing Data and Useful Storage
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组织数据和有效存储
- en: One of the first challenges is often how to organize the data you have already
    captured (or will capture). One reason this is more challenging than it may at
    first appear is often these raw datasets are stored remotely.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 最初的挑战之一通常是如何组织已经捕获（或将要捕获）的数据。这比起初看起来更具挑战性的一个原因通常是这些原始数据集通常存储在远程。
- en: At the time of writing cloud data storage browsers are generally less mature
    than local file browsers. So even the most simple operations, for example myself
    sitting at a screen and dragging files, can take on a new challenge.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，云数据存储浏览器通常比本地文件浏览器不够成熟。因此，即使是最简单的操作，例如我坐在屏幕前拖放文件，也可能面临新的挑战。
- en: 'Some practical prescriptions here:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些实际的建议：
- en: Try to get the data into your annotation tool sooner in the process then later.
    For example, at the same time new data comes in, if I write the data reference
    to the annotation tool at a similar time I’m writing to a generic object store
    I can “automatically” organize it to a degree, and or more smoothly inlist team
    members to help with organization level tasks.
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量在处理过程中尽早将数据引入注释工具。例如，当新数据进入时，如果我同时将数据引用写入注释工具，就可以在某种程度上“自动”组织它，或者更顺利地邀请团队成员协助进行组织层任务。
- en: Consider using tools that help surface the “most interesting” data. This is
    an emerging area - but it’s already clear that these methods, while not without
    their challenges, have merit and appear to be getting better.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑使用帮助展示“最有趣”数据的工具。这是一个新兴领域 - 但已经明显这些方法虽然不是没有挑战，但具有一定的价值且正在变得更好。
- en: Use Tags. As simple as it sounds, tagging datasets with business level organizational
    information helps. E.g. the Dataset “Train Sensor 12” can be tagged “Client ABC”.
    Tags can cross cut data science concerns and allow both business control/organization
    and data science level objectives.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用标签。尽管听起来简单，但使用业务级组织信息标记数据集是有帮助的。例如，数据集“训练传感器 12”可以被标记为“客户 ABC”。标签可以横切数据科学关注点，允许业务控制/组织和数据科学级目标。
- en: Remote Storage
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 远程存储
- en: Data is usually stored remotely relative to the end user. This is because of
    the size of the data, security requirements, automation (eg connecting from an
    integrated program, practicalities of running model inference, aggregating data
    from nodes/system), etc. And teammates, the person who administers the training
    data, may not be the person who collected the data (consider use cases in medical,
    military, on-site construction etc).
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 数据通常相对于最终用户是存储在远程的。这是由于数据的规模、安全需求、自动化（例如连接来自集成程序的连接、运行模型推理的实用性、聚合来自节点/系统的数据等）。而且团队成员，负责管理训练数据的人，可能不是收集数据的人（考虑医疗、军事、现场建设等使用案例）。
- en: This is relevant even for solutions with no external internet connection, also
    commonly referred to as “air gapped” secret-level solutions. In these scenarios,
    it’s still likely the physical system that houses the data will be a different
    box than the end user even if sitting 2 feet from each other.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于没有外部互联网连接的解决方案也是相关的，通常称为“空气隔离”秘密级解决方案。在这些场景中，即使端用户与其相隔不足两英尺的物理系统，仍然可能是不同的设备盒。
- en: The implication of this is we need to somehow access the data. At the very least
    by whomever is annotating the data, and most likely also by some kind of data
    prep process.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们需要以某种方式访问数据。至少是由正在注释数据的人，很可能还包括某种数据准备流程。
- en: Versioning
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 版本控制
- en: Versioning is important to reproducibility. That said, sometimes versioning
    gets a little “too much” attention. In practice, for most use cases being mindful
    of the high level concepts, using snapshots, and good definition will get you
    very far.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 版本控制对可重现性很重要。也就是说，有时候版本控制会吸引“太多”的注意力。实际上，在大多数使用案例中，注意高级概念、使用快照和良好的定义将使你走得更远。
- en: There are 3 primary levels of data versioning, Per Instance (Annotation), Per
    File, And Export.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 数据版本控制主要有三个层次，即每个实例（注释）、每个文件和导出。
- en: Their relation to each other is shown in Fig 4.5.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 它们之间的关系如图 4.5 所示。
- en: '![Versioning High Level Comparison](Images/data_engineering_125013_05.png)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
  zh: '![版本控制高级比较](Images/data_engineering_125013_05.png)'
- en: Figure 4-5\. Versioning High Level Comparison
  id: totrans-212
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图4-5. 版本控制高级比较
- en: Here we introduce them at a high level.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们从高层次介绍它们。
- en: Per Instance History
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 每个实例的历史记录
- en: By default Instances are not hard deleted. When an edit is made to an existing
    instance, Diffgram marks it as soft delete and creates a new instance that succeeds
    it, as shown in Figure 4.6\. For example, use this for deep dive annotation or
    model auditing. It is assumed that soft_deleted instances are not returned when
    the default instance list is pulled for a file.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，实例不会被硬删除。对现有实例进行编辑时，Diffgram将其标记为软删除，并创建其后继的新实例，如图4.6所示。例如，用于深入的注释或模型审计。假设软删除的实例不会在默认实例列表中返回文件时返回。
- en: '![Left  Per Instance History in UI. Right  A single differential comparison
    between the same instance at different points in time.](Images/data_engineering_125013_06.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![左：UI中的每个实例历史。右：同一实例在不同时间点的单个差分比较。](Images/data_engineering_125013_06.png)'
- en: 'Figure 4-6\. Left: Per Instance History in UI. Right: A single differential
    comparison between the same instance at different points in time.'
  id: totrans-217
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图4-6. 左：UI中的每个实例历史。右：同一实例在不同时间点的单个差分比较。
- en: Per File & Per Set
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 每个文件和每组
- en: Each set of Tasks may be set to automatically create copies per file at each
    stage of the processing pipeline. This automatically maintains multiple file level
    versions relevant to the task schema.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 每组任务可能设置为在处理流水线的每个阶段自动创建每个文件的副本。这自动维护与任务模式相关的多个文件级别版本。
- en: You may also programmatically and manually organize and copy data into sets
    on demand. Filter data by tags, such as by a specific machine learning run. Compare
    across files and sets to see the diff on what’s changed.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以根据需要编程和手动组织和复制数据到集合中。通过标签筛选数据，例如特定的机器学习运行。跨文件和集合进行比较，查看变更的差异。
- en: Add files to multiple sets for cases where you want the files to always be on
    the latest version. That means you can construct multiple sets, with different
    criteria, and instantly have the latest version as annotation happens. Crucially
    this is a living version, so it’s easy to always be on the “latest”.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件添加到多个集合中，用于希望文件始终处于最新版本的情况。这意味着您可以构建多个集合，具有不同的条件，并在注释发生时即时获得最新版本。关键是这是一个动态版本，因此始终处于“最新”状态很容易。
- en: For example, use these building blocks to flexibly manage versions across work
    in progress at the administer level.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在管理员级别使用这些基本构件灵活管理工作进行版本控制。
- en: Per Export Snapshots
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 每次导出的快照
- en: Every export is automatically cached into a static file. This means you can
    take a snapshot at any moment, for any query, and have a repeatable way to access
    that exact set of data. Combine with webhooks, SDK, or Userscripts to automatically
    generate exports. Generate them on demand anytime. For example, use this to guarantee
    a model is accessing the exact same data. The header of an export is shown as
    an example in Fig 4.7.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 每次导出都会自动缓存到静态文件中。这意味着您可以随时随地为任何查询拍摄快照，并具有访问该准确数据集的可重复方法。结合Webhooks、SDK或用户脚本自动生成导出文件。随时按需生成它们。例如，使用此功能确保模型正在访问相同的数据。导出的标题示例如图4.7所示。
- en: '![Export UI Listview Example](Images/data_engineering_125013_07.png)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![导出UI列表视图示例](Images/data_engineering_125013_07.png)'
- en: Figure 4-7\. Export UI Listview Example
  id: totrans-226
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图4-7. 导出UI列表视图示例
- en: Exporting and access pattern trade-offs will be covered in more detail in Data
    Access.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 导出和访问模式的权衡将在数据访问中详细介绍。
- en: Data Access
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据访问
- en: So far we have covered overall architectural concepts, such as using a Training
    Data Database to avoid a game of telephone. And concepts and BLOBs and formats.
    Now we discuss the Annotations themselves. A benefit of using a Training Data
    Centric approach is you get best practices, such as snapshots and streaming built-in.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经涵盖了整体架构概念，比如使用训练数据数据库来避免电话游戏。还有BLOBs和格式的概念。现在我们讨论注释本身。使用以训练数据为中心的方法的好处是，您可以得到最佳实践，比如内置的快照和流式处理。
- en: Streaming is a separate concept from Querying, but goes hand in hand in practical
    applications. For example you may run a query that results in 1/100 of the data
    of a file level export, and then stream that slice of the data directly in code.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 流式处理是与查询分开的概念，但在实际应用中紧密联系在一起。例如，您可以运行一个查询，结果是文件级别导出的1/100数据量，然后在代码中直接流式处理该数据切片。
- en: There are some major concepts to be aware of
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些重要的概念需要注意
- en: File Based Exports
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于文件的导出
- en: Streaming
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流式处理
- en: Querying Data
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询数据
- en: Disambiguating Storage, Ingestion, Export, and Access
  id: totrans-235
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 澄清存储、摄入、导出和访问
- en: Data storage
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 数据存储
- en: Is the literal storage of the BLOBs and not the Annotations, which are assumed
    to be kept in a separate database.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 是 BLOBs 的字面存储，而不是假定保存在单独数据库中的注释。
- en: Ingestion
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 摄入
- en: Is about the throughput, architecture, formats, and mapping of data. Often this
    is between other applications and the Training Data system.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 关于数据的吞吐量、架构、格式和映射。通常在训练数据系统与其他应用程序之间。
- en: Export
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 导出
- en: In this context usually refers to a one time file based export from the Training
    Data system.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在此上下文中通常指从训练数据系统中的一次性基于文件的导出。
- en: Data Access
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 数据访问
- en: Is about querying, viewing, downloading BLOBs and Annotations.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 关于查询、查看、下载 BLOBs 和注释。
- en: One way to think of this is that often the way data is interested in a database
    is different from how it’s stored at rest, and how it’s queried. Training data
    is similar. There’s processes to ingest data, different processes to store it,
    and different again to query it.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 一种思考方式是，数据通常以不同于静态存储和查询的方式存储在数据库中。训练数据类似。有摄入数据的过程，将其存储的不同过程，以及查询它的另一种不同过程。
- en: Modern Training Data systems store Annotations in a Database (not a JSON dump),
    and provide abstract query capabilities on those Annotations.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 现代训练数据系统将注释存储在数据库中（而不是 JSON 转储），并提供对这些注释的抽象查询功能。
- en: File Based Exports
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于文件的导出
- en: As mentioned in versioning, a file based export is a moment in time snapshot
    of the data. This is usually generated only on a very rough set of criteria, e.g.
    a Dataset name. File based exports are fairly straight forward so I won’t spend
    much time on them. A comparison of trade-offs of File Based to Streaming is covered
    in the next section.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 如版本控制中所述，基于文件的导出是数据的时间点快照。通常仅根据一组非常粗略的标准生成，例如数据集名称。基于文件的导出非常简单，因此我不会在其上花费太多时间。文件导出与流式传输的权衡比较在下一部分中详细讨论。
- en: Streaming Data
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据流
- en: Classically, annotations were always exported into a static file. For example
    a JSON file.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，注释总是导出到静态文件中。例如 JSON 文件。
- en: Instead of generating an export as a one off thing you stream the data directly
    into memory.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是生成一次性导出，您可以将数据直接流式传输到内存中。
- en: This is the question “How to get my data out of the system?”. All systems offer
    some form of export. Is it a static one term export? Is it direct to tensorflow
    or pytorch memory?
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 这是“如何从系统中获取我的数据？”的问题。所有系统都提供某种形式的导出。是静态的一次性导出？是直接到 tensorflow 或 pytorch 内存？
- en: Streaming Benefits
  id: totrans-252
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 流式传输的好处
- en: Load only what you need, which may be a small percent of a JSON file.
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只加载您需要的内容，可能是 JSON 文件的一小部分。
- en: At scale it may be impractical to load all the data into a JSON file and so
    this may be a major benefit.
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在大规模情况下，将所有数据加载到 JSON 文件中可能是不切实际的，因此这可能是一个重要的优势。
- en: Works better for large teams. Avoids waiting for static files. You can program
    and do work with the expected dataset before Annotation starts, or even while
    Annotation is happening.
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更适合大型团队。避免等待静态文件。您可以在注释开始之前编程和处理预期的数据集，甚至在注释进行时进行工作。
- en: More memory efficient - because it’s streaming, you need not ever load the entire
    dataset into memory. This is especially applicable for distributed training, and
    when marshaling a JSON file would be impractical on a local machine.
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更节省内存 - 因为它是流式传输，您无需将整个数据集加载到内存中。这在分布式训练以及在本地机器上处理 JSON 文件将不切实际时尤为适用。
- en: Saves having “double mapping” e.g. mapping to another format, which will itself
    then be mapped to tensors. In some cases too parsing a JSON file can take even
    more effort then just updating a few tensors.
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免“双重映射”，例如映射到另一种格式，然后再映射到张量。在某些情况下，解析 JSON 文件甚至比仅更新几个张量更费力。
- en: More flexibility, format can be defined and redefined by end users.
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更灵活，格式可以由最终用户定义和重新定义。
- en: Streaming Drawbacks
  id: totrans-259
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 流式传输的缺点
- en: Defined in code. If the dataset changes may affect reproducibility unless additional
    steps are taken.
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在代码中定义。如果数据集发生变化，可能会影响可重复性，除非采取额外步骤。
- en: Requires a network connection.
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要网络连接。
- en: Some legacy training systems / AutoML providers may not support loading directly
    from memory and may require static files.
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些传统的训练系统/自动机器学习提供商可能不支持直接从内存加载，可能需要静态文件。
- en: This is different from exporting in that it implies a direct connection.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 这与导出不同，它意味着直接连接。
- en: One thing to keep top of mind throughout this is that we aren’t really wanting
    to statically select folders and files. We are really setting up a process in
    which we stream new data, in an event driven way. To do this, we need to think
    of it more like assembling a pipeline, then the mechanics of getting a single
    existing known set.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 有一件事要牢记，即我们不希望静态选择文件夹和文件。我们真正要做的是设置一种流新数据的过程，以事件驱动的方式。为此，我们需要将其视为组装管道，而不是获取单个现有已知集合的机制。
- en: Example
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: In this example we will fetch a dataset and stream it using the Diffgram SDK
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将使用Diffgram SDK获取数据集并进行流式处理。
- en: '[PRE0]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Queries Introduction
  id: totrans-268
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询介绍
- en: Each application has its own query language. This language often has special
    structure specific to the context of Training Data. It also may have support for
    abstract integrations with other query constructs.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 每个应用都有自己的查询语言。这种语言通常具有特定于训练数据上下文的特殊结构。它还可能支持与其他查询构造的抽象集成。
- en: To help frame this, let’s start with this easy example to get all files with
    more than 3 cars and at least 1 pedestrian.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助框架，让我们从这个简单的例子开始，获取所有有超过3辆车且至少1名行人的文件。
- en: '[PRE1]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Integrations with Ecosystem
  id: totrans-272
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与生态系统集成
- en: To do model training and operations there are many applications. At the time
    of writing there are many hundreds of tools that fall in this category. As mentioned
    earlier you can set up a mapping of definitions for formats, triggers, dataset
    names and more in your Training Data tooling. We will cover these concepts in
    more depth in later chapters.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行模型训练和操作时有许多应用程序。在撰写本文时，这个类别中有数百种工具。正如前面提到的，您可以在训练数据工具中设置定义格式、触发器、数据集名称等映射。我们将在后面的章节中更深入地讨论这些概念。
- en: '**Model Run** Also known as: Predictions'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '**模型运行** 也称为：预测'
- en: Running a machine learning model on a sample or dataset. For example, given
    a model X, inputting an image Y, and returning a prediction set Z. In a visual
    case this could be an object detector, an image of a roadway, and a set of bounding
    box type instances.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在样本或数据集上运行机器学习模型。例如，给定模型X，输入图像Y，并返回预测集合Z。在视觉案例中，这可能是对象检测器、道路图像和一组边界框类型实例。
- en: Security
  id: totrans-276
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全性
- en: Security of Training Data is of critical importance. Often Raw data is treated
    with greater scrutiny from a security view. For example, raw data of critical
    infrastructure, drivers license, military targets, etc.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 训练数据的安全性非常重要。通常，原始数据在安全视角下受到更严格的审查。例如，关键基础设施的原始数据、驾驶执照、军事目标等。
- en: Security is a broad topic that must be researched thoroughly and separate from
    this book. I specifically am calling attention to the most common security items
    in the context of Data Engineering. Please note that in other sections we have
    discussed more broad Security topics, such as security of the overall Training
    Data system
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 安全是一个广泛的主题，必须进行彻底研究，与本书分开。我特别关注数据工程背景下最常见的安全事项。请注意，在其他章节中，我们已经讨论了更广泛的安全主题，如整体训练数据系统的安全性。
- en: Access Control
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问控制
- en: Signed URLs
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 签名URL
- en: Personally Identifiable Information
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 个人可识别信息
- en: Access Control
  id: totrans-282
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问控制
- en: 'One of the big questions that can help us differentiate this here is:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 一个能帮助我们区分这一点的重要问题是：
- en: What system is processing the data? What are the Identify Access Management
    (IAM) permission concerns around system level processing and storage?
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪个系统在处理数据？在系统级处理和存储时，身份访问管理（IAM）权限方面有哪些问题？
- en: What user access concerns are there?
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有哪些用户访问方面的问题？
- en: Identity and Authorization
  id: totrans-286
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 身份验证和授权
- en: Production level systems will often use Open ID Connect (ODIC). This can be
    coupled with Role Based Access Control (RBAC) and Attribute Based Access Control
    (ABAC).
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 生产级系统通常会使用Open ID Connect (ODIC)。这可以与基于角色的访问控制（RBAC）和基于属性的访问控制（ABAC）结合使用。
- en: Those are all complex topics and general treatment of them is beyond the scope
    of this book. Specific to Training Data, often the Raw Data is where there is
    the most tension around access. In that context usually it can be addressed on
    either the per file or per set level. At the per file level, access must be controlled
    by a policy engine that is aware of the triplicate of the {user, file, policy}.
    This can be complex to administer at the per file level. Usually it is easier
    to achieve this at the per set level. At the set (dataset) level, it is achieved
    with {user, set, policy}.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 这些都是复杂的主题，一般性的处理超出了本书的范围。特别是对于训练数据，通常原始数据的访问是最具有紧张感的地方。在这种情况下，通常可以在每个文件或每个集合级别进行处理。在每个文件级别，访问必须由一个能够识别
    {用户、文件、策略} 三元组的策略引擎控制。这在每个文件级别进行管理可能会比较复杂。通常在集合（数据集）级别上更容易实现。在集合级别，这是通过 {用户、集合、策略}
    实现的。
- en: One example
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子
- en: In this code sample we will create a new dataset, a new security advisor role,
    and allow the {view, dataset} permission abstract object pair on that role.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个代码示例中，我们将创建一个新数据集，一个新的安全顾问角色，并允许在该角色上抽象对象对 {view, dataset} 权限进行操作。
- en: '[PRE2]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We then assign the user (member) to the restricted dataset.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将用户（成员）分配给受限数据集。
- en: '[PRE3]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Alternatively, this can be done with an external policy engine.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，这可以通过外部策略引擎完成。
- en: Signed URLs
  id: totrans-295
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 签名URL
- en: Signed URLs are a technical mechanism to provide secure access to resources,
    most often raw media BLOBs. A signed URL is the Output of a security process that
    involves Identity and Authorization steps. A signed URL is most concretely thought
    of as a one time password to a resource, with the most common added caveat that
    it expires after a preset amount of time. This expiry is sometimes as short as
    a few seconds, routinely under one week, and rarely “virtually indefinite” such
    as multiple years. Signed URLs are not unique to Training Data and you must research
    them well as they appear simple but contain many pitfalls. We touch on signed
    URLs here only in the context of Training Data.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 签名URL是提供安全访问资源的技术机制，最常见的是原始媒体BLOBs。签名URL是涉及身份验证和授权步骤的安全流程的输出。签名URL最具体地被认为是对资源的一次性密码，常见的附加条件是在预设的时间后过期。此过期时间有时短至几秒，通常不超过一周，并且很少“几乎无限期”，如多年。签名URL并非训练数据的特有内容，因此在研究它们时必须仔细检查，因为它们看似简单但包含许多陷阱。在这里，我们仅在训练数据的上下文中提到签名URL。
- en: One of the most critical things to be aware of is that because signed URLs are
    ephemeral it is not a good idea to transmit signed URLs as a one time thing. Doing
    so would effectively cripple the Training Data system when the URL expires. It
    is also less secure, since either the time will be too short to be useful, or
    too long to be secure. Instead, it is better to integrate with your Identity and
    Auth system. This way signed URLs can be generated on demand by specific {User,
    Object/Resource} pairs. That specific user can get a short expiring URL.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的最关键的一点是，由于签名URL是临时的，将签名URL作为一次性事务传输并不是一个好主意。这样做会在URL过期时有效地瘫痪训练数据系统。这也不够安全，因为要么时间太短而无法使用，要么时间太长而不够安全。相反，最好是与您的身份验证和授权系统集成。这样一来，特定的
    {用户，对象/资源} 对可以按需生成已签名的URL。特定用户可以获取一个短暂的即将过期的URL。
- en: In other words, you can use a service outside the Training Data system to generate
    the signed URLs so long as the service is integrated directly with the Training
    Data system. Again it’s important to move as much of the actual organizational
    logic and Definitions inside the Training Data system. Single-Sign-On (SSO) and
    Identity Access Management (IAM) integration commonly cross cut Databases and
    Applications, so that’s a separate consideration.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，只要服务直接集成到训练数据系统中，您可以使用训练数据系统外的服务生成已签名的URL。再次强调，将实际组织逻辑和定义移至训练数据系统内部非常重要。单点登录（SSO）和身份访问管理（IAM）集成通常跨越数据库和应用程序，因此这是一个单独的考虑因素。
- en: Training Data systems offer new ways to Secure the data. This includes transmitting
    Training Data directly to ML programs, bypassing a single person having unnecessary
    access. I encourage you to read the latest documentation from your Training Data
    system provider to stay up to date on the latest security best practices.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 训练数据系统提供了新的安全数据保护方式。这包括直接将训练数据传输给ML程序，绕过单个人员不必要的访问权限。我鼓励您阅读您的训练数据系统提供商的最新文档，以了解最新的安全最佳实践。
- en: Cloud connections & Signed URLs
  id: totrans-300
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 云连接和签名URL
- en: Whomever is going to supervise the data needs to view it. This is the minimum
    level of access and essentially unavoidable. Prep systems, such as the system
    that removes Personally Identifiable Information (PII), generates thumbnails,
    pre-labels, etc. also needs to see it. Also - for practical system to system communication
    it’s often easier to transmit only a URL / file path and then have the system
    directly download the data. This is especially true because many end user systems
    have much slower upload rates then download rates. For example imagine saying
    “use the 48 GB video at this path” (KBs of data) vs trying to transmit 48 GB from
    your home machine.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 任何需要监督数据的人都需要查看它。这是最低限度的访问级别，基本上是不可避免的。准备系统，如删除个人可识别信息（PII）的系统、生成缩略图、预标记等，也需要查看数据。此外，为了系统之间的实际通信，通常更容易传输仅
    URL / 文件路径，然后让系统直接下载数据。这特别适用于许多终端用户系统的上传速率远远低于下载速率的情况。例如，想象一下说：“使用此路径上的 48 GB
    视频”（KB 的数据量），而不是试图从您的家用机器传输 48 GB 的数据。
- en: There are many ways to achieve this but signed URLS - a per resource password
    system - are currently the commonly accepted method. They can be “behind the scenes”
    - but generally always end up being used in some form.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多方法可以实现这一点，但签名 URL - 每资源密码系统 - 是当前普遍接受的方法。它们可以“在幕后”使用，但通常总会以某种形式使用。
- en: For both good and bad reasons this can sometimes be an area of controversy.
    I’ll highlight some trade-offs here to help you decide what’s relevant for your
    system.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 有时因为好坏各种原因，这可能成为一个有争议的领域。我将在这里突出一些权衡来帮助您决定对您的系统而言什么是相关的。
- en: SignedURLs
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: SignedURLs
- en: 'A URL that contains both the location of a resource (like an image) and an
    integrated password. Similar to a “share this link” in Google Docs. Signed URLs
    may also contain other information and commonly time decay, meaning the password
    expires. For example a signed URLhave the general form of: sample.com/123/?password=secure_password
    (Actual signed URLs are usually quite long, about the length of this paragraph
    or more.)'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含资源位置（比如图片）和集成密码的 URL。类似于 Google Docs 中的“分享此链接”。签名 URL 也可能包含其他信息，并且通常会有时间限制，即密码会过期。例如，签名
    URL 的一般形式为：sample.com/123/?password=secure_password（实际的签名 URL 通常非常长，大约与这段文字的长度或更长）。
- en: 'The reason that we make a bit of a distinction here and get so specific about
    IAM is because training data presents some unusual data processing concerns:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里做出一些区分并且如此具体地讨论 IAM 的原因是因为训练数据存在一些不寻常的数据处理问题：
- en: Humans see the “raw” data in ways that are uncommon in other systems
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人们以不同于其他系统的“原始”数据方式查看数据。
- en: Admins usually need fairly sweeping permissions to work with data - again in
    ways uncommon in classic systems
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理员通常需要相当广泛的权限来处理数据 - 这在传统系统中是不常见的方式。
- en: There are data size and processing concerns that while perhaps not really different
    from classically, are new and there are less established norms for what’s reasonable.
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虽然在某种程度上可能与传统上并无多大差异，但数据大小和处理上存在一些关注点，而且对于什么是合理的规范也没有很明确的建立。
- en: Personally Identifiable Information (PII)
  id: totrans-310
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 个人可识别信息（PII）
- en: Two of the most common ways to address PII is to remove it, or to create a PII
    compliant handling chain.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 处理 PII 的两种最常见方法是删除它，或创建一个符合 PII 的处理链。
- en: PII Removal
  id: totrans-312
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: PII 删除
- en: The PII may be contained in metadata (such as DICOM). You may wish to either
    completely wipe this information, or retain only a single ID linking back to a
    separate database containing the required metadata.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: PII 可能包含在元数据中（例如 DICOM）。您可能希望完全清除这些信息，或者仅保留一个单一的 ID，将其链接回包含所需元数据的单独数据库。
- en: The PII may be contained in the data itself. For images, for example, this may
    involve blurring faces and identifying marks such as house numbers. This will
    vary dramatically based on your local laws and use case.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: PII 可能包含在数据本身中。例如，对于图像，这可能涉及模糊化面部和识别房屋编号等标识。这将根据您所在地的法律和用例而显著变化。
- en: PII Identification and Training
  id: totrans-315
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: PII 识别与培训
- en: The dataset contains PII and cannot or will not be changed. Perhaps the PII
    is desired or useful for training. This requires having PII complaint data chain,
    PII training for staff, and generally appropriate tagging identifying the elements
    as containing PII.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集包含 PII，且不能或不会更改。也许 PII 对于训练是必要或有用的。这需要有 PII 合规的数据链，员工的 PII 培训，并通常适当的标记以识别包含
    PII 元素。
- en: Pre-Label
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预标签
- en: Supervising model predictions is common. It is used to measure system quality,
    improve the training data (annotation), and alert on errors. We will discuss the
    pros and cons of pre-labeling in later chapters. Here is a brief introduction
    to the technical specifics. The big idea with pre-label is that we take the output
    from an already run model and surface it to other processes, such as human review.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 监督模型预测是常见的。它用于衡量系统质量，改进训练数据（注释）并警示错误。我们将在后续章节中讨论预标注的利弊。这里是对技术细节的简要介绍。预标注的主要思想是，我们从已运行的模型输出中获取结果，并将其提供给其他流程，例如人工审核。
- en: Updating Data
  id: totrans-319
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新数据
- en: It may seem strange to start with the update case, but since records will often
    be updated by ML programs, it’s good to know update plans prior to running models
    and ML programs.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 开始更新案例可能看起来有点奇怪，但由于记录通常会被机器学习程序更新，因此在运行模型和机器学习程序之前了解更新计划是很有必要的。
- en: If the data is already in the system, then you will need to refer to the file
    ID, or some other form identification such as the filename to match with the existing
    file. For large volumes of images, frequent updates, video etc, it’s much faster
    to update an existing known record than to re-import and re-process the raw data.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据已经存在于系统中，则需要引用文件ID或其他形式的标识符，如文件名，以与现有文件匹配。对于大量图像、频繁更新的视频等，更新已知记录比重新导入和重新处理原始数据要快得多。
- en: It’s best to have the Definitions between ML programs and Training Data defined
    in the Training Data program.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 最好将定义放在机器学习程序和训练数据之间，在训练数据程序中定义。
- en: If that is not possible, then at least include the Training Data File ID along
    with the data the model trains on. Doing this will allow you to more easily update
    the File later with the new results. This ID is more reliable than a filename
    because filenames are often only unique within a directory.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不可能，那么至少要将训练数据文件ID与模型训练的数据一起包含。这样做将使您能够更轻松地使用新结果更新文件。这个ID比文件名更可靠，因为文件名通常只在目录内唯一。
- en: Pre-Label Gotchas
  id: totrans-324
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预标注的注意事项
- en: Formats, for example video sequences, can be a little difficult to wrap the
    head around. This is especially true if you have a complex Schema. For these,
    I suggest making sure the process works with an image, and/or the process works
    with a single default sequence before trying true multiple sequences. SDK functions
    can help with pre-label efforts.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，视频序列等格式可能有点难以理解。如果您有复杂的模式，这一点尤为真实。为此，我建议确保该过程适用于图像，并/或者在尝试真正的多序列之前，该过程适用于单个默认序列。SDK函数可帮助进行预标注工作。
- en: Some systems use relative coordinates and some use absolute. It is easy to transform
    between these as long as the height and width of the image is known. An example
    transformation to relative coordinates is defined as
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 一些系统使用相对坐标，而另一些则使用绝对坐标。只要知道图像的高度和宽度，就很容易在它们之间进行转换。一个转换为相对坐标的示例定义如下
- en: '`x / width` and `y / height`. For example: A point x,y (120, 90) with a width/height
    (1280, 720) would have a relative value of 120/1280 and 90/720 or (0.09375, 0.125).'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '`x / width` 和 `y / height`。例如：一个点 x,y (120, 90) 与宽度/高度 (1280, 720) 将具有相对值 120/1280
    和 90/720 或 (0.09375, 0.125)。'
- en: If this is the first time you are importing the raw data, then it’s possible
    to attach the existing instances (annotations) at the same time as the raw data.
    If it’s not possible to attach the instances, then treat it as Updating.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是您首次导入原始数据，则可以在导入原始数据时同时附加现有实例（注释）。如果无法附加这些实例，则将其视为更新。
- en: 'A most common question is: “Should all machine predictions be sent to the Training
    Data Database?” The answer is Yes, as long as it is feasible. Noise is noise.
    There’s no point sending known noisy predictions. Many prediction methods generate
    multiple predictions with some threshold for inclusion. Generally, whatever mechanism
    you have for filtering this data needs to be applied here too. For example, only
    taking the highest “confidence” prediction. To this same end, in some cases it
    can be very beneficial to include this “confidence” value or other “entropy” values
    to help better filter training data.'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的问题是：“是否应将所有机器预测发送到训练数据数据库？”答案是是，只要可行。噪声就是噪声。发送已知的噪声预测毫无意义。许多预测方法生成多个预测，并设有某种包含阈值。通常，对这些数据进行过滤的任何机制也需要在此应用。例如，仅采用最高“置信度”预测。同样，在某些情况下，包括这种“置信度”值或其他“熵”值可以帮助更好地过滤训练数据。
- en: Pre-Label data prep process
  id: totrans-330
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预标注数据准备过程
- en: Now that we have covered some of the abstract concepts, let’s dive into some
    specific examples for selected media formats. We cannot cover all possible formats
    and types in this book, so you must [research the docs](https://diffgram.readme.io/docs)
    for your specific Training Data system, media types, and needs.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经涵盖了一些抽象概念，让我们深入探讨一些选择的媒体格式的具体示例。我们无法在本书中涵盖所有可能的格式和类型，因此您必须[查阅文档](https://diffgram.readme.io/docs)，了解您特定的训练数据系统、媒体类型和需求。
- en: 'As shown in Fig 4-8 a pre-label process involves the following steps:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 如图 4-8 所示，预标注过程涉及以下步骤：
- en: Map your Data to your Annotation Tool’s format.
  id: totrans-333
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的数据映射到您的注释工具的格式。
- en: Attach Data to Annotation Tools’s Files at Import
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在导入时将数据附加到注释工具的文件中
- en: Verify Data
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证数据
- en: '![Block diagram example](Images/data_engineering_125013_08.png)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![块图示例](Images/data_engineering_125013_08.png)'
- en: Figure 4-8\. Block diagram example
  id: totrans-337
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-8\. 块图示例
- en: Usually there will be some high level format, such as saying that an image may
    have many instances associated with it. Or that a video may have many frames,
    and each frame may have many instances, as shown in Fig 4-9.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 通常会有一些高级格式，比如说一个图像可能与许多实例相关联，或者一个视频可能有许多帧，每个帧可能有许多实例，如图 4-9 所示。
- en: '![Visual overview of relation between raw media and instances](Images/data_engineering_125013_09.png)'
  id: totrans-339
  prefs: []
  type: TYPE_IMG
  zh: '![原始媒体和实例之间关系的视觉概述](Images/data_engineering_125013_09.png)'
- en: Figure 4-9\. Visual overview of relation between raw media and instances
  id: totrans-340
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 4-9\. 原始媒体和实例之间关系的视觉概述
- en: 'Example python code:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 python 代码：
- en: '[PRE4]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: ^([1](ch04.xhtml#idm45486431218624-marker)) From Google Answers
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch04.xhtml#idm45486431218624-marker)) 来自 Google Answers

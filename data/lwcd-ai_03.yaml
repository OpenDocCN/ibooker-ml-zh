- en: Chapter 3\. Machine Learning Libraries and Frameworks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章 机器学习库和框架
- en: This chapter introduces [machine learning (ML) frameworks](https://oreil.ly/IJbCu)
    that simplify the development of ML models. Typically, you need to understand
    the underlying working principles of mathematics, statistics, and ML to build
    and train ML pipelines. These frameworks help you by automating many of the time-consuming
    ML workflow tasks such as feature selection, algorithm selection, code writing,
    pipeline development, performance tuning, and model deployment.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了[机器学习（ML）框架](https://oreil.ly/IJbCu)，简化了ML模型的开发。通常情况下，您需要理解数学、统计学和ML的基本工作原理，才能构建和训练ML管道。这些框架通过自动化许多耗时的ML工作流任务（如特征选择、算法选择、代码编写、管道开发、性能调整和模型部署），帮助您。
- en: No-Code AutoML
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无代码AutoML
- en: Imagine you are a business analyst working for a utility company. You have a
    project that requires you to help the company develop marketing and outreach programs
    that target communities with high electrical energy consumption. The data is in
    a comma separated value (*CSV*) file format.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您是一家公用事业公司的业务分析师。您有一个项目，需要帮助公司开发针对高电能消耗社区的市场营销和推广计划。数据以逗号分隔值（*CSV*）文件格式提供。
- en: 'You do not have an ML background or any programming knowledge—but the team
    lead has asked you to take on this project because you have expressed an interest
    in ML and how it can be applied in the organization. Although you have no coding
    experience, the little research you have done has yielded a few observations:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管您没有编程背景或任何编程知识，但团队负责人要求您承担此项目，因为您对ML及其在组织中应用表现出兴趣。虽然您没有编程经验，但您做了一些研究，并得出了一些观察结果：
- en: For noncoders like yourself, there are automated *no-code* ML frameworks with
    a graphical user interface (GUI) that you can use to build and train an ML model
    without writing a single line of code.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于像您这样的非编程人员，有自动化的*无代码*ML框架，具有图形用户界面（GUI），您可以使用它们来构建和训练ML模型，而无需编写一行代码。
- en: For light coders, there are *low-code* ML frameworks that provide the ability
    to build and train an ML model by writing just a little bit of code.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于轻度编程者来说，有*低代码*的ML框架，可以通过编写少量代码来构建和训练ML模型。
- en: For seasoned coders, there are ML libraries that allow the flexibility and control
    to code every phase of the ML workflow.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于经验丰富的编程人员，有ML库，允许灵活控制编写ML工作流的每个阶段。
- en: 'Based on the data from your utility marketing outreach project and use case,
    you determine that your target is to predict total kilowatt-hours (kWh) based
    on multiple variables: zip code, month, year, and customer class (Residential,
    Commercial, Industrial, and Agricultural).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 基于您的公用事业市场推广项目和用例的数据，您确定您的目标是基于多个变量预测总千瓦时（kWh）：邮政编码、月份、年份和客户类别（住宅、商业、工业和农业）。
- en: Let’s assume you need to quickly get a baseline prediction. This is an excellent
    use case for AutoML. A GUI-based AutoML framework is the easiest to use. [Figure 3-1](#typical_vertex_ai_automl_no_code_workfl)
    shows a high-level overview of the typical AutoML no-code workflow you can use
    for your business use case. This example uses Google’s Vertex AI, which is an
    ML platform that helps you build, deploy, and scale ML models. Overall, Google
    AutoML, Microsoft Azure AutoML, and AWS SageMaker AutoML are all powerful AutoML
    solutions that can help you build and deploy ML models without writing any code.
    The best solution for you will depend on your specific needs and requirements.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您需要快速获得基准预测。这是AutoML的一个很好的用例。基于GUI的AutoML框架是最易于使用的。[图 3-1](#typical_vertex_ai_automl_no_code_workfl)显示了您可以用于业务用例的典型AutoML无代码工作流的高级概述。此示例使用的是Google的Vertex
    AI，这是一个帮助您构建、部署和扩展ML模型的ML平台。总体而言，Google AutoML、Microsoft Azure AutoML和AWS SageMaker
    AutoML都是强大的AutoML解决方案，可以帮助您在不编写任何代码的情况下构建和部署ML模型。对于您来说，最佳解决方案将取决于您的具体需求和要求。
- en: '![Typical Vertex AI AutoML no-code workflow](assets/lcai_0301.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![典型的Vertex AI AutoML无代码工作流](assets/lcai_0301.png)'
- en: Figure 3-1\. Typical Vertex AI AutoML no-code workflow.
  id: totrans-11
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-1\. 典型的Vertex AI AutoML无代码工作流。
- en: Since the file format is CSV, you select the Tabular tab. Given that total kWh
    is the output and is the numeric value you want to predict, you note that this
    is a regression task—and since you have column names (or *labels*) for the multiple
    variables, it is a *supervised* ML problem. Data without labels require an unsupervised
    ML task, such as clustering. [Figure 3-2](#regressionsolidusclassification_select)
    shows Regression/classification selected as the objective.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 由于文件格式是 CSV，您选择 Tabular 选项卡。考虑到总千瓦时是输出并且是您想要预测的数值，您注意到这是一个回归任务，并且由于具有多个变量的列名（或*标签*），这是一个*监督*
    ML 问题。没有标签的数据需要无监督 ML 任务，例如聚类。[图 3-2](#regressionsolidusclassification_select)
    显示选择了回归/分类作为目标。
- en: Note
  id: totrans-13
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: 'Vertex AI lets you create the following model types for tabular data:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Vertex AI 允许您为表格数据创建以下模型类型：
- en: Binary classification models
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 二元分类模型
- en: These models predict a binary outcome (one of two classes). Use this type for
    yes or no questions.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模型预测二元结果（两个类别中的一个）。用于是或否问题。
- en: Multi-class classification models
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 多类别分类模型
- en: These models predict one class from three or more discrete classes. Use this
    type for categorization.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模型预测来自三个或更多离散类的一个类。用于分类。
- en: Regression models
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 回归模型
- en: These models predict a continuous value. Use this type to predict sales.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模型预测连续值。用于预测销售额。
- en: Forecasting models
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 预测模型
- en: These models predict a sequence of values. Use this type to forecast daily demand.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模型预测一系列值。用于预测每日需求。
- en: '![Regression/classification selection](assets/lcai_0302.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![回归/分类选择](assets/lcai_0302.png)'
- en: Figure 3-2\. Regression/classification selection.
  id: totrans-24
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-2\. 回归/分类选择。
- en: Some frameworks will generate statistics after the data loads. Other frameworks
    help minimize the need to manually clean data by automatically detecting and cleaning
    missing values, anomalous values, and duplicate rows and columns. Note that there
    are a few additional steps that you can employ, such as to review the data after
    it has loaded to check for missing values and view data statistics. [Figure 3-3](#data_source_options)
    shows the dataset upload options.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一些框架在数据加载后会生成统计信息。其他框架通过自动检测和清理缺失值、异常值和重复行列来帮助减少手动清理数据的需求。请注意，您可以采取一些额外步骤，例如在加载后检查缺失值并查看数据统计。[图
    3-3](#data_source_options) 显示数据集上传选项。
- en: '![Data source options](assets/lcai_0303.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![数据源选项](assets/lcai_0303.png)'
- en: Figure 3-3\. Data source options.
  id: totrans-27
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-3\. 数据源选项。
- en: '[Figure 3-4](#generated_statistics_from_googleapostro) shows statistics of
    your energy utility dataset generated using Google’s Vertex AI framework. There
    are no missing values, and the number of distinct values for each column is shown.
    For example, there are 145 zip codes. Because zip code is a number, the Transformation
    column shows it as “Numeric.” However, zip code is a categorical feature, as each
    zip code is different from one another and can thus be put into its own “category.”
    Changing `ZipCode` from numeric to categorical is as easy as selecting the drop-down
    to customize the transformation.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-4](#generated_statistics_from_googleapostro) 显示使用谷歌 Vertex AI 框架生成的能源公用数据集的统计信息。没有缺失值，并显示每列的不同值数量。例如，有
    145 个邮政编码。由于邮政编码是一个数字，转换列显示为“数字”。然而，邮政编码是一个分类特征，因为每个邮政编码都不同，可以被归为自己的“类别”。将 `ZipCode`
    从数字转换为分类很容易，只需选择下拉菜单自定义转换。'
- en: '![Generated statistics from Google’s Vertex AI](assets/lcai_0304.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![谷歌 Vertex AI 生成的统计数据](assets/lcai_0304.png)'
- en: Figure 3-4\. Generated statistics from Google’s Vertex AI.
  id: totrans-30
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-4\. 谷歌 Vertex AI 生成的统计数据。
- en: '[Figure 3-5](#zipcode_shown_as_categorical_feature) shows `ZipCode` now as
    a categorical feature. Also note the far right column, where you can select or
    deselect a feature to be included for training.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-5](#zipcode_shown_as_categorical_feature) 显示 `ZipCode` 现在作为分类特征。还请注意最右侧列，您可以选择或取消选择要包含在训练中的特征。'
- en: '![ZipCode shown as categorical feature](assets/lcai_0305.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![邮政编码显示为分类特征](assets/lcai_0305.png)'
- en: Figure 3-5\. `ZipCode` shown as categorical feature.
  id: totrans-33
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-5\. `ZipCode` 显示为分类特征。
- en: AutoML presents a data profile of each feature. [Figure 3-6](#zip_code_shown_as_the_most_common_featu)
    shows zip code 92694 as the most common feature, which indicates more customers
    live in that zip code area. You can leverage this information for your marketing
    campaigns.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: AutoML 显示每个特征的数据概况。[图 3-6](#zip_code_shown_as_the_most_common_featu) 显示邮政编码
    92694 作为最常见的特征，表明更多客户居住在该邮政编码区域。您可以利用这些信息进行营销活动。
- en: '![Zip code shown as the most common feature](assets/lcai_0306.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![显示邮政编码作为最常见特征](assets/lcai_0306.png)'
- en: Figure 3-6\. Zip code shown as the most common feature.
  id: totrans-36
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-6\. 显示邮政编码作为最常见特征。
- en: In Step 3, you train a new model by selecting a few training parameters. Vertex
    AI’s “Train new model” window lets you select the training method, model details,
    training options, and compute and pricing. Note the dataset and the objective
    (Regression) are shown as inputs in the “Training method” parameter. AutoML is
    selected by default. [Figure 3-7](#the_quotation_marktrain_new_modelquotat) shows
    the “Train new model” window.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在第 3 步中，您通过选择几个训练参数来训练新模型。Vertex AI 的“训练新模型”窗口允许您选择训练方法、模型详细信息、训练选项以及计算和定价。请注意，“训练方法”参数中显示了数据集和目标（回归）作为输入。AutoML
    默认选中。[图 3-7](#the_quotation_marktrain_new_modelquotat) 显示了“训练新模型”窗口。
- en: '![The “Train new model” window with compute and pricing selected](assets/lcai_0307.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![选择了计算和定价的“训练新模型”窗口](assets/lcai_0307.png)'
- en: Figure 3-7\. The “Train new model” window with compute and pricing selected.
  id: totrans-39
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-7\. “训练新模型”窗口，选择了计算和定价。
- en: Once all the parameters are entered, you start the training job. [Figure 3-8](#submit_the_training_job_for_training)
    shows that it’s ready to submit the training job for training.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 输入完所有参数后，您可以开始训练作业。[图 3-8](#submit_the_training_job_for_training) 显示准备提交训练作业。
- en: '![Submit the training job for training](assets/lcai_0308.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![提交训练作业进行训练](assets/lcai_0308.png)'
- en: Figure 3-8\. Submit the training job for training.
  id: totrans-42
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-8\. 提交训练作业进行训练。
- en: Note
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Training can take up to several hours, depending on the size of your data and
    type of model objective you choose. Image and video data types may take much longer
    to process than a structured data type such as a CSV file. The number of training
    samples also impacts training time. AutoML training is also time intensive because
    of the nature of AutoML and how it works.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 训练时间可能长达数小时，具体取决于数据大小和所选择的模型目标类型。图像和视频数据类型的处理时间可能比 CSV 文件等结构化数据类型长得多。训练样本数量也会影响训练时间。由于
    AutoML 的性质及其工作方式，AutoML 训练也非常耗时。
- en: Model training results are presented after training. You can now present your
    preliminary findings to the team before next steps—which could include more experimentation
    or deploying your model as a web page, where a user selects the customer class
    and zip code and the predicted total kWh is shown.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 训练模型后呈现模型训练结果。现在，您可以在进行下一步（可能包括更多实验或将模型部署为网页）之前向团队展示您的初步发现，用户可以选择客户类别和邮政编码，然后显示预测的总
    kWh。
- en: '[Figure 3-9](#model_training_results) shows training results. You will see
    examples of a complete AutoML project in an upcoming chapter, where the metrics
    presented in [Figure 3-9](#model_training_results) are discussed in more detail.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-9](#model_training_results) 显示训练结果。在接下来的章节中，将详细讨论图 3-9 中呈现的指标的完整 AutoML
    项目示例。'
- en: '![Model training results](assets/lcai_0309.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![模型训练结果](assets/lcai_0309.png)'
- en: Figure 3-9\. Model training results.
  id: totrans-48
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-9\. 模型训练结果。
- en: Model feature attribution tells you how much each feature impacted model training.
    [Figure 3-10](#attribution_values_are_expressed_as_a_p) shows attribution values
    expressed as a percentage; the higher the percentage, the stronger the correlation—that
    is, the more strongly that feature impacted model training. Model feature attribution
    is expressed using the sampled Shapley method (see the [glossary on GitHub](https://oreil.ly/tVCwP)).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 模型特征归因告诉您每个特征对模型训练的影响程度。[图 3-10](#attribution_values_are_expressed_as_a_p) 显示归因值以百分比表示；百分比越高，相关性越强，即该特征对模型训练的影响越大。模型特征归因使用采样的
    Shapley 方法（请参阅[GitHub 上的术语表](https://oreil.ly/tVCwP)）。
- en: '![Attribution values are expressed as a percentage](assets/lcai_0310.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![归因值以百分比表示](assets/lcai_0310.png)'
- en: Figure 3-10\. Attribution values are expressed as a percentage.
  id: totrans-51
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-10\. 归因值以百分比表示。
- en: '[Figure 3-11](#model_metadata) shows model metadata. You see various information
    about the model, from its ID, date created, and training time, to the dataset
    used, target column, data splitting percentage allocation, and the model evaluation
    metric used—in this case, root mean squared error (RMSE). Clicking on “Model”
    or “Trials” lets you retrieve info on which model has been used by AutoML.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-11](#model_metadata) 显示模型元数据。您可以查看有关模型的各种信息，包括其 ID、创建日期、训练时间、使用的数据集、目标列、数据拆分百分比分配以及在此案例中使用的模型评估指标——均方根误差（RMSE）。单击“模型”或“试验”可获取有关
    AutoML 使用的模型信息。'
- en: '![Model metadata](assets/lcai_0311.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![模型元数据](assets/lcai_0311.png)'
- en: Figure 3-11\. Model metadata.
  id: totrans-54
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-11\. 模型元数据。
- en: How AutoML Works
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AutoML 的工作原理
- en: Implementing an ML workflow is time-consuming. As you saw from the preceding
    marketing outreach use case, AutoML simplified the process of building an ML model
    for you—you did not have to write a single line of code—for any tasks. [Figure 3-12](#workflow_for_the_utility_marketing_outr)
    shows the workflow for the utility marketing outreach project. Phases 2, 3, and
    4 required no coding.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 实施ML工作流程是耗时的。正如您从前面的市场营销案例中看到的那样，AutoML简化了为您构建ML模型的过程——您不需要为任何任务编写一行代码。[图 3-12](#workflow_for_the_utility_marketing_outr)显示了公用事业营销推广项目的工作流程。阶段2、3和4无需编码。
- en: '![Workflow for the utility marketing outreach project](assets/lcai_0312.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![公用事业营销推广项目的工作流程](assets/lcai_0312.png)'
- en: Figure 3-12\. Workflow for the utility marketing outreach project.
  id: totrans-58
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-12\. 公用事业营销推广项目的工作流程。
- en: To better understand how AutoML works, note what you did *not* have to do!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要更好地理解AutoML的工作原理，请注意您无需做的事情！
- en: First, you did not have to set up an environment to run a Python Jupyter Notebook.
    There was no need to install any software libraries. In fact, there was nothing
    to install.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您无需设置环境来运行Python Jupyter Notebook。无需安装任何软件库。事实上，无需安装任何东西。
- en: Once you uploaded the CSV data file into Vertex AI, the file was stored in the
    cloud. If you were using Python and Pandas, there was no need to write any code
    to load a dataset or even to split the dataset into training, validation, and
    testing files.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您将CSV数据文件上传到Vertex AI，该文件将存储在云中。如果您正在使用Python和Pandas，则无需编写任何代码来加载数据集，甚至不需要将数据集拆分为训练、验证和测试文件。
- en: 'While the data was clean, there were two categorical features: zip code and
    customer class. If you had coded for those two features, you would have had to
    “one-hot encode” each one. *One-hot encoding* is the process of converting categorical
    data variables into numerical values. The following shows sample code for one-hot
    encoding for the feature zip code:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管数据干净，但有两个分类特征：邮政编码和客户类别。如果您对这两个特征进行了编码，您将需要对每个特征进行“独热编码”。*独热编码*是将分类数据变量转换为数值的过程。以下是用于邮政编码特征的独热编码示例代码：
- en: '[PRE0]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'One-hot encoding is an example of feature *transformation* or engineering.
    You also had the ability to easily select the target (output) and/or deselect
    features—or *drop* them. You did not have to write code that resembled what is
    shown in the following, where the column “id” is being dropped from a Pandas DataFrame:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 独热编码是特征*转换*或工程化的一个示例。您还可以轻松选择目标（输出）并/或取消选择特征，或*删除*它们。您无需编写类似以下显示的代码，其中列“id”正在从Pandas
    DataFrame中删除：
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: More features in your dataset lead to more complex relationships that may be
    nonlinear. Neural networks are perfect for working with nonlinear relationships.
    You may not have had any idea about any of this, so let’s break it down a bit
    further.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集中的更多特征会导致更复杂的非线性关系。神经网络非常适合处理非线性关系。您可能对这些都一无所知，因此让我们进一步分解一下。
- en: As stated earlier, this is a prediction problem because you wanted to know whether
    future total kWh can be predicted based upon average KWh, customer class, month,
    year, and zip code. Going a little deeper into the theory, this type of use case
    can be considered complex due to the number of input features—it has multiple
    variables and is *multivariate*. These types of complex relationships are considered
    *nonlinear* because you cannot simply draw a “straight” line that will be the
    “best fit” between what the known total kWh are and the other multiple variables.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面所述，这是一个预测问题，因为您希望根据平均千瓦时数、客户类别、月份、年份和邮政编码预测未来总千瓦时数。再深入理论，这种类型的用例因其多个输入特征而被认为是复杂的——它具有多个变量且为*多变量*。这些复杂关系被认为是*非线性*的，因为您不能简单地画一条“直线”，使其成为已知的总千瓦时数与其他多个变量之间的“最佳拟合”。
- en: This dataset is an excellent candidate for a neural network. *Neural networks*
    are difficult to construct without prior ML knowledge. Although neural networks
    are a topic for a later chapter, let’s look quickly at an image to determine what
    you did *not* have to think about. [Figure 3-13](#four_layer_neural_network) shows
    a typical neural network with an input layer, hidden layers, and an output layer.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据集非常适合神经网络。*神经网络*在没有先前的机器学习知识的情况下难以构建。尽管神经网络是下一章的话题，让我们快速看一下一幅图像，以确定您不需要考虑的内容。[图3-13](#four_layer_neural_network)展示了具有输入层、隐藏层和输出层的典型神经网络。
- en: '![Four-layer neural network](assets/lcai_0313.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![四层神经网络](assets/lcai_0313.png)'
- en: Figure 3-13\. Four-layer neural network.
  id: totrans-70
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图3-13。四层神经网络。
- en: 'Coding a neural network in Python would look something like this:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中编写神经网络的代码看起来像这样：
- en: '[PRE2]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Using Keras, the coding becomes somewhat easier. Coding a neural network would
    look something like this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Keras，编码变得更加简单。编写神经网络的代码看起来像这样：
- en: '[PRE3]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'When you built your training job, you simply had to select a dataset and then
    select a few training parameters. There was no need for any of the following:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当您建立训练作业时，只需选择一个数据集，然后选择几个训练参数。不需要以下任何内容：
- en: No need to understand what kind of regression algorithm to use
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 不需要了解使用什么样的回归算法
- en: There are many types of regression analysis techniques, and the use of each
    method depends upon a number of factors. These factors include the type of target
    variable, shape of the regression line, and the number of independent variables.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多种回归分析技术，每种方法的使用取决于多种因素。这些因素包括目标变量的类型、回归线的形状和自变量的数量。
- en: No need to understand “classical machine learning” versus neural networks
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 不需要了解“经典机器学习”与神经网络的区别
- en: There was no need to comprehend the commonly used neural-network building blocks
    such as layers, neurons (nodes), objectives, activation functions, or optimizers
    (see the [glossary on GitHub](https://oreil.ly/tVCwP)).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 不需要理解常用的神经网络构建模块，如层、神经元（节点）、目标、激活函数或优化器（参见[GitHub上的术语表](https://oreil.ly/tVCwP)）。
- en: No need to understand the training process or any model optimization strategies
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 不需要了解训练过程或任何模型优化策略
- en: During training, AutoML focuses on optimizing not only the model weights but
    also the architecture. Selecting the appropriate architecture is done by AutoML.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练过程中，AutoML专注于优化模型权重和架构。选择适当的架构由AutoML完成。
- en: No need to understand or specify compute resources
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 不需要了解或指定计算资源
- en: When you chose “one node,” AutoML selected the right machine type.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 当您选择“一个节点”时，AutoML选择了合适的机器类型。
- en: Note
  id: totrans-84
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: See the [glossary on GitHub](https://oreil.ly/tVCwP) for definitions of the
    types of regression algorithms, such as linear regression, logistic regression,
    ridge regression, lasso regression, polynomial regression, and Bayesian linear
    regression.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 参见[GitHub上的术语表](https://oreil.ly/tVCwP)了解回归算法类型的定义，如线性回归、逻辑回归、岭回归、拉索回归、多项式回归和贝叶斯线性回归。
- en: Machine Learning as a Service
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习即服务
- en: AutoML is part of the machine learning as a service (MLaaS) platform offered
    by cloud providers. The top three cloud providers are Google, Amazon, and Microsoft.
    If you are not familiar with cloud architecture and services, [Figure 3-14](#typical_cloud_quotation_markplatform_py)
    shows the typical cloud “platform pyramid.”
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: AutoML是云提供商提供的机器学习即服务（MLaaS）平台的一部分。排名前三的云提供商是Google、Amazon和Microsoft。如果您对云架构和服务不熟悉，[图3-14](#typical_cloud_quotation_markplatform_py)展示了典型的云“平台金字塔”。
- en: Occupying the bottom of the pyramid is IaaS (infrastructure as a service). Think
    of this layer as the hardware and storage layer, with customers using the cloud
    provider’s servers to handle the actual computation and storage services for storing
    dataset files, models, containers, and so on. The middle layer is PaaS (platform
    as a service). Think of this layer as providing the platform (operating systems
    such as Linux or Windows) that customers use to run their own software. The top
    layer is SaaS (software as a service). The best example of this is AutoML—you
    don’t have to configure a server or write code, you just open a browser and use
    it.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 占据金字塔底部的是 IaaS（基础设施即服务）。将此层视为硬件和存储层，客户使用云提供商的服务器处理实际的计算和存储服务，用于存储数据集文件、模型、容器等。中间层是
    PaaS（平台即服务）。将此层视为提供平台（如 Linux 或 Windows 操作系统），客户使用该平台运行其自己的软件。顶层是 SaaS（软件即服务）。AutoML
    是最佳示例 — 您不需要配置服务器或编写代码，只需打开浏览器即可使用它。
- en: '![Typical cloud “platform pyramid”](assets/lcai_0314.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![典型云“平台金字塔”](assets/lcai_0314.png)'
- en: Figure 3-14\. Typical cloud “platform pyramid.”
  id: totrans-90
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-14\. 典型云“平台金字塔”。
- en: Google, Amazon, and Microsoft offer services to support the entire ML workflow,
    including ML learning algorithm training and tuning, data visualization, data
    preprocessing, and [deep learning](https://oreil.ly/nD_w4). They also provide
    managed Jupyter Notebooks for using frameworks such as scikit-learn, Keras, TensorFlow,
    and PyTorch. [Table 3-1](#mlaas_benefits) shows the benefits of MLaaS.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Google、Amazon 和 Microsoft 提供支持整个 ML 工作流程的服务，包括 ML 学习算法的训练和调整、数据可视化、数据预处理，以及[深度学习](https://oreil.ly/nD_w4)。它们还为使用
    scikit-learn、Keras、TensorFlow 和 PyTorch 等框架提供托管的 Jupyter Notebooks。[表 3-1](#mlaas_benefits)
    展示了 MLaaS 的益处。
- en: Table 3-1\. MLaaS benefits
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 表 3-1\. MLaaS 益处
- en: '| Data extraction and exploration |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 数据提取和探索 |'
- en: Extract and clean dataset using Jupyter Notebook or, in some cases, the cloud
    provider’s own data visualization tools.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Jupyter Notebook 或在某些情况下使用云提供商自己的数据可视化工具提取和清理数据集。
- en: Apply data transformations and feature engineering to the model, and split the
    data into training, validation, and test sets.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对模型应用数据转换和特征工程，并将数据分割为训练、验证和测试集。
- en: Explore and visualize data using the GUI tool or Jupyter Notebook.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 GUI 工具或 Jupyter Notebook 探索和可视化数据。
- en: '|'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Model training |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| 模型训练 |'
- en: Use AutoML for tabular, image, text, and video data. Automatic featurization
    and algorithm selection.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于表格、图像、文本和视频数据的 AutoML。自动特征化和算法选择。
- en: Shared notebooks, compute resources, data, and environments.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 共享笔记本、计算资源、数据和环境。
- en: Custom training using open source platforms, such as PyTorch, TensorFlow, or
    scikit-learn.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 PyTorch、TensorFlow 或 scikit-learn 等开源平台进行定制训练。
- en: Optimize hyperparameters.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化超参数。
- en: Experiment by running different model versions using different techniques and
    compare results.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过运行不同的模型版本和技术进行实验，并比较结果。
- en: '|'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Distributed training | Offer multinode distributed training. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| 分布式训练 | 提供多节点分布式训练。 |'
- en: '| Model evaluation and iteration | Provide evaluation metrics so that you can
    make adjustments to your data and iterate on your model. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| 模型评估和迭代 | 提供评估指标，使您可以对数据进行调整并迭代您的模型。 |'
- en: '| Model explainability | Understand how each feature contributes to model prediction
    (feature attribution). |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| 模型可解释性 | 理解每个特征如何影响模型预测（特征归因）。 |'
- en: '| Model serving | Deploy your model to production and get predictions. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| 模型服务 | 部署您的模型到生产环境并进行预测。 |'
- en: '| Model monitoring | Monitors the performance of your deployed model for training-serving
    skew and prediction drift and sends you alerts when the incoming prediction data
    skews too far from the training baseline . |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| 模型监控 | 监控部署模型的性能，检测训练与服务之间的偏差和预测漂移，并在预测数据与训练基线偏离过大时发送警报。 |'
- en: 'AutoML is a valuable tool for businesses and organizations that want to use
    ML to improve their operations. By automating many of the time-consuming and complex
    tasks involved in building ML models, AutoML can help businesses and organizations
    get their models up and running more quickly. Here are some specific examples
    of how AutoML is being used in businesses today:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: AutoML 是企业和组织希望利用 ML 提升运营效率的有价值工具。通过自动化构建 ML 模型中许多耗时复杂的任务，AutoML 能帮助企业和组织更快地启动和运行模型。以下是一些当前业务中如何使用
    AutoML 的具体示例：
- en: Telecom
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 电信
- en: AutoML is being used by telecom companies to improve customer churn prediction,
    fraud detection, and network optimization.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 电信公司正在使用 AutoML 来改善客户流失预测、欺诈检测和网络优化。
- en: Manufacturing
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 制造业
- en: AutoML is being used by manufacturing companies to improve product quality,
    optimize production processes, and predict equipment failure.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 制造业公司正在使用 AutoML 来提高产品质量、优化生产流程并预测设备故障。
- en: Retail
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 零售
- en: AutoML is being used by retailers to personalize customer experiences, recommend
    products, and optimize inventory levels.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 零售商正在使用 AutoML 来个性化客户体验，推荐产品并优化库存水平。
- en: Healthcare
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 医疗保健
- en: AutoML is being used by healthcare companies to diagnose diseases, predict patient
    outcomes, and personalize treatment plans.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 医疗保健公司正在使用 AutoML 来诊断疾病、预测患者结果并个性化治疗计划。
- en: These are just a few examples of how AutoML is being used in businesses today.
    As AutoML technology continues to mature, expect to see even more innovative applications
    of AutoML in the future. [Table 3-2](#automl_benefits) shows the benefits of AutoML.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这些只是今天业务中如何使用 AutoML 的几个例子。随着 AutoML 技术的不断成熟，未来预计会看到更多创新的 AutoML 应用。[表 3-2](#automl_benefits)
    展示了 AutoML 的益处。
- en: Table 3-2\. AutoML benefits
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 表 3-2\. AutoML 的益处
- en: '| Improved accuracy | AutoML can help businesses and organizations build more
    accurate ML models. This is because AutoML can experiment with a wider range of
    algorithms and hyperparameters than a human data scientist could. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| 提高准确性 | AutoML 可以帮助企业建立更准确的 ML 模型。这是因为 AutoML 可以尝试比人类数据科学家更广泛的算法和超参数。 |'
- en: '| Democratized ML | AutoML makes ML more accessible to nonexperts. This is
    because AutoML provides a simple, user-friendly interface for building and deploying
    ML models. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| 普及 ML | AutoML 使非专家更容易接触 ML。这是因为 AutoML 提供了一个简单、用户友好的界面来构建和部署 ML 模型。 |'
- en: '| Reduced time to market | AutoML can help businesses and organizations get
    their ML models up and running more quickly. This is because AutoML automates
    many of the time-consuming tasks involved in building ML models, such as data
    cleaning, feature engineering, and model training. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| 缩短上市时间 | AutoML 可以帮助企业更快地启动和运行其 ML 模型。这是因为 AutoML 自动化了构建 ML 模型中许多耗时的任务，如数据清洗、特征工程和模型训练。
    |'
- en: '| Reduced risk | AutoML can help businesses and organizations reduce the risk
    of building ML models that are biased or inaccurate. This is because AutoML automates
    many of the steps involved in model validation and testing. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| 降低风险 | AutoML 可以帮助企业降低构建偏见或不准确的 ML 模型的风险。这是因为 AutoML 自动化了模型验证和测试中的许多步骤。 |'
- en: '[Figure 3-15](#googleapostrophes_vertex_ai_interface) shows Google’s Vertex
    AI solution, [Figure 3-16](#microsoftapostrophes_azure_ml_studio_in) shows Microsoft’s
    Azure ML Studio solution, and [Figure 3-17](#automl_for_amazon_sagemaker_interface)
    shows the AutoML for Amazon SageMaker solution.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 3-15](#googleapostrophes_vertex_ai_interface) 展示了谷歌的 Vertex AI 解决方案，[图 3-16](#microsoftapostrophes_azure_ml_studio_in)
    展示了微软的 Azure ML Studio 解决方案，以及 [图 3-17](#automl_for_amazon_sagemaker_interface)
    展示了 Amazon SageMaker 的 AutoML 解决方案。'
- en: '![Google’s Vertex AI interface](assets/lcai_0315.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![谷歌的 Vertex AI 界面](assets/lcai_0315.png)'
- en: Figure 3-15\. Google’s Vertex AI interface.
  id: totrans-127
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-15\. 谷歌的 Vertex AI 界面。
- en: '![Microsoft’s Azure ML Studio interface](assets/lcai_0316.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![微软的 Azure ML Studio 界面](assets/lcai_0316.png)'
- en: Figure 3-16\. Microsoft’s Azure ML Studio interface.
  id: totrans-129
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-16\. 微软的 Azure ML Studio 界面。
- en: '![AutoML for Amazon SageMaker interface](assets/lcai_0317.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![Amazon SageMaker 的 AutoML 界面](assets/lcai_0317.png)'
- en: Figure 3-17\. AutoML for Amazon SageMaker interface.
  id: totrans-131
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-17\. Amazon SageMaker 的 AutoML 界面。
- en: Low-Code ML Frameworks
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 低代码 ML 框架
- en: 'Low-code AutoML requires installation and configuration of libraries, plus
    some knowledge of Python or some knowledge of Structured Query Language (SQL).
    *Low-code* is defined here as the following:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 低代码 AutoML 需要安装和配置库，以及一些 Python 或结构化查询语言（SQL）的知识。*低代码* 在此处的定义如下：
- en: ML frameworks that provide an “abstraction layer” on top of an existing ML framework.
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供在现有 ML 框架之上的“抽象层”的 ML 框架。
- en: Databases that allow you to run ML models using SQL or databases that allow
    you to run Python code that includes ML code.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许您使用 SQL 运行 ML 模型的数据库，或者允许您运行包含 ML 代码的 Python 代码的数据库。
- en: '[Table 3-3](#ml_framework_examples) shows some examples.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 3-3](#ml_framework_examples) 展示了一些例子。'
- en: Table 3-3\. ML framework examples
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 表 3-3\. ML 框架示例
- en: '| Cloud providers (SQL) | Open source |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| 云提供商（SQL） | 开源 |'
- en: '| --- | --- |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Google | BigQuery | AutoKeras |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| 谷歌 | BigQuery | AutoKeras |'
- en: '| Amazon | Aurora, Redshift | Auto-sklearn |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '| Amazon | Aurora, Redshift | Auto-sklearn |'
- en: '| Microsoft | Azure SQL Server | Auto-PyTorch |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| Microsoft | Azure SQL Server | Auto-PyTorch |'
- en: SQL ML Frameworks
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SQL ML 框架
- en: Data analysts and data scientists typically use SQL for data analysis. They
    can leverage their existing SQL skills and expertise and apply them to ML—without
    any ML programming backgrounds. If they know SQL but can’t code in Python, Java,
    or R, they can work within a SQL-ML framework for their ML projects. This is why
    SQL-ML frameworks are considered low-code. There is not a lot of SQL coding required.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分析师和数据科学家通常使用 SQL 进行数据分析。他们可以利用现有的 SQL 技能和专业知识，并将其应用于 ML 项目，而无需具备任何 ML 编程背景。如果他们懂
    SQL 但无法编写 Python、Java 或 R 代码，他们可以在 SQL-ML 框架内工作。这就是为什么 SQL-ML 框架被认为是低代码的原因。几乎不需要大量的
    SQL 编码。
- en: 'Benefits of using databases/data warehouses for SQL-ML:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 使用数据库/数据仓库进行 SQL-ML 的好处：
- en: Model building with large datasets
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据集的模型构建
- en: When you can build the ML model where the data “lives,” then the ML SQL code
    stays “close to the data” and reduces latency (data transmission times). This
    is especially crucial for large datasets using deep learning, where training requires
    iteration through a percentage of the data for training, validation, and testing.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 当您可以在数据“居住”的地方构建 ML 模型时，ML SQL 代码会“接近数据”，从而减少延迟（数据传输时间）。这对于使用深度学习的大型数据集尤为重要，其中训练需要通过数据的一部分进行迭代，以用于训练、验证和测试。
- en: Backend integration with existing ML systems
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 与现有 ML 系统的后端集成
- en: Integrate with the cloud provider’s backend ML framework (for example, Google’s
    Vertex AI, Amazon’s SageMaker, and Microsoft’s Azure).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 与云服务提供商的后端 ML 框架集成（例如 Google 的 Vertex AI、Amazon 的 SageMaker 和 Microsoft 的 Azure）。
- en: Common model build statements
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 常见的模型构建语句
- en: All use the `CREATE MODEL` SQL command and specify training data either as a
    table or `SELECT` statement. They then compile and import the trained model inside
    the data warehouse and prepare a SQL inference function that can be immediately
    used in SQL queries.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 所有使用 `CREATE MODEL` SQL 命令，并指定训练数据作为表格或 `SELECT` 语句。然后在数据仓库中编译和导入训练模型，并准备一个
    SQL 推理函数，可以立即在 SQL 查询中使用。
- en: Use cases
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 使用案例
- en: Typical use cases include fraud detection, product recommendations, and ad targeting
    due to low-latency, real-time requirements.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 典型用例包括欺诈检测、产品推荐和广告定位，由于低延迟和实时需求。
- en: Note
  id: totrans-154
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: A *database* is a collection of data or information. The term *database* is
    commonly used to reference both the database itself as well as the database management
    system (DBMS). *Data warehouses* store large amounts of current and historical
    data from various sources.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '*数据库* 是数据或信息的集合。术语 *数据库* 通常用于引用数据库本身以及数据库管理系统（DBMS）。*数据仓库* 存储来自各种来源的大量当前和历史数据。'
- en: Google’s BigQuery ML
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Google 的 BigQuery ML
- en: '[Google’s BigQuery](https://oreil.ly/mQYE0) is a data warehouse. It can provide
    decision-making guidance through predictive analytics by using its ML tool. You
    can create and train a model without ever exporting data out of BigQuery. Like
    Vertex AI, BigQuery ML does not require an environment and dependency setup. BigQuery
    ML is browser-based and serverless, meaning you don’t need a server to run it.
    If you have data already residing in BigQuery’s data warehouse, then you can use
    that data for your ML projects.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[Google 的 BigQuery](https://oreil.ly/mQYE0) 是一个数据仓库。它可以通过其 ML 工具提供决策指导和预测分析。您可以在
    BigQuery 中创建和训练模型，无需导出数据。与 Vertex AI 一样，BigQuery ML 不需要环境和依赖设置。BigQuery ML 是基于浏览器的和无服务器的，意味着您无需服务器即可运行它。如果您的数据已驻留在
    BigQuery 的数据仓库中，则可以将该数据用于您的 ML 项目。'
- en: Amazon Aurora ML and Redshift ML
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Amazon Aurora ML 和 Redshift ML
- en: '[Amazon Aurora](https://oreil.ly/2-Ngq) is a relational database management
    system (RDBMS) built for the cloud with full MySQL and PostgreSQL compatibility.
    Amazon Aurora ML enables you to add ML-based predictions to applications using
    SQL. When you run an ML query, Aurora calls Amazon SageMaker for a wide variety
    of ML algorithms.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '[Amazon Aurora](https://oreil.ly/2-Ngq) 是为云构建的关系数据库管理系统（RDBMS），完全兼容 MySQL 和
    PostgreSQL。Amazon Aurora ML 可以通过 SQL 为应用程序添加基于 ML 的预测。当运行 ML 查询时，Aurora 调用 Amazon
    SageMaker 使用各种 ML 算法。'
- en: '[Redshift ML](https://oreil.ly/hR0Lx) is a data warehouse. You use SQL statements
    to create and train Amazon SageMaker ML models using Redshift data and then use
    these models to make predictions. Redshift ML makes the model available as a SQL
    function within the Redshift data warehouse.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[Redshift ML](https://oreil.ly/hR0Lx) 是一个数据仓库。您可以使用SQL语句在Redshift数据上创建和训练Amazon
    SageMaker ML模型，然后使用这些模型进行预测。Redshift ML 将模型作为SQL函数提供在Redshift数据仓库中使用。'
- en: Open Source ML Libraries
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开源ML库
- en: '*Open source* AutoML refers to open source frameworks such as [AutoKeras](https://autokeras.com),
    [Auto-sklearn](https://oreil.ly/HtCyl), and [Auto-PyTorch](https://oreil.ly/xoipb)
    that add an additional layer of abstraction on top of existing open source libraries.
    Typically, you will need to code for the following using a Jupyter notebook:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '*开源* AutoML 指的是诸如 [AutoKeras](https://autokeras.com), [Auto-sklearn](https://oreil.ly/HtCyl)
    和 [Auto-PyTorch](https://oreil.ly/xoipb) 等开源框架，这些框架在现有开源库之上增加了额外的抽象层。通常，您需要使用Jupyter笔记本来编码以下内容：'
- en: Install the AutoML package.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装AutoML包。
- en: Import the package.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入包。
- en: Load a dataset.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载数据集。
- en: Split the data.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 拆分数据。
- en: Fit the model.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 拟合模型。
- en: Predict.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预测。
- en: Evaluate.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 评估。
- en: Export the model.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导出模型。
- en: After Step 4, each open source framework has its own way to perform model fit,
    prediction, and evaluation. [Figure 3-18](#first_four_steps_using_open_source_libr)
    shows the first four steps.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在第四步之后，每个开源框架都有自己的方法来执行模型拟合、预测和评估。[图 3-18](#first_four_steps_using_open_source_libr)
    展示了前四个步骤。
- en: '![First four steps using open source libraries](assets/lcai_0318.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![使用开源库的前四个步骤](assets/lcai_0318.png)'
- en: Figure 3-18\. First four steps using open source libraries.
  id: totrans-173
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 3-18\. 使用开源库的前四个步骤。
- en: AutoKeras
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AutoKeras
- en: AutoKeras, a Keras-based open source AutoML framework, was developed to allow
    nonexperts to quickly build neural networks with minimal code. When using AutoKeras,
    you only need to specify the training data, and AutoKeras performs the data preprocessing
    independently. For example, if the data has categorical variables, it will convert
    them into one-hot encoding depending on whether it is a classification or regression
    task; if the input data contains text, AutoKeras transforms it into an embedding.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: AutoKeras 是基于Keras的开源AutoML框架，旨在允许非专家快速构建神经网络，并且代码量最小。使用AutoKeras 时，您只需指定训练数据，AutoKeras
    将独立进行数据预处理。例如，如果数据包含分类变量，它将根据是分类任务还是回归任务将其转换为独热编码；如果输入数据包含文本，AutoKeras 将其转换为嵌入。
- en: Auto-Sklearn
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Auto-Sklearn
- en: Auto-sklearn is an open source Python package based on the scikit-learn ML library.
    Auto-sklearn automatically searches for the right learning algorithm for a new
    ML dataset and optimizes its hyperparameters. This framework only supports sklearn-based
    models. Auto-sklearn was developed by labs at the University of Freiburg and the
    University of Hannover.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: Auto-sklearn 是基于 scikit-learn ML 库的开源Python包。Auto-sklearn 自动搜索新ML数据集的正确学习算法，并优化其超参数。该框架仅支持基于sklearn的模型。Auto-sklearn
    由弗莱堡大学和汉诺威大学的实验室开发。
- en: Auto-PyTorch
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Auto-PyTorch
- en: In addition to Auto-sklearn, the Freiburg-Hannover AutoML group also developed
    an AutoML based on PyTorch that focuses on deep learning. Auto-PyTorch is deemed
    excellent at rapid prototyping. It also supports distributed training.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Auto-sklearn，Freiburg-Hannover AutoML 小组还开发了基于PyTorch的AutoML，专注于深度学习。Auto-PyTorch
    被认为在快速原型设计方面表现出色。它还支持分布式训练。
- en: Summary
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Business analysts, data analysts, citizen data scientists, data scientists,
    software developers, and ML engineers can all use AutoML frameworks to streamline
    the development process.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 业务分析师、数据分析师、公民数据科学家、数据科学家、软件开发人员和ML工程师都可以使用AutoML框架来简化开发过程。
- en: First, you load a dataset that includes a target variable and input feature
    data used for predictions. After the data is loaded, a data profile is generated
    for each data column. To submit a training job, you select just a few parameters.
    AutoML then experiments with multiple models and performs model optimization.
    Results are presented, as well as feature attribution.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您加载包含目标变量和用于预测的输入特征数据的数据集。加载数据后，会为每个数据列生成数据概要。要提交训练作业，只需选择几个参数。AutoML然后尝试多个模型并执行模型优化。结果被呈现出来，同时还有特征归因。
- en: Cloud vendors provide MLaaS to accelerate and automate day-to-day ML workflows,
    tools for integrating models into applications or services, and tools for deploying
    models into production.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 云供应商提供MLaaS，加速和自动化日常ML工作流，提供将模型集成到应用程序或服务中的工具，以及将模型部署到生产环境的工具。
- en: Low-code AutoML requires installation, configuration of libraries, and some
    knowledge of SQL or Python. Open source AutoML refers to open source frameworks
    such as AutoKeras, Auto-sklearn, and Auto-PyTorch that add an additional layer
    of abstraction on top of existing open source libraries.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 低代码 AutoML 需要安装和配置库，并且需要一些 SQL 或 Python 的知识。开源 AutoML 指的是诸如 AutoKeras、Auto-sklearn
    和 Auto-PyTorch 等开源框架，它们在现有的开源库之上提供了额外的抽象层。
- en: In [Chapter 4](ch04.html#use_automl_to_predict_advertising_media), you build
    an AutoML model to predict advertising media channel sales. First, you explore
    your data using Pandas. Then you learn how to use AutoML to build, train, and
    deploy an ML model to predict sales.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第四章](ch04.html#use_automl_to_predict_advertising_media) 中，您将建立一个 AutoML 模型来预测广告媒体渠道的销售情况。首先，您会使用
    Pandas 探索数据。然后，您将学习如何使用 AutoML 构建、训练和部署机器学习模型以预测销售额。

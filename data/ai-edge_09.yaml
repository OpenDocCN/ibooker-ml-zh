- en: Chapter 8\. Designing Edge AI Applications
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第八章。设计边缘人工智能应用
- en: The design and development of an application is where all the threads of edge
    AI are woven together. It requires an understanding of everything we’ve discussed
    so far, including problem framing, dataset collection, technology choice, and
    responsible AI. These are in addition to the skills and knowledge required to
    design a product in the relevant domain and to implement the design in both software
    and hardware.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序的设计和开发是将边缘人工智能的所有线索编织在一起的地方。这需要理解我们迄今讨论过的一切，包括问题框架、数据集收集、技术选择以及负责任的人工智能。这些还需要在相关领域设计产品所需的技能和知识，并在软件和硬件上实现设计。
- en: In this chapter, we’ll walk through the process of designing an edge AI application,
    and we’ll learn some of the most important design patterns that are used in real-world
    applications that can be applied to your own work. By the end of the chapter,
    you’ll be comfortable with the requirements of edge AI product design and ready
    to start creating your own products.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将详细介绍设计边缘人工智能应用程序的过程，并学习一些在真实应用中使用的最重要的设计模式，这些模式可以应用到您自己的工作中。通过本章的学习，您将对边缘人工智能产品设计的要求感到满意，并准备好开始创建您自己的产品。
- en: 'There are two main parts to the design of an edge AI application: the product
    or solution itself, and the technology architecture that makes it work. These
    two parts are interdependent. The product design will impact the required technology
    architecture, and the constraints of the technology will influence the design.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 设计边缘人工智能应用程序有两个主要部分：产品或解决方案本身以及使其工作的技术架构。这两个部分是相互依存的。产品设计将影响所需的技术架构，而技术的限制将影响设计。
- en: In addition, the entire design and implementation process is informed by the
    specifics of the real-world situation in which the product will be deployed. Your
    designs will need to evolve fluidly as you collect data, experiment with different
    approaches, and test your solution under real conditions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，整个设计和实施过程都受到产品部署的现实情况的影响。随着数据的收集、尝试不同方法和在实际条件下测试解决方案，您的设计将需要流动地发展。
- en: This dynamic system requires an iterative design process, where the solution
    is incrementally tried, tweaked, and improved. The best way to plan for this involves
    developing a strong understanding of both the problem you are trying to solve
    and the space of potential solutions.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这种动态系统需要一个迭代的设计过程，其中解决方案是逐步尝试、调整和改进的。规划这一过程的最佳方式包括对你试图解决的问题以及潜在解决方案空间的深入理解。
- en: Hardware product design and embedded software architecture are major topics
    on their own. In this book we’ll focus specifically on the design considerations
    associated with edge AI.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件产品设计和嵌入式软件架构本身就是一个重要的课题。在本书中，我们将专注于与边缘人工智能相关的设计考虑。
- en: Product and Experience Design
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 产品与体验设计
- en: 'The goal of an edge AI product is to solve a particular problem. Most real-world
    problems have several components, all of which must be addressed in order to consider
    the problem “solved”:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘人工智能产品的目标是解决特定问题。大多数现实世界的问题都有几个组成部分，所有这些部分都必须被考虑在内，才能认为问题已经“解决”：
- en: The problem itself
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 问题本身
- en: How well the product addresses the fundamental issue
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 产品如何解决基本问题
- en: The human element
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 人的因素
- en: How well the product meets the expectations of its users
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 产品如何满足其用户的期望
- en: The broader context
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 更广泛的背景
- en: How well the product meets the realities of our world
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 产品如何符合我们世界的现实情况
- en: To illustrate this, let’s consider a hypothetical example.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这一点，让我们考虑一个假设的例子。
- en: 'Let’s consider two different ways we might solve the problem of tracking weightlifting
    workouts. Remember, we need to solve for three things: the problem itself, the
    human element, and the broader context.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑两种不同的方法来解决跟踪举重锻炼的问题。记住，我们需要解决三个问题：问题本身、人的因素和更广泛的背景。
- en: In our first solution, the athlete wears a smart watch that is equipped with
    an accelerometer. Before each set, they input the movement type on the watch using
    hardware buttons, along with the weight they are lifting. During a set, the watch
    keeps track of the number of reps that are performed, using an AI algorithm to
    understand when a rep has been completed based on data from the accelerometer.
    After the workout, this information is synced to a mobile application for viewing.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的第一个解决方案中，运动员佩戴一款配有加速度计的智能手表。每组开始前，他们使用硬件按钮在手表上输入运动类型，并注明所举重量。在进行每组训练时，手表通过AI算法来追踪完成的次数，根据加速度计的数据判断何时完成一次重复动作。训练结束后，这些信息会同步到一个移动应用程序供查看。
- en: 'Does this solve the problem itself? Technically, yes—the system allows the
    athlete to track their weightlifting workout without a notebook. In a broader
    context, this solution also seems fine: fitness wearables are common, affordable,
    practically designed, and well accepted in society.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这是否解决了问题本身？技术上来说，是的——系统允许运动员在没有笔记本的情况下跟踪他们的举重训练。从更广泛的角度来看，这个解决方案似乎也是可以接受的：健身可穿戴设备普及、价格实惠、设计实用，并在社会上被广泛接受。
- en: However, things look less appealing when we consider the human element. Our
    design requires the athlete to enter a weight number into their smart watch between
    each set. It’s questionable whether this is a superior solution to using a paper
    notebook. In fact, many people find it frustrating to interact with smart device
    interfaces when they are in the middle of a workout.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当考虑到人的因素时，这种设计看起来就没那么吸引人了。我们的设计要求运动员在每组训练之间向他们的智能手表输入一个重量数字。这是否比使用纸质笔记本更优越，令人怀疑。事实上，许多人发现在进行中期训练时与智能设备界面进行交互是很令人沮丧的。
- en: Let’s consider another solution. It would be great to be able to understand
    which movement an athlete is performing and the amount of weight they are using
    without requiring them to enter data by hand. To achieve this, we could use a
    small, battery-powered camera that can be placed on the floor in front of the
    athlete while they work out. It would use computer vision techniques to count
    the amount of weight being used and determine the movements that are being performed.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑另一个解决方案。能够理解运动员正在进行的动作以及他们所使用的重量，而无需手动输入数据，这将是非常好的。为了实现这一点，我们可以使用一台小型的电池供电摄像头，可以放置在运动员前面的地板上。它将使用计算机视觉技术来计算使用的重量并确定正在进行的动作。
- en: 'From the point of view of the underlying problem, this sounds great—it would
    remove the need for a notebook for activity tracking. From a human perspective,
    this is a genuine improvement in experience: the athlete can focus on their exercises
    without having to interact with a smart device or a notebook in the middle of
    their flow.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 从问题的根本来看，这听起来很棒——它会消除活动跟踪需要使用笔记本的必要性。从人类的角度来看，这是体验的真正改进：运动员可以专注于他们的锻炼，而不必在流程中与智能设备或笔记本交互。
- en: Unfortunately, in a broader context this solution may not be a good one. Many
    people work out at public gyms, where there is an expectation of privacy. Fellow
    gym users are unlikely to feel comfortable with being “filmed” by a smart camera
    during their workouts. While an edge AI camera could easily preserve privacy by
    not storing any of the video footage, it might be tough to explain this to other
    gym users. The social context of what is considered acceptable can make it difficult
    to deploy an otherwise effective design.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，从更广泛的背景来看，这个解决方案可能并不是一个好的选择。许多人在公共健身房进行锻炼，那里有隐私的期望。其他健身房用户不太可能在他们的锻炼期间被智能摄像头“拍摄”而感到舒适。虽然边缘AI摄像头可以通过不存储任何视频镜头轻松保护隐私，但向其他健身房用户解释这一点可能会很困难。在被认为是可接受的社会背景下，对于部署一个有效的设计可能会带来困难。
- en: As we can see, it’s critical that your design addresses every aspect of a problem.
    Edge AI can overcome a lot of challenges, but there are many cases where usability
    issues or the broader human context neutralize its benefits.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，你的设计必须考虑问题的每个方面是至关重要的。边缘AI可以克服许多挑战，但在许多情况下，可用性问题或更广泛的人类背景可能会抵消其好处。
- en: Design Principles
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计原则
- en: 'A good way to approach design is through a set of principles that provide structure
    to our critical thought. Ovetta Sampson, VP of Machine Learning Experience Design
    at Capital One, authored a fantastic set of principles that apply specifically
    to the use of AI in design. In her own words:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 设计的一个良好方法是通过一套原则来提供对我们的批判性思维结构的支持。Capital One 的机器学习体验设计副总裁 Ovetta Sampson 撰写了一套专门适用于设计中
    AI 使用的原则。她自己的话：
- en: In the age of AI, where speed, scale, and scary can simultaneously all be components
    of the products we design, we have to change design from a noun to become a very,
    deliberate verb. We’re entering a Brave New World. And that world requires designers
    to take on a larger responsibility for the outcomes produced, behavior induced,
    and effect on humanity the intelligent products we design to have.
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在 AI 时代，速度、规模和恐惧可以同时成为我们设计产品的组成部分，我们必须将设计从名词转变为一种非常有意图的动词。我们正在进入一个全新的世界。这个世界要求设计师承担更大的责任，对我们设计的智能产品产生的结果、引发的行为以及对人类的影响负责。
- en: ''
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Ovetta Sampson
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Ovetta Sampson
- en: 'Sampson’s ten principles, inspired by [an earlier set](https://oreil.ly/Ez0ym)
    written by the German designer Dieter Rams, are as follows, including our own
    explanation of each point:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Sampson 受德国设计师 Dieter Rams 早期一套原则的启发，撰写了她的十大原则，以下包括我们对每一点的解释：
- en: Good design solves hard problems
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 优秀的设计解决复杂问题。
- en: With great power but limited resources, we should focus on solving the problems
    that matter.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在具有巨大力量但有限资源的时代，我们应专注于解决重要的问题。
- en: Good design promotes healthy relationships
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 优秀的设计促进健康关系。
- en: Users exist within a network of relationships with other people and other products,
    and our design should account for this.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 用户存在于与其他人和其他产品的关系网络中，我们的设计应考虑到这一点。
- en: Good design requires malleability
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 优秀的设计要求可塑性。
- en: AI enables incredible customization, and we should make use of it to build better
    products that work reliably for the people we are designing for.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: AI 能够提供令人难以置信的定制功能，我们应利用它来构建更可靠地为我们设计的人群工作的更好产品。
- en: Good design makes companies that understand and products that serve me
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 优秀的设计使理解公司和服务我产品的公司更容易。
- en: Design should be based on accurate understanding of the needs of individual
    users, not by the needs of a marketing department.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 设计应基于对个体用户需求的准确理解，而不是市场部门的需求。
- en: Good design acknowledges bias
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 优秀的设计承认偏见。
- en: Bias is always present, and designers must work consciously to mitigate it,
    and be transparent about the limits of their products.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 偏见始终存在，设计师必须有意识地努力减少它，并公开产品的局限性。
- en: Good design prevents dishonesty
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 优秀的设计防止不诚实。
- en: Designers must be honest about the potential for negative impact from their
    products in order to avoid it.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 设计师必须诚实地面对其产品可能带来的负面影响，以避免出现这种情况。
- en: Good design expects unintended consequences
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 优秀的设计期待意外后果。
- en: Unintended consequences in AI systems can systematically harm people, and good
    design must acknowledge and work around this fact.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: AI 系统中的意外后果可能系统地伤害人们，优秀的设计必须承认并绕过这一事实。
- en: Good design fosters equity
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 优秀的设计促进公平。
- en: AI can inadvertently amplify inequity and injustice, but carefully designed
    AI systems can counter this effect.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: AI 可能无意中放大不公平和不正义，但精心设计的 AI 系统可以抵消这种影响。
- en: Good design considers its effect on a collective, connected ecosystem
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 优秀的设计考虑其对一个联结的生态系统的影响。
- en: The human contexts where AI is deployed are incredibly complex and diverse,
    and good design must reflect this.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: AI 部署的人类背景极其复杂多样，优秀的设计必须反映这一点。
- en: Good design purposefully brings order to chaos
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 优秀的设计有意地将秩序带入混乱中。
- en: AI products should make our world easier to understand and cope with, not more
    chaotic than it already is.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: AI 产品应使我们的世界更易理解和应对，而不是使其比现在更混乱。
- en: '[Sampson’s original article](https://oreil.ly/-4WvU) provides a deeper explanation
    of each principle.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[Sampson 的原文](https://oreil.ly/-4WvU)提供了对每个原则的更深入解释。'
- en: These principles are based on the acknowledgment that AI derives its power through
    scale. Functions that would previously have required human oversight can now be
    entirely automated. The associated reduction in cost means that these functions
    will become far more widespread and will have a far greater impact than they otherwise
    would.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这些原则基于这样一个认知：AI 通过规模获得其力量。以前需要人类监督的功能现在可以完全自动化。相关成本的降低意味着这些功能将变得更加普遍，并且对其影响也将比以往更大。
- en: Simultaneously, the nature of AI systems mean that a single implementation—created
    by a single engineering team—may end up in widespread use by millions of very
    different people. This means that any flaw in a system will also be magnified
    to affect large portions of our population.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，AI系统的特性意味着由单一工程团队创建的单一实现可能会被数百万完全不同的人广泛使用。这意味着系统中的任何缺陷也会被放大，影响到我们人口的大部分。
- en: 'In practical terms: while a bad doctor might harm thousands of patients over
    the course of their career, a bad medical AI system can harm millions. The risk
    of scaling harmful systems is why we need to be so careful when designing edge
    AI products and is what makes principles like Sampson’s so valuable.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际操作中：一个差劲的医生可能会在他们的职业生涯中伤害数千名患者，而一个糟糕的医疗AI系统可能会伤害数百万人。扩展有害系统的风险是我们在设计边缘AI产品时需要如此小心的原因，也是使得像桑普森的原则如此宝贵的原因。
- en: Scoping a Solution
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决方案的范围
- en: As anyone who works in software or hardware can attest, estimating the amount
    of work required to implement a product or feature can be very challenging. Similarly,
    AI and ML development are inherently unpredictable. The need for a high-quality
    dataset and the exploratory nature of the algorithm development process make it
    very difficult to know exactly how long a project is going to take.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 软件或硬件行业的任何人都可以证明，估算实施产品或功能所需工作量是非常具有挑战性的。同样，人工智能（AI）和机器学习（ML）的开发本质上是不可预测的。高质量数据集的需求和算法开发过程的探索性质使得准确预计项目需要的时间非常困难。
- en: Algorithm development naturally informs hardware and software requirements.
    For example, a machine learning practitioner may determine that a deep learning
    model needs to be a certain size in order to produce acceptable results. The size
    of the model will limit the types of devices that it can be deployed to. This
    means it may not be possible to begin the hardware development process until at
    least some of the algorithm development work has been done.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 算法开发自然会影响硬件和软件需求。例如，机器学习从业者可能会确定，深度学习模型需要达到一定的大小才能产生可接受的结果。模型的大小将限制其可以部署到的设备类型。这意味着可能需要在进行部分算法开发工作后才能开始硬件开发过程。
- en: The additional variables of AI development mean that it’s even harder to make
    the right assumptions about the development process as a whole. It can be very
    easy to underestimate the amount of work required, or to have to go back to the
    drawing board after a significant investment of time and money if it becomes apparent
    that the original plans will not suffice.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: AI开发的额外变量意味着对整个开发过程的正确假设更加困难。很容易低估所需工作量，或者在大量时间和金钱投入后，发现原始计划不足以支撑项目进展，从而不得不重新开始。
- en: The nature of AI development makes a “waterfall” development model very risky.
    It’s dangerous to assume that your initial assumptions will always hold true.
    It would be disastrously expensive to develop a beautiful piece of hardware and
    then discover at the last minute that it isn’t capable enough to run the required
    model.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: AI开发的性质使得“瀑布”开发模型非常危险。假设你的初始假设总是成立是非常危险的。如果在最后一刻发现美丽的硬件无法运行所需的模型，开发成本将会非常高昂。
- en: So how do you avoid this type of problem and make it easier to ship products
    that work? The key is to limit your scope. While AI is exciting, and the sky is
    the limit for novel applications, it’s much easier to avoid mistakes if you avoid
    being too ambitious out of the gate.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如何避免这类问题，并更容易地交付能正常工作的产品呢？关键是限制你的范围。虽然AI非常令人兴奋，对于新的应用来说天空是极限，但如果你在一开始就避免野心勃勃，避免犯错误会更容易。
- en: A fantastic demonstration of this principle is the reality of the self-driving
    car. In the heady days of the mid-2010s, many technologists thought that fully
    automated self-driving cars were just around the corner. The deep learning revolution
    had unlocked massive progress, and the capabilities of vehicles had made leaps
    and bounds from the earliest prototypes. A self-driving world seemed imminent.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 自动驾驶汽车的现实是这一原则的绝佳展示。在2010年代中期，许多技术专家认为完全自动化的自动驾驶汽车就在眼前。深度学习革命解锁了巨大进展，车辆的能力从最早的原型跃进了一大步。一个自动驾驶的世界似乎近在咫尺。
- en: Unfortunately, while it’s proven possible to build a self-driving car that can
    usually get things right, *usually* has not proven acceptable when we’re talking
    about high-speed interactions with the general public. The last few percentage
    points of reliability have gotten exponentially harder to unlock. While it’s likely
    we’ll see self-driving cars at some point, they’re still a few years away.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，虽然已经证明可以制造出一个通常能够做正确事情的自动驾驶汽车，但是在与普通公众进行高速交互时，*通常*并不被认为是可接受的。提高可靠性的最后几个百分点变得越来越难解决。虽然我们很可能会在某个时候看到自动驾驶汽车，但它们还需要几年的时间。
- en: While self-driving cars have stalled, a related—but less ambitious—set of technologies
    have become so successful that they are now present in at least [a third of all
    new vehicles](https://oreil.ly/Hz0QK). Advanced driver-assistance systems, or
    ADAS, is a category of technologies designed to help human drivers have an easier
    time on the road. They include features such as adaptive cruise control, lane
    centering, and collision avoidance.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然自动驾驶汽车已经停滞不前，但一个相关但更少雄心勃勃的技术集已经变得非常成功，它们现在至少在[三分之一的新车辆](https://oreil.ly/Hz0QK)中存在。高级驾驶辅助系统，或者ADAS，是一类旨在帮助人类驾驶员在道路上更轻松的技术。它们包括自适应巡航控制、车道居中和碰撞避免等功能。
- en: ADAS features, a classic use case for edge AI, are designed to help with specific,
    individual tasks. They ease the mental and physical burden on drivers and help
    improve road safety. While they are not as ambitious as self-driving systems,
    their more limited scope allows them to be a lot more successful.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: ADAS功能，作为边缘人工智能的一个经典应用案例，旨在帮助处理特定的、个别的任务。它们减轻了驾驶员的心理和体力负担，并帮助提高道路安全性。虽然它们的野心不及自动驾驶系统，但它们更有限的范围使它们能够更加成功。
- en: 'For example, many modern cars feature an adaptive cruise control system that
    can take over acceleration, braking, and lane centering while the car is on the
    freeway. Because the system only needs to work in this constrained environment,
    it’s a lot easier to build it with 100% reliability. While it won’t work at all
    on city streets, that’s OK: freeway driving occupies the most time of any long
    trip, so from the driver’s perspective it is nearly as good as a self-driving
    car.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，许多现代汽车配备了自适应巡航控制系统，可以在高速公路上接管加速、制动和车道居中。因为系统只需在这种受限环境下工作，所以建造具有100%可靠性的系统要容易得多。虽然在城市街道上完全不起作用，但这没关系：高速公路驾驶占据了任何长途旅行中最多的时间，所以从驾驶者的角度来看，它几乎和自动驾驶汽车一样好。
- en: By addressing a limited scope, ADAS systems are able to attain far more utility
    than self-driving systems in today’s vehicles. What’s more, the companies developing
    and deploying ADAS systems are able to incrementally build their expertise and
    insight under real-world conditions. They can keep improving their products while
    actively participating in the market, gradually getting closer to the dream of
    a self-driving car.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 通过解决有限的范围，ADAS系统在今天的车辆中能够获得比自动驾驶系统更多的效用。更重要的是，开发和部署ADAS系统的公司能够在真实世界条件下逐步积累他们的专业知识和见解。他们可以在积极参与市场的同时不断改进他们的产品，逐步接近自动驾驶汽车的梦想。
- en: 'This approach is sensible for any edge AI product. Instead of pursuing grand
    ideas from the beginning, try to identify the small, useful stepping stones that
    still deliver real value. Determine the minimum viable product: a simple, achievable
    benefit that is genuinely helpful to your users. Build something out, see how
    it performs in the real world, and iterate from there.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何边缘人工智能产品来说，这种方法是明智的。不要从一开始就追求宏大的理念，而是试图找出小而有用的步骤，这些步骤仍然能够提供真正的价值。确定最小可行产品：一个简单而可实现的好处，确实对用户有帮助。构建一些东西出来，看看它在现实世界中的表现，并从中迭代。
- en: Here’s a specific example. Imagine you are building a quality control system
    for a production line. Today, all quality inspection is done by hand. Time and
    cost constraints make it impossible to inspect every item, so random samples are
    inspected—meaning some defects make it through.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个具体的例子。想象一下，你正在为一个生产线建立一个质量控制系统。今天，所有的质量检查都是手工完成的。时间和成本的限制使得不可能检查每一个物品，因此只检查随机样本——这意味着一些缺陷可能会通过。
- en: Your long-term goal might be to inspect every item automatically using an edge
    AI vision system, ensuring all defective products are caught, and saving money
    on inspections. However, at the outset of the project it may not be clear that
    this is achievable. Your dataset may not have examples of every possible type
    of defect, making your system hard to test. There’s no way to know if it would
    work without trying—but failure could be expensive.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您的长期目标可能是使用边缘AI视觉系统自动检查每个项目，确保捕捉所有有缺陷的产品，并节省检查成本。然而，在项目初期可能不清楚是否可以实现这一目标。您的数据集可能没有每种可能缺陷的示例，使得您的系统难以测试。没有办法在不尝试的情况下知道它是否会工作，但失败可能会很昂贵。
- en: Let’s take a step back and think about the scope of the problem. While catching
    *every* defect may be a big challenge, being able to catch *some* of them would
    still be an improvement on the current situation, since we know some defects make
    it through.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们退一步，思考问题的范围。虽然捕捉*每一个*缺陷可能是一个很大的挑战，但能够捕捉*一些*缺陷仍然会比目前的情况有所改善，因为我们知道一些缺陷会通过检查。
- en: It may be relatively simple to train a model to detect one specific type of
    defect (rather than every defect possible) at least some of the time. If combined
    with the current manual inspection process, a model trained to catch one defect
    type could still provide a tangible benefit to the factory. They wouldn’t reduce
    inspection costs, but they would still catch more defects and increase the average
    quality of their products.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 训练模型以至少在某些时候检测一种特定类型的缺陷（而不是所有可能的缺陷）可能相对简单。如果与当前的手工检查过程结合使用，训练用于捕捉一种缺陷类型的模型仍然可以为工厂提供实际好处。它们虽然不能减少检查成本，但仍然能够捕捉更多的缺陷，并提高产品的平均质量。
- en: By limiting the scope to what you know is achievable, you’re able to deliver
    immediate value with greatly diminished risk. On the back of this success, there’s
    nothing to stop you from iterating on your solution and gradually attaining the
    grand vision you initially had in mind. Even better, you may find that your initial
    system delivers enough value that further development is not required.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将范围限制在可实现的范围内，您能够在极大降低风险的同时提供即时价值。在此成功的基础上，没有什么能阻止您对解决方案进行迭代，并逐步实现最初设想的宏伟目标。更好的是，您可能会发现，初始系统提供的价值已足够，无需进一步开发。
- en: Setting Design Goals
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设定设计目标
- en: 'In [“Planning an Edge AI Project”](ch06.html#planning_an_edge_ai_project),
    we learned about the need to set specific goals for our application development
    process. There are three main types of goals: systemic goals, which reflect on
    the overall performance of the system, technical goals, which reflect on the inner
    functioning of elements of your algorithms, and values that you want the system
    to adhere to.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在[“规划边缘AI项目”](ch06.html#planning_an_edge_ai_project)中，我们了解到需要为我们的应用开发过程设定具体的目标。主要有三种类型的目标：系统目标，反映系统整体性能的目标；技术目标，反映算法元素内部功能的目标；以及您希望系统遵守的价值观。
- en: To be effective, goals must be designed with input from stakeholders and domain
    experts (see [“Building a Team for AI at the Edge”](ch05.html#building_a_team_for_ai)).
    You will need to work to determine the minimum viable performance characteristics
    for a project. These are the criteria that will be used to evaluate the project’s
    success at both systemic and technical levels. Wherever possible, they should
    be quantifiable using standard metrics for the domain, so you can use them to
    concretely measure your progress.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要有效，目标必须得到利益相关者和领域专家的设计输入（参见[“在边缘AI团队构建”](ch05.html#building_a_team_for_ai)）。您需要努力确定项目的最小可行性能特征。这些标准将用于评估项目在系统和技术层面的成功。在可能的情况下，它们应该可以使用领域的标准度量指标量化，以便您可以具体衡量您的进展。
- en: The best way to set systemic goals is with an evaluation-first approach.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 设定系统目标的最佳方法是采用评估优先方法。
- en: Systemic goals
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 系统目标
- en: An edge AI system is rarely developed as the first and only solution to a problem.
    Most of the time there are solutions already in existence. When we’re developing
    an AI application, it’s important that we take the time to measure our solution
    against the existing ones, not just against itself. If we measure our system against
    itself, we’re almost guaranteed to see improvement throughout the development
    process. But to know that we genuinely have a *better* solution than the alternatives,
    we need to measure against those, too.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI系统很少作为解决问题的首选和唯一解决方案开发。大多数情况下，已经存在解决方案。当我们开发AI应用程序时，重要的是我们花时间将我们的解决方案与现有解决方案进行比较，而不仅仅是与自身比较。如果我们只是把我们的系统与自身比较，我们几乎可以保证在开发过程中会看到改进。但要知道我们确实有比其他解决方案更好的解决方案，我们需要与它们进行比较。
- en: That’s why an *evaluation-first* approach to development can be so powerful.
    In this style of approach, the first step of the development process is to come
    up with a set of evaluation metrics that are general enough to measure the performance
    of any potential solution to the problem—AI or otherwise.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么“先评估”方法对开发如此有力。在这种方法中，开发过程的第一步是提出一组足够一般的评估指标，以便评估解决问题的任何潜在解决方案的性能——无论是AI还是其他。
- en: For example, imagine you are developing an edge AI application to help retail
    employees know when shelves are empty and need to be restocked. One way to approach
    this might be to focus on the technology involved. As a goal, you might decide
    that your system must be able to predict with 90% accuracy when a shelf needs
    to be restocked.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，想象一下，你正在开发一个边缘AI应用程序，帮助零售员工知道何时货架为空，需要补货。一种方法是专注于涉及的技术。作为目标，你可能决定你的系统必须能够以90%的准确率预测何时需要补货。
- en: 'This sounds pretty good: 90% accuracy means the model will be correct in identifying
    that the shelves are empty 9 times out of 10, which seems reasonable. But this
    metric only tells us the raw performance of our algorithms; it doesn’t give us
    any insight into whether our system is really helping. It’s also no use for comparing
    against the current solution: it’s likely that a given employee can already tell
    with 100% accuracy whether a shelf is empty or full without any help from AI!'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这听起来很不错：90%的准确率意味着模型在识别货架为空时正确的次数是10次中的9次，这似乎是合理的。但这个指标只告诉我们算法的原始性能；它并没有给我们任何关于我们的系统是否真正有帮助的见解。它也无法与当前解决方案进行比较：很可能一个员工已经可以在没有任何AI帮助的情况下100%准确地判断货架是否为空或已满！
- en: Instead of focusing on technical metrics, try to take a step back and look at
    the bigger picture. The real goal of our system is to make it easy for retail
    staff to guarantee that the store’s shelves are always stocked, so that customers
    have enough products to buy. With this in mind, we can choose a more meaningful
    metric. A better metric may be the proportion of time that a given shelf is stocked
    with product.^([1](ch08.html#idm45988809698624)) As a goal, we might say that,
    on average, a given shelf should be stocked 90% of the time.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 与其专注于技术指标，不如退一步看看更大的图景。我们系统的真正目标是使零售员工能够保证商店的货架始终有货，以便顾客有足够的产品可以购买。有了这个目标，我们可以选择一个更有意义的指标。一个更好的指标可能是给定货架被产品供应的时间比例。^([1](ch08.html#idm45988809698624))作为目标，我们可以说，平均而言，给定货架应该有90%的时间是有货的。
- en: We can then measure our current system—the employees’ manual efforts—against
    our goal. While it’s easy for employees to determine whether a given shelf is
    empty, they may be extremely busy most of the day and not have time to check every
    corner of the store to make sure every shelf is stocked. This might lead to an
    average stocking rate of 70%.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将我们当前的系统——员工的手动工作——与我们的目标进行比较。虽然员工很容易确定某个货架是否为空，但他们大部分时间可能非常忙，没有时间检查商店的每个角落，确保每个货架都有货。这可能导致平均库存率为70%。
- en: We now know the baseline performance of our current solution (70%), plus our
    goal (90%). This 20% shortfall is what our AI solution needs to help recover.
    Knowledge of the current solution and the improvement that needs to be made can
    guide our product design and development process. For example, since we know that
    the problem results from employees being too busy to check the whole store, we
    might focus our design around making sure they are notified of empty shelves in
    a way that fits neatly into their other duties. Since we have a convenient metric
    for measuring success, we can deploy an initial system on some shelves and easily
    understand whether it is effective.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们知道我们当前解决方案的基准性能（70%），以及我们的目标（90%）。这20%的差距是我们的AI解决方案需要帮助弥补的部分。了解当前解决方案及其需要改进的方面可以指导我们的产品设计和开发过程。例如，由于我们知道问题源于员工忙于检查整个商店，我们可能会将设计重点放在确保他们能够在其他职责中轻松接收到空货架通知上。由于我们有一个方便的成功度量标准，我们可以在一些货架上部署一个初始系统，并轻松理解其有效性。
- en: There’s always the possibility that the insight provided by metrics helps us
    revisit our assumptions and decide to solve the problem in a different way, perhaps
    not including AI at all. For instance, maybe it ends up being cheaper to modify
    staffing schedules to solve the problem rather than implement an edge AI system
    in every store. Even though this is a nontechnological solution, it’s still a
    victory for the evaluation-first approach to development.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 总是有可能通过指标提供的洞见来重新审视我们的假设，并决定以不同的方式解决问题，也许完全不包括AI。例如，也许修改人员排班来解决问题最终可能更便宜，而不是在每个商店都实施边缘AI系统。尽管这是一个非技术性的解决方案，但它对于以评估优先的开发方法仍然是一个胜利。
- en: It’s important to remember that “you are what you measure”—meaning that the
    metrics you use to quantify your goals will have a huge influence on the direction
    you end up taking. If you measure the wrong thing, you’ll end up wasting time,
    money, and opportunity—and perhaps even make the situation worse. If you can identify
    the right thing to measure and improve, the power of iterative development means
    you can have an extraordinary impact.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 记住“你就是你所衡量的东西”是很重要的——这意味着您用来量化目标的指标将对您最终选择的方向产生巨大影响。如果您测量的是错误的事物，您将最终浪费时间、金钱和机会，甚至可能使情况变得更糟。如果您能够识别出需要衡量和改进的正确事物，迭代开发的力量意味着您可以产生非凡的影响。
- en: Technical goals
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 技术目标
- en: While systemic goals are vital in ensuring you are building the right thing,
    the technological aspects of your system need to have their own set of goals.
    Understanding the current and target performance of an AI algorithm, for example,
    will help you direct development efforts to the appropriate area.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管系统性目标对确保您正在构建正确的东西至关重要，但系统的技术方面也需要有其自己的一套目标。例如，了解AI算法当前和目标性能将帮助您将开发工作重点放在适当的领域。
- en: 'For example, imagine you are developing a keyword-spotting model for a smart
    home device. For keyword-spotting models, performance is often expressed as a
    combination of *false accept rate* and *false reject rate*: two numbers that together
    describe how likely the model is to make a mistake. To ensure a quality product,
    you may decide with your stakeholders and interaction designers to aim for a false
    accept rate of less than 5% and a false reject rate of less than 1%. These numbers
    will become your target.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，想象你正在为智能家居设备开发关键词识别模型。对于关键词识别模型，性能通常以*误接受率*和*误拒绝率*的组合来表达：这两个数字共同描述模型犯错的可能性。为了确保产品质量，您可以与利益相关者和交互设计师决定将误接受率控制在低于5%、误拒绝率控制在低于1%。这些数字将成为您的目标。
- en: The next task is to determine a mechanism for testing your work. Having a solid
    target provides no benefit unless you are able to measure your progress toward
    it. Often, testing relies on a test dataset—but there are always differences between
    performance on a test dataset, typically collected under ideal conditions, and
    real-world operation.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个任务是确定测试工作的机制。没有一种坚实的目标，提供任何好处，除非你能够测量你朝着这个目标的进展。通常，测试依赖于测试数据集，但在测试数据集上的表现与实际运行中始终存在差异，通常是在理想条件下收集的。
- en: 'The most reliable metrics come from systems that are deployed in production.
    At this stage, it’s valuable to determine which metrics will be available to you
    in the field. It can often be challenging to measure real-world performance, since
    real-world data doesn’t tend to come with labels. If you struggle to determine
    how your application’s performance can be measured in the field, it might be worth
    reconsidering your project: without metrics, you’ll have no way of knowing if
    it even works.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 最可靠的指标来自于部署在生产环境中的系统。在这个阶段，确定哪些指标将在实地中可用非常有价值。由于现实世界的数据往往不带标签，因此要衡量实际性能通常是具有挑战性的。如果您难以确定如何在现场测量应用程序的性能，重新考虑项目可能是值得的：没有指标，您将无法知道它是否有效。
- en: You may be using AI to improve an existing system, and in some cases you might
    already have some evaluation metrics that have been used to measure the current
    system. In either case, it’s a great idea to use the same metrics to evaluate
    your current system along with the proposed AI-enabled replacement. It’s always
    helpful to have a yardstick to measure against.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能正在利用人工智能改进现有系统，在某些情况下，您可能已经有一些用于衡量当前系统的评估指标。无论哪种情况，使用相同的指标来评估当前系统以及拟议的AI替代方案都是个好主意。拥有一个标杆来衡量总是很有帮助的。
- en: Given the iterative nature of AI development, you should also consider the amount
    of time you have available. Your goal should be to increase the system’s performance
    until you meet the minimum viable performance level that you have decided on.
    If progress stalls, you’ll need to decide whether to try a different approach—or
    to abort the project entirely. It might make sense to come up with performance
    milestones along the way to your target, so you can keep track of your progress
    and feel confident that the project is progressing.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于人工智能开发的迭代性质，您还应考虑您可用的时间。您的目标应该是提高系统的性能，直到达到您已确定的最低可行性能水平。如果进展停滞不前，您需要决定是尝试不同的方法，还是完全放弃项目。沿途制定性能里程碑可能是有意义的，这样您可以跟踪项目的进展，并确信项目在推进中。
- en: Values-based design goals
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基于价值观的设计目标
- en: To build a responsible application, you need to create design goals that represent
    the values you wish your solution to embody. For example, imagine you are building
    a medical diagnostics system. Medical experts may agree that it would be irresponsible
    to ship a solution with a diagnostic accuracy that falls below a certain threshold.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建一个负责任的应用程序，您需要创建代表您希望您的解决方案体现的价值观的设计目标。例如，假设您正在构建一个医学诊断系统。医学专家可能会认为，将具有低于某个阈值的诊断准确度的解决方案投放市场是不负责任的。
- en: You should therefore aim to determine—in agreement with stakeholders and domain
    experts—the minimum performance that is required for a responsible product. You
    can use this minimum performance to come up with a set of firm go/no-go criteria
    that can be used to gate the project’s release.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，您应当与利益相关者和领域专家一致确定产品的最低性能要求。您可以利用这一最低性能来制定一组明确的推进或放弃标准，用于控制项目的发布。
- en: There’s not always agreement on values, which is why it’s so important to work
    with a diverse and representative group of stakeholders. Since different groups
    of people often share different values, the values you agree on may be relevant
    only in a particular context—for example, the culture that a majority of your
    stakeholders belong to. If you can’t agree on the appropriate values, it may be
    a sign that your project carries ethical risk.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 对于价值观不总能达成一致，这也是为何与多元化和代表性强的利益相关者合作如此重要的原因。由于不同群体的人往往有不同的价值观，您达成的共识可能只在特定情境下适用，例如大多数利益相关者所属的文化。如果无法就适当的价值观达成一致，这可能表明您的项目存在伦理风险。
- en: During the development workflow, it’s crucial to measure and document the metrics
    that describe the system’s performance. This data will help you make a go/no-go
    decision. There’s often significant organizational and interpersonal pressure
    to push projects through to completion. Documenting metrics and having firm, written
    criteria for quality allow you to take the decision off your own shoulders and
    make it a part of the organization’s processes.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发工作流程中，测量和记录描述系统性能的指标至关重要。这些数据将帮助您做出推进或放弃的决策。推动项目完成往往面临着重大的组织和人际压力。记录指标并确定质量的明确书面标准，使您能够将决策脱离个人，纳入组织的流程之中。
- en: These criteria should extend to deployment in the field. It’s vital to be able
    to monitor performance and potentially terminate a deployment if the system is
    not performing adequately in the real world. Since the metrics available in the
    field are often more limited than those available during development, monitoring
    can be a challenge. There’ll be more on this topic in [Chapter 10](ch10.html#deploying_evaluating_and_supporting_edge_ai_applications).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这些标准应该延伸到现场部署。能够监控性能并在实际环境中如果系统表现不佳可能终止部署是至关重要的。由于现场可用的度量标准通常比开发阶段可用的更有限，监控可能是一个挑战。关于这个话题，[第10章](ch10.html#deploying_evaluating_and_supporting_edge_ai_applications)中会详细讨论。
- en: Goals for Long-Term Support
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 长期支持目标
- en: Another key part of your design process is your plan for long-term support.
    Most AI deployments require observation and maintenance once deployed in the field.
    Drift is inevitable and will lead to a reduction in performance over time. The
    application and hardware you choose should ideally have the ability to report
    back some metrics that help you understand the rate at which drift is occurring.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 设计过程中另一个关键部分是长期支持计划。大多数AI部署在现场部署后需要观察和维护。漂移是不可避免的，随时间推移会导致性能下降。您选择的应用程序和硬件理想情况下应该能够报告一些指标，以帮助您了解漂移发生的速率。
- en: This insight will help you tell when you need to collect more data and train
    a new model. Your design goals should include your goals for supporting the product
    in the long term. There’s much more on this topic in [Chapter 10](ch10.html#deploying_evaluating_and_supporting_edge_ai_applications).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这些见解将帮助您判断何时需要收集更多数据并训练新模型。您的设计目标应包括长期支持产品的目标。关于这个话题，[第10章](ch10.html#deploying_evaluating_and_supporting_edge_ai_applications)中有更多内容。
- en: Architectural Design
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构设计
- en: The architecture of an edge AI system is the way that its component parts fit
    together in order to create an effective solution. There are many possible ways
    to architect any given system. Each architecture will have its own unique trade-offs.
    The task of a systems architect is to analyze a situation and pick the architecture
    that will maximize the benefits of the technology.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI系统的架构是其组件部分如何组合以创建有效解决方案的方式。任何给定系统都有许多可能的架构方式。每种架构都有其独特的权衡。系统架构师的任务是分析情况并选择最大化技术优势的架构。
- en: The next section of this chapter will lay out the fundamentals of systems architecture
    for edge AI applications. Software and hardware architecture is a broad topic,
    so we’ll focus specifically on the parts that are relevant to edge AI. We’ll establish
    a solid foundation and provide a set of design patterns that can be applied in
    order to solve many different problems.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的下一节将阐述边缘AI应用系统架构的基础知识。软件和硬件架构是一个广泛的话题，因此我们将专注于与边缘AI相关的部分。我们将建立一个坚实的基础，并提供一套设计模式，可用于解决许多不同的问题。
- en: Hardware, Software, and Services
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 硬件、软件和服务
- en: 'Edge AI applications are made from three main components: hardware, software,
    and services.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘人工智能应用由三个主要组件组成：硬件、软件和服务。
- en: Hardware includes the edge devices themselves, with their processors, memory,
    and sensors—the great diversity of which we encountered back in [Chapter 3](ch03.html#chapter_technology_of_edge_ai).
    It also includes the way the devices are powered, and their means of communication
    with the wider world.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件包括边缘设备本身，其处理器、内存和传感器——我们在[第3章](ch03.html#chapter_technology_of_edge_ai)中已经遇到的大量多样性。它还包括设备的供电方式以及它们与更广泛世界的通信方式。
- en: Software is the magic that brings a system to life. It begins with the low-level
    drivers that allow software to interface with the hardware itself, including sensors,
    peripherals, and networking devices. It encompasses all the signal processing
    and AI algorithms that may run on a device. Most importantly, it includes all
    of the application logic that interprets the signals output by AI algorithms and
    determines how to act upon them.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 软件是赋予系统生命的魔力。它始于允许软件与硬件本身（包括传感器、外围设备和网络设备）进行接口的低级驱动程序。它涵盖了所有可能在设备上运行的信号处理和AI算法。最重要的是，它包括解释由AI算法输出的信号并确定如何对其进行操作的所有应用逻辑。
- en: 'Services are the external systems that an edge AI system can interface. They
    might include communications networks, wireless systems, IoT management platforms,
    web APIs, and cloud applications: anything that lives externally to the edge system
    and communicates via some channel. This could be your own infrastructure, or it
    might be provided by a third party.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 服务是边缘AI系统可以接口的外部系统。它们可能包括通信网络、无线系统、物联网管理平台、Web API和云应用：任何位于边缘系统外部并通过某种渠道进行通信的东西。这可能是您自己的基础设施，也可能由第三方提供。
- en: Effective edge AI architecture involves taking these three components and combining
    them in creative ways that provide the optimal balance of trade-offs for a given
    situation. It requires a solid understanding of the problem, the constraints,
    and the domain. This is why it’s important to conduct a thorough exploration of
    the entire problem before embarking on this stage of the design process.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 有效的边缘AI架构涉及将这三个组件以创造性方式结合起来，以在给定情况下提供最佳的权衡平衡。这需要对问题、约束和领域有深入的理解。这就是为什么在设计过程的这个阶段开始之前进行全面探索非常重要的原因。
- en: Your understanding of a situation will inform your use of hardware, software,
    and services. For example, a setting with minimal connectivity may force you to
    focus on highly capable hardware and do without some of the benefits of services.
    A tightly constrained brownfield (see [“Greenfield and Brownfield Projects”](ch02.html#brownfield))
    hardware platform might encourage you to be more creative with your use of software.
    The need for sophisticated software and large models might result in a significant
    role for cloud AI services in your particular application.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 您对情况的理解将影响您对硬件、软件和服务的使用。例如，连接性较差的环境可能会迫使您专注于高性能硬件，并且无法享受某些服务的好处。紧密约束的旧设施（参见[“绿地和旧地项目”](ch02.html#brownfield)）硬件平台可能会鼓励您在软件使用上更具创造性。对复杂软件和大型模型的需求可能会导致云AI服务在您特定应用中发挥重要作用。
- en: Some important concepts in edge AI architecture that we have already encountered
    include heterogeneous compute (see [“Heterogeneous Compute”](ch03.html#heterogeneous_compute))
    and multi-device architectures (see [“Multi-Device Architectures”](ch03.html#multi_device_architectures)).
    These are the key ingredients for some of the most common architectures we’ll
    encounter.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在边缘AI架构中一些重要的概念我们已经遇到，包括异构计算（参见[“异构计算”](ch03.html#heterogeneous_compute)）和多设备架构（参见[“多设备架构”](ch03.html#multi_device_architectures)）。这些是我们将遇到的一些最常见架构的关键组成部分。
- en: Basic Application Architectures
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本应用架构
- en: Simplicity is always a good choice, and you should always start with the least
    complex architecture you can get away with. [Figure 8-1](#basic_application_architecture)
    shows the structure of a typical edge AI application.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 简单总是一个不错的选择，你应该始终从能够应付的最简单架构开始。[图 8-1](#basic_application_architecture) 显示了典型边缘AI应用的结构。
- en: The core of the architecture is the *application loop*. This is a series of
    repeating steps that capture and process signals, run AI algorithms, interpret
    their output, and use the results to make decisions and trigger actions. It’s
    a loop because the steps run over and over again as the device ingests a constant
    stream of sensor data.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 架构的核心是*应用循环*。这是一系列重复步骤，用于捕捉和处理信号，运行AI算法，解释其输出，并使用结果做出决策和触发操作。这是一个循环，因为这些步骤会反复运行，设备会不断地接收传感器数据流。
- en: '![A block diagram showing the various high-level components of an edge AI application.](assets/aiae_0801.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![显示边缘AI应用的各种高级组件的块图](assets/aiae_0801.png)'
- en: Figure 8-1\. Architecture of an edge AI application
  id: totrans-117
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-1\. 边缘AI应用架构
- en: The application loop is supported by the *device firmware or OS* section.^([2](ch08.html#idm45988809636928))
    These components provide a layer of abstraction between the hardware and the software.
    They typically provide convenient APIs that the application loop can use to control
    the hardware. Typical tasks involve reading data from sensors, sending and receiving
    communications, and controlling attached devices (such as lights, speakers, and
    actuators).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 应用循环由*设备固件或操作系统*部分支持。^([2](ch08.html#idm45988809636928)) 这些组件在硬件和软件之间提供了一层抽象。它们通常提供便捷的API，应用循环可以用来控制硬件。典型任务包括从传感器读取数据，发送和接收通信，以及控制连接的设备（如灯光、扬声器和执行器）。
- en: As we saw in [“Heterogeneous Compute”](ch03.html#heterogeneous_compute), many
    devices have multiple processors. In our diagram, the *Hardware APIs* block represents
    the abstraction layer that allows computation to be performed in the processor
    of choice. For example, a deep learning model’s operations may be computed on
    a separate neural network core for increased speed and efficiency.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在 [“异构计算”](ch03.html#heterogeneous_compute) 中看到的那样，许多设备具有多个处理器。在我们的图表中，*硬件API*
    块表示允许在所选处理器上执行计算的抽象层。例如，深度学习模型的操作可以在单独的神经网络核心上进行，以提高速度和效率。
- en: Note
  id: totrans-120
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Before we move on, it may also be helpful to flip back to [“Edge AI Hardware
    Architecture”](ch03.html#edge_ai_hardware_architecture) for a reminder of the
    way that edge AI hardware is structured.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，回顾一下 [“边缘AI硬件架构”](ch03.html#edge_ai_hardware_architecture) 也可能是有帮助的，以便记住边缘AI硬件的结构方式。
- en: Basic flow
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基本流程
- en: In the most basic applications, there’s a single pipeline of software, all running
    on one device, that takes sensor data, processes it, and makes decisions. This
    is shown in [Figure 8-2](#basic_flow).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在最基本的应用中，有一个软件流水线，全部运行在一个设备上，接收传感器数据，进行处理并做出决策。这在 [图 8-2](#basic_flow) 中有所展示。
- en: '![A block diagram showing the flow of a basic edge AI application.](assets/aiae_0802.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![展示基本边缘AI应用流程的块图。](assets/aiae_0802.png)'
- en: Figure 8-2\. The basic edge AI application flow
  id: totrans-125
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-2\. 基本边缘AI应用流程
- en: Many successful applications use this flow, and it should be your starting point
    when developing a software architecture. Often, the AI algorithm in the flow is
    a single machine learning model. For example, a smart security camera might use
    this flow—with a vision model trained to detect people—as a trigger to send an
    alert. [Figure 8-3](#basic_flow_annotated) shows the same diagram with the real-world
    steps overlaid.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 许多成功的应用程序使用这种流程，这应该是您开发软件架构时的起点。通常，流程中的AI算法是一个单独的机器学习模型。例如，智能安全摄像头可能使用这种流程——使用训练用于检测人员的视觉模型——作为触发器发送警报。[图 8-3](#basic_flow_annotated)
    显示了带有现实世界步骤叠加的相同图表。
- en: '![A block diagram showing the flow of a basic edge AI application, with annotations
    specific to a smart security camera design.](assets/aiae_0803.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![展示基本边缘AI应用流程的块图，带有特定于智能安全摄像机设计的注释。](assets/aiae_0803.png)'
- en: Figure 8-3\. The basic flow applied to a smart camera design
  id: totrans-128
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-3\. 应用于智能摄像头设计的基本流程
- en: Ensemble flow
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 集成流程
- en: Another common approach is to use an ensemble of algorithms or models, as described
    in [“Combining algorithms”](ch04.html#combining_algorithms). In that case, the
    same sensor data is fed into multiple models that produce the same type of output,
    and their results are combined. It may look something like [Figure 8-4](#ensemble_flow).
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种常见的方法是使用一组算法或模型，如 [“组合算法”](ch04.html#combining_algorithms) 中所述。在这种情况下，相同的传感器数据被输入到多个模型中，这些模型生成相同类型的输出，并将它们的结果组合起来。可能看起来像
    [图 8-4](#ensemble_flow)。
- en: '![A block diagram showing the flow of an edge AI application with an ensemble
    architecture.](assets/aiae_0804.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![展示具有集成架构的边缘AI应用流程的块图。](assets/aiae_0804.png)'
- en: Figure 8-4\. An ensemble flow
  id: totrans-132
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-4\. 一个集成流程
- en: In an ensemble, the algorithms usually all produce the same type of output.
    For example, you might create an ensemble of three different types of image classifiers
    that are each trained to predict whether a person is present in an image. By combining
    the outputs of three different types of algorithms, you average the benefits and
    drawbacks of each, hopefully leading to an output that is less biased than any
    individual algorithm would be.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个集成系统中，通常所有算法都产生相同类型的输出。例如，您可以创建三种不同类型的图像分类器的集成系统，每种分类器都经过训练以预测图像中是否存在人物。通过组合三种不同类型算法的输出，您可以平均每种算法的优缺点，希望得到比任何单个算法都更少偏见的输出。
- en: Parallel flow
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 并行流程
- en: It’s also possible to combine algorithms that perform different functions. For
    example, you might combine a classification model with an anomaly detection model.
    The output of the anomaly detection model is used by the application to understand
    when the input data is out of distribution and therefore the classifier cannot
    be trusted.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以组合执行不同功能的算法。例如，您可以将分类模型与异常检测模型结合起来。异常检测模型的输出被应用程序用于理解输入数据何时超出分布范围，因此分类器不能信任。
- en: '![A block diagram showing the flow of an edge AI application with a parallel
    architecture.](assets/aiae_0805.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![展示具有并行架构的边缘AI应用流程的块图。](assets/aiae_0805.png)'
- en: Figure 8-5\. A parallel flow
  id: totrans-137
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-5\. 并行流程
- en: In a parallel flow ([Figure 8-5](#parallel_flow)), the models’ output may be
    combined either in the postprocessing step or in the business logic. For example,
    if the output of one model is used to moderate the output of another model (like
    in our classification and anomaly detection example) this moderation may be done
    in the postprocessing step. If the output of multiple models is used to drive
    a business logic decision, the models’ outputs will be brought together there.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在并行流程中（参见[图 8-5](#parallel_flow)），模型的输出可以在后处理步骤或业务逻辑中合并。例如，如果一个模型的输出用于调节另一个模型的输出（例如我们的分类和异常检测示例中），这种调节可能在后处理步骤中完成。如果多个模型的输出用于驱动业务逻辑决策，则模型的输出将在那里汇集。
- en: Parallel models doesn’t necessarily mean parallel processing (as in multitasking).
    Many embedded processors are not capable of more than a single thread of computation,
    so you may increase the overall latency and energy use of your application with
    every model you add to the pipeline.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 并行模型并不一定意味着并行处理（如多任务处理）。许多嵌入式处理器无法进行多线程计算，因此每添加一个模型到管道中可能会增加应用程序的总体延迟和能耗。
- en: Series flow
  id: totrans-140
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 串行流程
- en: It can also be useful to run models in series. In this flow, as shown in [Figure 8-6](#series_flow),
    the output of one algorithm is fed into another, with or without postprocessing.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在串行运行模型也可以非常有用。如在[图 8-6](#series_flow)中所示的流程中，一个算法的输出被馈送到另一个算法，无论是否经过后处理。
- en: '![A block diagram showing the flow of an edge AI application with a series
    architecture.](assets/aiae_0806.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![显示边缘AI应用程序流程的块图。](assets/aiae_0806.png)'
- en: Figure 8-6\. A series flow
  id: totrans-143
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-6\. 串行流程
- en: Series flows are handy when you want to use one model to extract features from
    a raw input, then use another model to understand changes in the features. For
    example, you might use a pose estimation model to identify the position of a person’s
    arms and legs from a photograph, then pass these positions into a classification
    model to determine which yoga pose they are doing.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想要使用一个模型从原始输入中提取特征，然后使用另一个模型理解特征变化时，串行流程非常方便。例如，您可以使用姿势估计模型从照片中识别人的手臂和腿的位置，然后将这些位置传递给分类模型以确定他们正在做哪种瑜伽姿势。
- en: Cascading flow
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 级联流程
- en: Another clever way to use algorithms in series is within a cascade. A cascading
    flow is shown in [Figure 8-7](#cascade_diagram).
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种巧妙地使用算法的方法是在级联内部使用。级联流程如[图 8-7](#cascade_diagram)所示。
- en: '![A block diagram showing the flow of an edge AI application with a cascading
    architecture.](assets/aiae_0807.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![显示具有级联架构的边缘AI应用程序流程的块图。](assets/aiae_0807.png)'
- en: Figure 8-7\. A cascading flow
  id: totrans-148
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-7\. 级联流程
- en: Cascading flows are designed to minimize the cost of running inference in both
    latency and energy use. For example, imagine an always-on keyword-spotting system
    in a battery-powered device. The model required for keyword spotting might be
    relatively large and complex, meaning that running it all the time would quickly
    drain the battery.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 级联流程旨在最小化推断运行的延迟和能耗成本。例如，想象一个电池供电设备中的始终开启的关键词检测系统。用于关键词检测的模型可能相对较大和复杂，这意味着始终运行它会迅速耗尽电池。
- en: Instead, we can run a smaller, simpler model designed merely to detect speech.
    This is the first layer of our cascade. When speech is detected, the input is
    passed to the second layer of the cascade, which is the full keyword-spotting
    model. Since the full keyword-spotting model ends up being run less often, energy
    is saved.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我们可以运行一个更小、更简单的模型，仅用于检测语音。这是我们级联的第一层。检测到语音后，输入会传递到级联的第二层，即完整的关键词检测模型。由于完整的关键词检测模型运行较少，能量得以节省。
- en: A cascade can have as many layers as necessary. Depending on the application,
    each layer in the cascade may also have its own independent signal processing
    algorithm. In some cases, reaching a certain stage of a cascade may even trigger
    the capture of data from another source—for example, a higher-quality microphone
    that provides better signal but uses more energy.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 级联可以具有任意数量的层。根据应用程序的不同，级联中的每一层可能还具有其独立的信号处理算法。在某些情况下，达到级联的某个阶段甚至可能触发从另一个源获取数据，例如提供更好信号但使用更多能量的高质量麦克风。
- en: It often makes sense to tune the earlier models in the cascade for high recall
    (see [“Precision and recall”](ch10.html#precision_and_recall)), meaning it will
    err on the optimistic side when deciding whether something is a potential match.
    This configuration will still save energy versus a single large model, but it’ll
    reduce the risk of the less accurate earlier models throwing away valid inputs.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，调整级联中较早的模型以获得高召回率是有意义的（见[“精确度和召回率”](ch10.html#precision_and_recall)），这意味着在决定某物是否潜在匹配时会保守一些。这种配置仍将节约能源，相比于单一大模型，但会降低早期模型的准确性风险，从而避免丢弃有效输入。
- en: Sensor fusion flow
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 传感器融合流
- en: All of the architectures we’ve seen so far work with a single input. In a sensor
    fusion flow, as shown in [Figure 8-8](#sensor_fusion_flow), inputs from multiple
    sensors are fed into the same AI algorithm.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们见过的所有架构都是处理单一输入的。在传感器融合流程中，正如在[图 8-8](#sensor_fusion_flow)中所示的那样，来自多个传感器的输入被馈送到同一个AI算法中。
- en: '![A block diagram showing the flow of an edge AI application performing sensor
    fusion.](assets/aiae_0808.png)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![显示边缘AI应用执行传感器融合流程的块图。](assets/aiae_0808.png)'
- en: Figure 8-8\. A sensor fusion flow
  id: totrans-156
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-8\. 传感器融合流
- en: If different types of sensors are used, each sensor typically requires its own
    form of signal processing to create features for the AI algorithm to use. That
    said, there are also ways to perform sensor fusion with pure signal processing.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用不同类型的传感器，则每种传感器通常需要其自己的信号处理形式，以创建AI算法使用的特征。尽管如此，也有纯信号处理的传感器融合方法。
- en: A classic example of sensor fusion is in sleep monitoring wearables, where signals
    from heart rate, temperature, and motion sensors are fused in order to accurately
    predict the user’s sleep stage. Sensor fusion can also be combined with any of
    the other flows we’ve seen in this chapter.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器融合的一个经典示例是在睡眠监测可穿戴设备中，通过心率、体温和运动传感器的信号融合，以精确预测用户的睡眠阶段。传感器融合还可以与本章中见过的任何其他流程结合使用。
- en: Complex Application Architectures and Design Patterns
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 复杂应用架构和设计模式
- en: Basic application architectures can be combined with variations in hardware
    architecture in order to produce more complex systems that provide valuable benefits.
    These tried and true design patterns can be applied to many different projects.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 基本应用架构可以与硬件架构的变化结合，以产生提供有价值好处的更复杂系统。这些经过验证的设计模式可以应用于许多不同的项目。
- en: Heterogeneous cascade
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 异构级联
- en: In a heterogeneous hardware architecture (see [“Heterogeneous Compute”](ch03.html#heterogeneous_compute)),
    multiple processors or coprocessors are available within a single device. For
    example, a single device may feature both an energy efficient midrange MCU, plus
    a more capable but higher-power high-end MCU.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在异构硬件架构中（参见[“异构计算”](ch03.html#heterogeneous_compute)），单个设备内可用多个处理器或协处理器。例如，单个设备可以同时具备节能的中端MCU和更强大但功耗更高的高端MCU。
- en: This type of hardware can be combined with software written in a cascading flow
    ([Figure 8-9](#heterogeneous_cascade)) in order to implement a heterogeneous cascade.
    The earlier layers of the cascade run on the lower-end processor, amplifying the
    savings in energy. The latter layers, involving more complex algorithms, run on
    the higher-end processor. At any given moment, only a single processor is powered
    up and consuming significant energy.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这种类型的硬件可以与级联流程中编写的软件结合使用（见[图 8-9](#heterogeneous_cascade)），以实现异构级联。级联的前几层在低端处理器上运行，从而增强节能效果。后续层涉及更复杂的算法，因此在高端处理器上运行。在任何给定时刻，只有一个处理器处于开启状态并消耗大量能量。
- en: Heterogeneous hardware increasingly includes accelerators designed to run deep
    learning models efficiently. These can be a great fit for running stages of cascades.
    This approach is used in a lot of keyword-spotting applications.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 不同类型的硬件越来越多地包括为高效运行深度学习模型而设计的加速器。这些硬件可以非常适合运行级联的各个阶段。这种方法在许多关键词识别应用中被使用。
- en: '![A block diagram showing a heterogeneous cascading architecture.](assets/aiae_0809.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![显示异构级联架构的块图。](assets/aiae_0809.png)'
- en: Figure 8-9\. Heterogeneous cascade
  id: totrans-166
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-9\. 异构级联
- en: Multi-device cascade
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 多设备级联
- en: There’s nothing to stop a cascade from spanning multiple devices, as shown in
    [Figure 8-10](#multi_device_cascade). For example, a smart sensor may inspect
    data with a simple machine learning model. If a certain state is detected, it
    might wake up a more powerful gateway device that can analyze the data more thoroughly.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 如[图 8-10](#multi_device_cascade)所示，级联可以跨越多个设备。例如，智能传感器可能会使用简单的机器学习模型检查数据。如果检测到特定状态，它可能会唤醒一个更强大的网关设备，该设备可以更彻底地分析数据。
- en: '![A block diagram showing a multi-device cascade architecture.](assets/aiae_0810.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![显示多设备级联架构的框图。](assets/aiae_0810.png)'
- en: Figure 8-10\. Multi-device cascade
  id: totrans-170
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-10\. 多设备级联
- en: The second-stage device can either use data transmitted by the first or capture
    new data with its own sensors. The devices might be physically distinct, like
    a smart sensor and a gateway device. They may also be combined as separate PCBs
    within the same physical product.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 第二阶段设备可以使用第一阶段传输的数据，也可以使用自己的传感器捕获新数据。这些设备可能在物理上是不同的，如智能传感器和网关设备。它们也可以作为同一物理产品内的独立PCB组合在一起。
- en: In some cases, entirely separate products may be arranged in a cascade. For
    example, a cheap off-the-shelf camera trap (which snaps a photo after detecting
    motion using an infrared sensor) can act as the first stage of a cascade, subsequently
    waking up a powerful SoC that is attached to the same storage device and can choose
    whether to keep or delete the photo depending on its contents.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，完全分开的产品可以组成级联。例如，廉价的现成摄像陷阱（使用红外传感器检测到运动后拍摄照片）可以作为级联的第一阶段，随后唤醒与相同存储设备连接的强大SoC，根据其内容选择保留或删除照片。
- en: Cascade to the cloud
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 云端级联
- en: Where bandwidth is less of an issue, cascades can span both a device and the
    cloud. This is a typical pattern in smart speakers that feature digital assistants,
    which use an always-on keyword-spotting model to detect keywords on-device with
    as low latency as possible. Once a keyword is detected, they stream the subsequent
    audio directly to the cloud, where a large and sophisticated model (too big to
    be deployed to the edge device) transcribes and interprets the user’s speech.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在带宽不是问题的地方，级联可以跨越设备和云端。这是智能音箱中的典型模式，配备了数字助理，使用始终开启的关键词检测模型尽可能低延迟地在设备上检测关键词。一旦检测到关键词，它们将后续音频直接流向云端，在那里，一个庞大而复杂的模型（过大以至于无法部署到边缘设备）转录和解释用户的语音。
- en: In [Figure 8-11](#cascade_to_the_cloud), a sophisticated four-stage cascade
    is shown that makes use of multiple on-device models along with cloud compute.
    It may sound complicated, but this is similar to the flow used by modern mobile
    phones.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图 8-11](#cascade_to_the_cloud)中展示了一个复杂的四阶级级联，利用了多个设备上的模型以及云计算。听起来可能有些复杂，但这与现代手机使用的流程相似。
- en: 'The first three stages occur on-device, across two different processors: a
    low-power always-on processor and a deep learning accelerator. When speech is
    detected by a model running on the low-power processor, a more powerful processor
    is woken up and used to look for the keyword. If the keyword is detected, an on-device
    transcription model attempts to turn the subsequent audio into text. Once transcribed,
    the text is sent to the cloud, where a large natural language processing model
    is used to determine what it means and how to respond.'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 前三个阶段发生在设备上，跨越两个不同的处理器：低功耗始终开启处理器和深度学习加速器。当低功耗处理器上的模型检测到语音时，会唤醒更强大的处理器，用于寻找关键词。如果检测到关键词，设备上的转录模型会尝试将后续音频转换为文本。一旦转录完成，文本被发送到云端，在那里使用大型自然语言处理模型确定其含义并作出响应。
- en: The big trade-offs here are in energy, bandwidth, and privacy—as well as the
    need to provide long-term maintenance of a cloud system. In exchange, we get to
    use models that are too big to fit on-device, or that we don’t want to deploy
    locally for security reasons. It’s important to make sure these payoffs are worth
    it, since as a trade we’re giving up most of the benefits of edge AI.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的重要折衷在于能量、带宽和隐私，以及云系统的长期维护需求。作为交换，我们可以使用在设备上无法放置的或出于安全考虑不想本地部署的过大模型。重要的是确保这些回报是值得的，因为作为交换，我们正在放弃大部分边缘AI的优势。
- en: '![A block diagram showing a four stage cascade architecture in the context
    of keyword spotting.](assets/aiae_0811.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![在关键词检测环境中显示四阶段级联架构的框图。](assets/aiae_0811.png)'
- en: Figure 8-11\. Cascade to the cloud for keyword spotting
  id: totrans-179
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 8-11\. 用于关键词检测的云端级联
- en: Intelligent gateway
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 智能网关
- en: Sometimes it may make sense for the AI logic to live *near* the edge—but not
    at the actual leaf nodes of the network. For example, a network of IoT sensors
    may collect many different types of data about the operation of a factory. No
    single sensor has access to all the data—but they all send it back to a gateway
    device.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，AI逻辑可能位于*边缘*附近，但不是在网络的实际叶节点上。例如，物联网传感器网络可以收集有关工厂运行的许多不同类型的数据。没有一个单独的传感器可以访问所有数据，但它们都将其发送回网关设备。
- en: By running edge AI algorithms on the gateway device, all of the data can be
    analyzed together, which may result in more insight into the operation of the
    overall system. By doing the processing at the gateway, the sensors can remain
    small, cheap, and power efficient. All they need to do is capture and forward
    data; the gateway can take care of the intelligence.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在网关设备上运行边缘AI算法，可以一起分析所有数据，这可能会更深入地了解整个系统的操作。通过在网关进行处理，传感器可以保持小巧、廉价和高效。它们只需捕获和转发数据；网关可以处理智能功能。
- en: Human-in-the-loop
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 人在回路
- en: 'In some contexts, it’s not necessarily safe to allow AI algorithms to make
    decisions unchecked. This is typically where the risk of a bad decision could
    be extremely serious. Here are a few stark examples:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，允许AI算法无约束地做出决策可能并不一定安全。这通常是指糟糕决策风险极其严重的情况。以下是一些鲜明的例子：
- en: Medical applications, where an incorrect diagnosis or badly administered procedure
    could endanger life
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 医疗应用，一个错误的诊断或糟糕的操作程序可能会危及生命
- en: Large machinery, such as self-driving cars or factory equipment, that has the
    potential to harm
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有潜力造成伤害的大型机械，如自动驾驶汽车或工厂设备
- en: Security and defense applications, where deliberate harm may result
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全和国防应用，可能导致故意伤害的地方
- en: There are also many more subtle examples. For instance, if AI is used to enforce
    the rules of a sport—maybe analyzing video footage to detect foul actions—bias
    in a model might lead to unfair treatment of participants.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 也有许多更微妙的例子。例如，如果AI用于执行体育规则——也许分析视频镜头以检测犯规行为——模型中的偏差可能导致对参与者的不公平对待。
- en: These types of challenges mean that it’s often necessary to design a system
    to operate with human oversight. This can be implemented in different ways. In
    one model of human-in-the-loop architecture, a human is directly involved with
    every decision. For example, a medical diagnosis device might indicate that a
    patient has a certain condition, but a doctor is still required to interpret the
    information and make the final call using their own judgment.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 这些挑战意味着通常需要设计一个需要人类监督操作的系统。这可以通过不同的方式实现。在一种人在回路架构模型中，人直接参与每一个决策。例如，医疗诊断设备可能会指示患者患有某种疾病，但仍需要医生解释信息并根据自己的判断作出最终决定。
- en: In another model, the human acts as a passive observer unless they see fit to
    intervene. For example, while a self-driving car may be free to move by itself,
    its driver is still required to pay attention to the road and be ready to take
    over driving at a moment’s notice. In this case, the self-driving car typically
    uses AI systems to detect when the driver is not paying attention to prevent them
    from forgoing their obligation. It’s worth noting that there’s significant debate
    around whether this model is effective. Humans tend to lose focus if they don’t
    need to interact, which may compromise their ability to intervene.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一种模型中，人类作为被动观察者，除非他们认为有必要干预。例如，虽然自动驾驶汽车可以自由移动，但驾驶员仍需注意路况，并准备随时接管驾驶。在这种情况下，自动驾驶汽车通常使用AI系统来检测驾驶员未注意的情况，以防止其忽视责任。值得注意的是，围绕这种模型是否有效存在重大争议。如果不需要互动，人类往往会失去注意力，这可能会损害他们干预的能力。
- en: In the third model, there is no direct human supervision—but samples of the
    algorithmic decisions are sent to human auditors for inspection. The overall process
    is monitored for reliability, but nobody is able to intervene live during a given
    activity. This approach is important in the long-term monitoring of applications
    and will be covered further in [Chapter 10](ch10.html#deploying_evaluating_and_supporting_edge_ai_applications).
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在第三种模型中，没有直接的人类监督，但算法决策的样本会发送给人类审计员进行检查。整个过程会被监控以确保可靠性，但在特定活动期间无人能够实时干预。这种方法在应用的长期监控中至关重要，并且将在[第10章](ch10.html#deploying_evaluating_and_supporting_edge_ai_applications)进一步讨论。
- en: Working with Design Patterns
  id: totrans-192
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用设计模式进行工作
- en: We’ve now encountered a wide range of design patterns that should provide some
    great starting points for your own projects. Of course, real-world situations
    do not always map neatly onto textbook patterns. Don’t be afraid to adjust these
    ideas to fit the needs of your individual situation.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经遇到了各种设计模式，它们应该为你的项目提供一些很好的起点。当然，现实情况并不总是能完美地映射到教科书模式上。不要害怕调整这些想法，以适应你个人情况的需求。
- en: 'As we’ve learned, the edge AI workflow is innately an iterative one. It’s helpful
    to take an iterative approach to using design patterns, too. Here’s a step-by-step
    workflow you can follow:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所学到的，边缘人工智能工作流本质上是迭代的。使用设计模式时采用迭代方法是有帮助的。以下是你可以遵循的逐步工作流程：
- en: Make sure you’ve spent some time exploring your dataset and understanding the
    types of algorithms you may need to use.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你花了一些时间探索你的数据集，并理解你可能需要使用的算法类型。
- en: 'Begin with the simplest design pattern that you can: this will usually be [Figure 8-2](#basic_flow),
    especially if you are working on a single device.'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从你能使用的最简单的设计模式开始：通常会是[图 8-2](#basic_flow)，特别是在处理单一设备时。
- en: Try to map your problem onto this pattern; write up some documents to describe
    it, including diagrams, and list the pros and cons.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试将你的问题映射到这个模式上；撰写一些文件来描述它，包括图表，并列出其优缺点。
- en: Begin iterating through the development process, keeping the chosen design pattern
    in mind.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在开发过程中开始迭代，牢记选择的设计模式。
- en: If it looks like you might need something more sophisticated, jump to the next
    simplest pattern that you can get away with.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果看起来可能需要更复杂的东西，请跳到你能接受的下一个最简单的模式。
- en: Continue iterating and adjusting until you’ve reached something that works.
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 继续迭代和调整，直到找到一个可行的方案。
- en: Don’t be tempted to begin with a more complex design pattern than you know you
    need. The extra complexity will be a drag on your development process and will
    create additional constraints that force you down a certain path. All of this
    creates risk, and the number one way to be successful in AI projects is to keep
    risk to a minimum.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 不要被诱导去选择一个比你所需更复杂的设计模式。额外的复杂性会拖慢你的开发过程，并创建额外的约束，迫使你朝某个特定路径前进。所有这些都会带来风险，而在人工智能项目中成功的最重要方法是将风险降到最低。
- en: Accounting for Choices in Design
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计选择的会计处理
- en: The designs we come up with in response to a particular problem are shaped by
    our individual perceptions, which means they may subtly encode our own (or our
    teams') biases. In addition, architectures themselves have innate bias. An architecture
    represents a set of compromises that direct the results of a solution one way
    or another. It’s not necessarily intentional; it’s what happens when we pick one
    particular option out of many.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 我们针对特定问题提出的设计受我们个人看法的影响，这意味着它们可能会微妙地编码我们自己（或我们团队的）偏见。此外，架构本身具有固有的偏见。架构代表了一系列妥协，这些妥协指导了解决方案的结果朝某个方向发展。这并不一定是故意的；当我们从众多选项中选择一个特定的选项时，这就会发生。
- en: 'There are three main categories of bias that have their roots in the design
    process (versus coming from the dataset). They are as follows:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种主要类别的偏见，它们源于设计过程（而非数据集）：
- en: Product bias
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 产品偏见
- en: A product represents a particular solution to a problem. By its nature, it represents
    an opinion on the way a problem should be solved. It embodies the limitations
    and trade-offs that come with that opinion. All of this is unavoidable, but it’s
    important we acknowledge that it results in bias.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 产品代表对问题的特定解决方案。根据其性质，它代表了对问题解决方式的看法。它体现了随着这种看法而来的限制和权衡。所有这些都是不可避免的，但重要的是我们承认这导致了偏见。
- en: For example, imagine we are building a smart home thermostat that can predict
    the perfect moment to adjust temperature levels based on user activity. We might
    need to choose between a basic architecture, with a single device that contains
    high-resolution sensors and a powerful processor, or an intelligent gateway architecture,
    where cheap, low-resolution remote sensors are installed in each room and communicate
    wirelessly with a central hub that performs the processing.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，想象我们正在构建一个智能家居恒温器，它可以根据用户活动预测调整温度的最佳时机。我们可能需要在一个基本架构和一个智能网关架构之间做选择：基本架构包含一个装有高分辨率传感器和强大处理器的单一设备，或者智能网关架构，其中每个房间安装了廉价的低分辨率远程传感器，并通过无线与执行处理的中央枢纽通信。
- en: These trade-offs direct our product toward a preferred solution. With limited
    visibility but superior sensors, the system consisting of a single device is likely
    to work better in open-plan houses or small apartments. The system with remote
    sensors may work better in houses that have many different rooms.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 这些权衡指导我们的产品朝着首选解决方案发展。具有有限视野但传感器优越的系统，很可能在开放式房屋或小公寓中效果更好。具有远程传感器的系统可能在有多个不同房间的房屋中效果更好。
- en: Since every product design is created for a specific purpose, it’s important
    to pick the design that best fits the problem you are trying to solve. If you’re
    designing a smart home product, you may need to conduct some research to understand
    the styles of homes your target customers live in. This can inform your design
    process and help you select the appropriate architecture.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 由于每个产品设计都是为特定目的创建的，因此选择最适合解决您正在解决的问题的设计非常重要。如果您正在设计智能家居产品，您可能需要进行一些研究，了解您的目标客户所住房屋的风格。这可以指导您的设计过程，并帮助您选择合适的架构。
- en: Algorithm bias
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 算法偏见
- en: Algorithms themselves have innate bias. As with architectures, the design of
    every AI algorithm embodies a specific solution to a broad problem. Mathematicians
    and computer scientists try hard to find algorithms that work generally, across
    many different types of input, but in reality each type of algorithm has underlying
    assumptions that fit some problems better than others.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 算法本身具有固有偏见。与架构一样，每个AI算法的设计体现了对广泛问题的特定解决方案。数学家和计算机科学家努力寻找通用工作的算法，适用于许多不同类型的输入，但实际上每种算法都有适合某些问题而不适合其他问题的基本假设。
- en: For example, we might be attempting to design an agricultural product that uses
    object detection to count animals on a farm. There are many different styles of
    object detection algorithm available to choose from. One such style is the single-shot
    detector (SSD),^([3](ch08.html#idm45988809433248)) which uses a deep learning
    model to predict precise bounding boxes around the items of interest. Another
    style is Faster Objects, More Objects (FOMO),^([4](ch08.html#idm45988809430352))
    which uses a simpler, faster approach that identifies the centers of objects but
    does not draw a bounding box.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可能正在尝试设计一种农业产品，该产品使用目标检测来计算农场中的动物数量。有许多不同风格的目标检测算法可供选择。其中一种风格是单次检测器（SSD），^([3](ch08.html#idm45988809433248))
    它使用深度学习模型来预测感兴趣物品周围的精确边界框。另一种风格是更快对象，更多对象（FOMO），^([4](ch08.html#idm45988809430352))
    它使用更简单、更快速的方法来识别对象的中心，但不会绘制边界框。
- en: An effective product could be built with either algorithm. That said, different
    algorithms make different choices, and these will be noticeable in the product’s
    performance. For example, due to the way their loss function is constructed, SSD
    models are better at identifying larger objects than smaller objects. In production,
    this might result in a product that works better when placed in smaller fields,
    where the animals are closer and take up more of the image frame. In contrast,
    FOMO is most effective when the centers of objects are not too close together.
    This means it may work best when animals are more spread out.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用任何算法构建有效的产品。尽管如此，不同的算法会做出不同的选择，这些选择将在产品的性能中显而易见。例如，由于它们的损失函数构造方式，SSD模型更擅长识别较大的物体而不是较小的物体。在生产中，这可能导致产品在放置在较小的田地中效果更好，因为动物更接近并占据更多的图像框架。相比之下，当对象的中心不太靠近时，FOMO效果最好。这意味着当动物更分散时，它可能效果最好。
- en: As with product bias, it’s important that algorithms are chosen with the eventual
    deployment in mind. If the product will be marketed for counting sheep in large
    fields, FOMO may be the right choice. If it will be marketed for counting cows
    in a shed, SSD could be a better option. In either case, you should make sure
    your product is tested thoroughly before it goes on sale.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 与产品偏见一样，选择算法时考虑最终部署的情况非常重要。如果产品将用于大田间的羊群计数，FOMO可能是正确的选择。如果产品将用于牛舍内的牛计数，SSD可能是更好的选择。无论哪种情况，您都应确保产品在上市前经过充分测试。
- en: Your dataset will also inform your decisions here. As we’ve seen, it’s very
    important to make sure your dataset is representative of real-world conditions.
    If your dataset adequately represents what your product will see “in the field,”
    you won’t be surprised by algorithm bias. If your dataset is not representative,
    the bias will be undetectable and you may find that your system underperforms.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你的数据集也会影响你的决策。正如我们所见，确保你的数据集代表真实世界条件非常重要。如果你的数据集充分代表了产品在实际使用中可能遇到的情况，“现场”，你将不会被算法偏差所惊讶。如果你的数据集不具有代表性，偏差将是无法检测的，并且你可能发现你的系统表现不佳。
- en: An interesting way to mitigate algorithm bias is through the use of ensembles,
    as described in [“Combining algorithms”](ch04.html#combining_algorithms). Using
    an ensemble of different algorithms will smooth out the extremes, giving you the
    closest thing to an ideal approach. Ensembles often win machine learning contests,
    where high performance on an unseen dataset is the goal. That said, this doesn’t
    mean ensembles are immune to bias. Plus, since they involve running multiple algorithms,
    they can be prohibitively costly on edge devices.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 缓解算法偏差的一个有趣方式是使用集成方法，如[“组合算法”](ch04.html#combining_algorithms)中所述。使用多种算法的集成将平滑极端情况，使你接近理想的方法。集成方法通常在机器学习竞赛中获胜，目标是在未知数据集上获得高性能。尽管如此，这并不意味着集成方法免于偏差。而且，因为它们涉及运行多个算法，这在边缘设备上可能成本过高。
- en: Deployment bias
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 部署偏差
- en: This type of bias happens when a system is deployed in a way that it was not
    designed for. A product that is created to solve a particular problem has no guarantees
    of being effective when deployed in different contexts. It doesn’t matter how
    carefully the developers have worked to mitigate bias; when applied to a different
    scenario from the one it was designed for, all bets are off.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个系统被部署在其设计目的之外时，就会出现这种类型的偏差。一个为解决特定问题而创建的产品在不同上下文中没有被设计的保证。不管开发人员如何努力减少偏差；当应用于与其设计用途不同的情境时，一切打破先前的假设。
- en: For example, consider a medical device that is designed to monitor a patient’s
    biosignals and predict the likelihood of a specific health condition occurring.
    The device has been carefully designed so that its inherent trade-offs match up
    well with the health condition it is designed to predict. The algorithms it uses
    have been evaluated and selected based on a high-quality, representative dataset
    collected from patients with the same condition.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑一个设计用于监测患者生物信号并预测特定健康状况可能发生的医疗设备。该设备经过精心设计，其固有的权衡与其设计用于预测的健康状况非常匹配。它使用的算法是基于高质量、代表性数据集从具有相同病症的患者中收集而选定的。
- en: This device may work very well on patients with the condition it is designed
    for. However, what if a doctor attempts to use it to predict a related condition
    that presents in a similar manner but differs in some subtle ways?
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 该设备在设计用于的病患上可能表现良好。但是，如果医生试图使用它来预测一个呈现类似但细微差异的相关病症呢？
- en: 'Since the product was designed around the original condition, there’s no way
    of knowing how it will work on the new one without extensive testing with a lot
    of new data. Even if it appears to work for some patients, there may be others
    for whom it fails silently, putting their lives at risk. The bias of the doctor,
    in assuming that the conditions are similar enough for the product to continue
    to work, is reflected in the outcomes: the health of patients may be placed at
    risk.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 由于产品是围绕原始病症设计的，没有办法在没有大量新数据的广泛测试下知道它在新病症上的工作情况。即使看似对某些患者有效，可能会有其他患者出现悄无声息的失败，危及其生命。医生的偏见，即假设条件足够相似以使产品继续工作，反映在结果中：患者的健康可能会受到威胁。
- en: 'To minimize deployment bias, it’s important that the users of your product
    understand its design limitations and are responsible enough to avoid misusing
    it. In life-or-death situations, such as with medical devices, some of this may
    even be legislated: a device may be approved for legal use with a specific condition
    and no others, and only by licensed medical professionals.'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最小化部署偏差，重要的是你的产品使用者理解其设计限制，并且负责任地避免误用。在生死攸关的情况下，例如医疗设备，其中一些可能甚至会被立法规定：设备可能会因具备特定条件而获得法律批准使用，并且没有其他条件，只能由持牌医疗专业人员使用。
- en: There are huge benefits to publishing public information about the functioning
    of your product. For example, you may choose to share key facts about the dataset
    used to create the product, or statistics about the performance of your product
    in various scenarios. This way, your users can understand the exact nature and
    limitations of your product and will be less likely to mistakenly deploy it in
    the wrong setting.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 公开关于产品运行的信息有巨大的好处。例如，您可以选择分享有关用于创建产品的数据集的关键事实，或者关于您的产品在各种情景下表现的统计数据。这样，用户就可以了解产品的确切性质和局限性，从而更不容易在错误的环境中错误地部署它。
- en: There are some products that are so easy to deploy inappropriately that they
    are best left on the drawing board. For example, the Russian invasion of Ukraine
    in 2022 has led to some commentators calling for more development of autonomous
    weapons systems.^([5](ch08.html#idm45988809417312)) However, the unavoidable potential
    for misuse both on and off the battlefield—either by governments or by terrorist
    groups—has led many AI practitioners to pledge not to work on lethal AI. You can
    take this pledge yourself at [*stopkillerrobots.org*](https://oreil.ly/fMIPF).
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 有些产品如此容易被不适当地部署，以至于最好留在草图阶段。例如，2022年俄罗斯入侵乌克兰导致一些评论员呼吁更多开发自主武器系统^([5](ch08.html#idm45988809417312))。然而，无论是政府还是恐怖组织，不可避免的滥用潜力，无论是在战场上还是在战场外，已经促使许多AI从业者承诺不参与致命AI的工作。您可以在
    [*stopkillerrobots.org*](https://oreil.ly/fMIPF) 上自己做出这个承诺。
- en: Design Deliverables
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计成果
- en: It’s helpful to think of the design process in terms of the artifacts that result
    from it. The following three sidebars lay out the most common notes and documents
    that relate to the initial, exploratory part of the design process.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 将设计过程看作是产生的工件，这是非常有帮助的。以下三个侧栏阐述了与设计过程的初步探索相关的最常见的注释和文档。
- en: We begin the process by understanding our problem and coming up with some potential
    solutions.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 我们开始的过程是理解问题并提出一些潜在解决方案。
- en: Our next step is to determine the type of solution that is feasible.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一步是确定可行的解决方案类型。
- en: Once we have a solution we think is feasible, we can start creating the design.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了我们认为可行的解决方案，我们可以开始创建设计。
- en: Summary
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Since the design and development process is iterative throughout the course
    of a project, these should all be considered living documents—you can create new,
    updated versions of them as you proceed.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 由于设计和开发过程在项目进行中是迭代的，所以这些文件都应被视为活动文档——您可以在进展过程中创建新的更新版本。
- en: Once you have early versions of all these materials together, you can conduct
    a review and make sure the product still seems feasible and within acceptable
    thresholds for risk. If things look good, it’s time to get started with active
    development.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您有了所有这些材料的早期版本，您可以进行审查，并确保产品看起来仍然可行，并在可接受的风险门槛内。如果情况看起来不错，那么现在是进行积极开发的时候了。
- en: ^([1](ch08.html#idm45988809698624-marker)) An even higher-level metric might
    involve store revenue, assuming that higher revenue is better—but that metric
    is affected by more factors and so is a noisier way to measure the effectiveness
    of our system.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch08.html#idm45988809698624-marker)) 一个更高级的度量标准可能涉及商店收入，假设更高的收入更好——但这个指标受到更多因素的影响，因此是衡量我们系统有效性的一种更嘈杂的方式。
- en: ^([2](ch08.html#idm45988809636928-marker)) Whether the system uses a firmware
    or an operating system depends on the hardware and the application, as discussed
    in [“Processors for Edge AI”](ch03.html#processors_for_edge_ai).
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch08.html#idm45988809636928-marker)) 系统使用固件还是操作系统取决于硬件和应用程序，如 [“边缘AI处理器”](ch03.html#processors_for_edge_ai)
    中讨论的那样。
- en: '^([3](ch08.html#idm45988809433248-marker)) See Wei Lu et al., [“SSD: Single
    Shot MultiBox Detector”](https://oreil.ly/ZU6-S), arXiv, 2016.'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '^([3](ch08.html#idm45988809433248-marker)) 请参见Wei Lu等人的 [“SSD: 单次多框检测器”](https://oreil.ly/ZU6-S)，arXiv,
    2016年。'
- en: ^([4](ch08.html#idm45988809430352-marker)) See Louis Moreau and Mat Kelcey,
    [“Announcing FOMO (Faster Objects, More Objects)”](https://oreil.ly/NdEG-), Edge
    Impulse blog, March 28, 2022.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch08.html#idm45988809430352-marker)) 请参见Louis Moreau和Mat Kelcey的 [“宣布FOMO（更快的对象，更多的对象）”](https://oreil.ly/NdEG-)，Edge
    Impulse博客，2022年3月28日。
- en: ^([5](ch08.html#idm45988809417312-marker)) As covered in [“Why Business Is Booming
    for Military AI Startups”](https://oreil.ly/RekGr), by Melissa Heikkilä, *MIT
    Technology Review*, July 7, 2022.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: ^([5](ch08.html#idm45988809417312-marker)) 如Melissa Heikkilä在 [“为什么军事AI初创公司的业务正在蓬勃发展”](https://oreil.ly/RekGr)
    中所述，*MIT Technology Review*, 2022年7月7日。

- en: Chapter 5\. Tools and Expertise
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 工具与专业知识
- en: The edge AI development workflow includes many highly technical tasks, and most
    projects will require skills and expertise pooled by a team of experts.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI开发工作流包含许多高度技术化的任务，大多数项目将需要由专家团队集中技能和专业知识。
- en: The first section of this chapter is a guide to building the team that will
    turn your ideas into reality. Even if you’re still at an early stage, it’s helpful
    to understand the types of skills that will be important and the challenges you
    can expect to encounter. AI is all about automating human insights, so it’s vital
    that you have the right insights on your team.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的第一部分是建立团队的指南，这个团队将把您的想法变成现实。即使您仍处于早期阶段，了解重要的技能类型和您可能遇到的挑战也是有帮助的。AI的核心是自动化人类洞察，因此您团队必须具备正确的洞察力。
- en: The second part of the chapter, starting with [“Tools of the Trade”](#tools_for_edge_ai_development),
    is designed to help get you to grips with the key technical tools for working
    with edge AI. If you’re still early in your product development journey, you may
    want to skim over some of the details—and then use this chapter as a reference
    once you’ve come up with some concrete ideas and are ready to start.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的第二部分，从[“工具”](#tools_for_edge_ai_development)开始，旨在帮助您掌握与边缘AI工作相关的关键技术工具。如果您的产品开发早期阶段，您可能希望浏览一些细节，然后在想出一些具体想法并准备好开始时，将本章作为参考。
- en: Building a Team for AI at the Edge
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建边缘AI团队
- en: Edge AI is a truly complete technology. As a topic, it makes use of knowledge
    from everything from the physical properties of semiconductor electronics all
    the way up to the engineering of high-level architectures that span devices and
    the cloud. It demands expertise in the most cutting-edge approaches to artificial
    intelligence and machine learning along with the most venerable skills of bare-metal
    embedded software engineering. It makes use of the entire history of computer
    science and electrical engineering, laid out end to end.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI是一种真正完整的技术。作为一个话题，它利用从半导体电子学的物理特性到跨设备和云的高级架构工程的所有知识。它需要在人工智能和机器学习的最前沿方法以及裸金属嵌入式软件工程的最可敬技能方面的专业知识。它利用计算机科学和电气工程的整个历史，一脉相承。
- en: Nobody in the world holds deep expertise in every subfield of edge AI. Instead,
    the people working at the heart of the field rely on assembling networks of experts
    who they can look to for insight into other pieces of the puzzle. If you’re building
    an edge AI product, you may have to do the same for yourself.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 世界上没有人在边缘AI的每个子领域都拥有深入的专业知识。相反，这个领域核心的人依赖于组建专家网络，他们可以寻求其他拼图片段的洞察。如果你正在开发边缘AI产品，你可能需要为自己做同样的事情。
- en: 'The best team for edge AI is one that has broad, cross-disciplinary knowledge,
    direct experience working on the problem domain, and comfort working in an iterative
    development process. The best executed products so far have come from teams with
    direct experience of the issue they are trying to solve: they’ve taken their existing
    knowledge and used it to inform their edge AI product.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI团队最佳组合是具备广泛的跨学科知识、直接的问题领域工作经验以及习惯于迭代开发流程的团队。到目前为止，表现最佳的产品都来自那些直接面对他们试图解决的问题的团队：他们利用已有的知识来指导他们的边缘AI产品。
- en: 'It isn’t necessary for a single team to have experts in every subfield of edge
    AI. The absolute bare minimum is probably two roles:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一个单一团队不需要在边缘AI的每个子领域都有专家。绝对最低要求可能只是两个角色：
- en: A domain expert, who has deep insight into the problem to be solved
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个领域专家，深入了解待解决问题
- en: An embedded engineer with experience developing for devices similar to the target
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一位有经验开发类似目标设备的嵌入式工程师
- en: There’s no reason why these two roles can’t be filled by the same person. However,
    without experience working with machine learning or other AI algorithms, they’ll
    have to rely very heavily on end-to-end platforms designed to guide non-ML experts
    through the process of algorithm creation.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 没有理由这两个角色不能由同一个人来担任。然而，如果没有与机器学习或其他人工智能算法的工作经验，他们将不得不非常依赖于专门设计来引导非机器学习专家进行算法创建过程的端到端平台。
- en: Tip
  id: totrans-12
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: If you’re a solo developer without embedded development experience, you can
    level up your skills by building some non-AI projects on your target hardware.
    To make your life easier, you might consider sticking to SoC-level hardware, since
    embedded Linux development is much easier than bare metal. If you’re using an
    end-to-end edge AI platform it should be relatively simple to deploy your model.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是一个没有嵌入式开发经验的独立开发者，您可以通过在目标硬件上构建一些非人工智能项目来提升您的技能。为了让您的生活更轻松，您可以考虑坚持使用SoC级硬件，因为嵌入式Linux开发比裸金属开发容易得多。如果您使用端到端边缘人工智能平台，部署您的模型应该相对简单。
- en: 'Determination and some scrappy improvisational skills can go a long way: we’ve
    seen plenty of scientific researchers build their own AI-powered hardware with
    relatively simple embedded skills.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 决心和一些临时的即兴技能可以走得很远：我们已经看到许多科学研究人员用相对简单的嵌入式技能建立自己的AI驱动硬件。
- en: While many problems can be solved by a minimal team, the most complex problems
    will require more heavy lifting. The remainder of this chapter lays out the roles
    and responsibilities that can potentially be important, which will hopefully give
    you a sense of what you need for your own team. It also talks through the challenges
    of hiring for edge AI.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然许多问题可以由一个小团队解决，但最复杂的问题需要更多的努力。本章的其余部分列出了可能重要的角色和责任，这将帮助你了解你自己团队的需求。它还讨论了边缘人工智能招聘的挑战。
- en: Domain Expertise
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 领域专业知识
- en: Domain expertise, as we’ll learn about in detail in [“Datasets and Domain Expertise”](ch07.html#datasets_and_domain_expertise),
    is by far the most essential component of your team. If you have nothing but domain
    expertise and a budget, you can still hire developers and get a product built.
    But if nobody on your team has a deep understanding of the problem you’re trying
    to solve, it’s very unlikely you’ll be able to solve it. In fact, there is a fair
    chance you may end up trying to solve the wrong problem or creating a solution
    that nobody needs.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们将在[“数据集和领域专业知识”](ch07.html#datasets_and_domain_expertise)中详细了解的那样，领域专业知识绝对是团队中最重要的组成部分。如果除了领域专业知识和预算之外，您什么都没有，您仍然可以雇用开发人员并建立产品。但是，如果您的团队没有人对您试图解决的问题有深入的理解，您很可能无法解决它。事实上，您可能会尝试解决错误的问题或创建没有人需要的解决方案的机会是相当大的。
- en: It would be difficult to build any kind of quality product without domain expertise,
    but building an AI product without domain expertise is almost impossible. The
    goal of edge AI is to distill expert knowledge into a piece of software and use
    it to automate a process. As we learned earlier in the book, intelligence means
    knowing the right thing to do at the right time. But how can we build a system
    that does that if we do not know it ourselves?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有领域专业知识的情况下，建立任何质量产品都是困难的，但在没有领域专业知识的情况下建立人工智能产品几乎是不可能的。边缘人工智能的目标是将专家知识提炼成软件，并用它来自动化一个过程。正如我们在本书前面学到的，智能意味着在正确的时间知道正确的事情要做什么。但如果我们自己不知道，我们怎么能构建一个能够做到这一点的系统呢？
- en: 'If you aren’t a domain expert yourself, your first job is to find someone who
    is. Your second job is to have them validate the solution that you are planning
    to build. Here are some of the questions to ask them:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您自己不是领域专家，您的第一任务是找到一个是的。您的第二个任务是让他们验证您计划构建的解决方案。以下是一些问题可以问他们：
- en: Does the problem you wish to tackle really exist?
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您希望解决的问题是否真的存在？
- en: If it exists, is it a useful problem to solve?
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果存在，这是否是一个有用的问题需要解决？
- en: Are there solutions to the problem that already exist?
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否已经存在解决这个问题的解决方案？
- en: Would your proposed solution actually help solve the problem?
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的提议解决方案是否真的有助于解决问题？
- en: Does your proposed solution sound feasible to build?
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的提议解决方案听起来可行吗？
- en: If you build your solution, would anybody in the field want to buy it?
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您构建您的解决方案，领域内的任何人是否愿意购买它？
- en: 'You should hopefully be able to ask someone these questions without having
    to pay too much money: they’re the basic questions that any genuine domain expert
    would be thinking about if you were to offer them a job. You should make sure
    you pay attention to their answers, even if you disagree. If a genuine expert
    is telling you something is a bad idea, there’s likely some truth to it.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该希望能够向某人提出这些问题，而不必花太多钱：这些是任何真正领域专家在考虑接受工作时会思考的基本问题。即使你不同意，你也应该注意他们的答案。如果一个真正的专家告诉你某事是一个坏主意，那么很可能是有些道理的。
- en: Domain expertise should be at the heart of your organization and part of your
    core team. Your experts will be involved with so many aspects of the project that
    it isn’t feasible for them to be peripheral members. That said, the ideal situation
    is that you have domain expertise at every level of your organization. For example,
    in addition to your core expertise you may have engineers, board members, and
    advisors who all have experience in the relevant area. Their combined insight
    will help your team anticipate and mitigate risk.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 领域专业知识应该是您组织的核心，并成为您核心团队的一部分。您的专家将参与项目的许多方面，使他们成为边缘成员是不可行的。尽管如此，理想的情况是您在组织的每个层次都有领域专家。例如，除了核心专业知识外，您可能还有工程师、董事会成员和顾问，他们都在相关领域有经验。他们的共同见解将帮助您的团队预见和减少风险。
- en: If you are unable to find anyone with the required expertise, you should abort
    your project before it gets started. There’s simply no way to work ethically if
    you don’t have the appropriate knowledge. Your project may be violating some golden
    rule of the field—and you wouldn’t have any way to know about it. It’s not acceptable
    to test unqualified functionality on your customers, as [Figure 5-1](#customers_to_validate)
    makes clear. It’s so difficult to establish a feedback loop with performance in
    the field that you likely won’t know what’s going wrong.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你找不到具备所需专业知识的人，你应该在项目启动前中止它。如果没有适当的知识，就无法合乎道德地工作。你的项目可能会违反某个领域的黄金法则，而你却毫无察觉。在你的客户身上测试不合格的功能是不可接受的，正如[图5-1](#customers_to_validate)所明确的那样。在现场性能建立反馈环路非常困难，你很可能不知道出了什么问题。
- en: '![A tweet with the text ''Is there anyone in the Bay Area with a child who
    can run in front of my car on Full Self-Driving Beta to make a point? I promise
    I won''t run them over... (will disengage if needed) (this is a serious request)''](assets/aiae_0501.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![带有文本“在Bay Area有没有孩子能在我的全自动驾驶测试版车辆前面跑来表明一下？我保证不会撞到他们……（如果需要，我会取消驾驶）（这是一个严肃的请求）”的推文](assets/aiae_0501.png)'
- en: Figure 5-1\. Using customers to validate your solution is a horrible idea ([Twitter](https://oreil.ly/jI6HJ),
    2022)
  id: totrans-30
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-1\. 使用客户验证您的解决方案是一个糟糕的主意（[Twitter](https://oreil.ly/jI6HJ)，2022）
- en: If you are truly convinced that you have a good idea, you may have to spend
    some time developing the required expertise yourself.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你确信自己有一个好主意，你可能需要花一些时间发展必要的专业知识。
- en: Diversity
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多样性
- en: In addition to domain expertise, the other essential property your team should
    aim for is diversity. As we discussed in [“Mitigating societal harms”](ch02.html#avoiding_ethical_issues),
    one of the best defenses against societal issues is to build a team with diverse
    perspectives.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 除了领域专业知识之外，你的团队还应该追求的另一个重要特性是多样性。正如我们在[“减少社会伤害”](ch02.html#avoiding_ethical_issues)中讨论的那样，防范社会问题的最佳策略之一是建立一个拥有多元视角的团队。
- en: It can be helpful to think of workplace diversity in terms of four core areas:^([1](ch05.html#idm45988809046864))
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在工作场所多样性方面，将其分为四个核心领域可能会有所帮助：^([1](ch05.html#idm45988809046864))
- en: Internal
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 内部
- en: Internal diversity reflects the things that a person is born with and didn’t
    choose for themselves. Some of these areas include age, nation of origin, race,
    ethnicity, sexual orientation, gender identity, physical ability, and personality
    types.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 内部多样性反映了一个人出生时不得不面对但并未选择的事物。其中包括年龄、出生国家、种族、族裔、性取向、性别认同、身体能力和人格类型。
- en: External
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 外部
- en: External diversity includes the things we pick up along the way, whether due
    to influence by external factors or due to conscious choices. Some examples are
    socioeconomic status, life experiences, education, personal interests, family
    status, location, and religious beliefs.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 外部多样性包括我们在生活中获得的各种因素，不论是受外部因素影响还是出于有意识的选择。一些例子包括社会经济地位、生活经历、教育水平、个人兴趣、家庭状况、所在地和宗教信仰。
- en: Organizational
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 组织
- en: Organizational diversity relates to a person’s role within an organization.
    This might include their place of work, job function, level within a hierarchy,
    pay level, seniority, or employment status.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 组织多样性涉及一个人在组织内的角色。这可能包括他们的工作地点、工作职能、在层级中的级别、薪资水平、资历或雇佣状况。
- en: Worldview
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 世界观
- en: Diversity in worldview relates to how a person sees the world. It can include
    things like ethical frameworks, political beliefs, religious beliefs, personal
    philosophy, and general outlook on life.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 世界观多样性与一个人如何看待世界有关。它可以包括伦理框架、政治信仰、宗教信仰、个人哲学和对生活的一般看法。
- en: As a result of differences in these four areas, every person has a different
    set of experiences that make their perspective unique. This unique viewpoint means
    that they will see the same situation in different ways. As a team building technology
    products, a diversity of perspectives is incredibly valuable because it allows
    the organization to view the problem and the proposed solutions from a multitude
    of different angles.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这四个领域的差异，每个人都有不同的经历，使他们的视角独特。这种独特的观点意味着他们会以不同的方式看待同一情况。作为构建技术产品的团队，不同的视角非常宝贵，因为它允许组织从多种不同角度看待问题和提出的解决方案。
- en: This provides a significant advantage over organizations that lack diversity.
    You’ll be more capable of identifying all the nuance in a given situation, which
    has huge benefits when mapping out the space of possible solutions. Perhaps someone’s
    personal experiences will translate into an amazing idea that nobody else would
    have thought of.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这为缺乏多样性的组织提供了显著优势。你将更有能力识别给定情况中的所有细微差别，在制定可能解决方案的空间时有巨大的好处。也许某人的个人经历将转化为一个其他人都没有想到的惊人想法。
- en: Even more importantly, diverse perspectives will help you identify issues with
    your own product. For example, you may find that different people naturally come
    up with different axes on which to evaluate your product’s performance. A person
    with kids is more likely to consider the need for a product to cope well with
    family life, and someone with a physical disability may be more likely to think
    about accessibility.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 更重要的是，多样化的观点将帮助你识别自己产品中的问题。例如，你可能会发现不同的人自然而然地提出评估产品性能的不同标准。有孩子的人更有可能考虑产品在家庭生活中的需求，而有身体残疾的人可能更容易考虑无障碍性。
- en: 'This isn’t to say that the members of your team should stand in for domain
    experts in these areas: just because a person has a disability does not mean they
    are automatically your official accessibility expert, a role they may neither
    want nor be qualified for. However, the fact that your team has diverse perspectives
    hopefully means that they are more likely to consider the *need* to bring on an
    accessibility expert.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不意味着你的团队成员应该代表这些领域的专家：一个人有残疾并不意味着他们自动成为你的官方无障碍专家，这可能是他们既不想要也没有资格的角色。然而，你的团队拥有多样化的观点意味着他们更有可能考虑到需要引入无障碍专家的*必要性*。
- en: 'It’s not enough to just have a diverse team: individuals have to be comfortable
    sharing their input, and the rest of the organization has to actually listen to
    them. The work of building that type of environment is beyond the scope of this
    book, but there’s plenty of literature on the subject. A good place to start is
    this [introduction to psychological safety from Google](https://oreil.ly/rZYFL),
    who have found that teams where individuals can confidently speak up are [far
    more effective](https://oreil.ly/2LD_i).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有一个多样化的团队还不够：个人必须愿意分享他们的意见，整个组织必须真正倾听他们。建立这种环境的工作超出了本书的范围，但这方面有大量的文献可供参考。一个好的起点是来自谷歌的[心理安全简介](https://oreil.ly/rZYFL)，他们发现个人能够自信发言的团队[效果更好](https://oreil.ly/2LD_i)。
- en: Another key idea is that you should make use of perspectives from your entire
    organization. Beyond the people working directly on the product, you should draw
    feedback from everyone you can—from executives to entry-level workers. This will
    help you avoid blind spots in your insight. At many large tech companies, employees
    are encouraged to sign up to test new products that are still in development,^([2](ch05.html#idm45988814194816))
    allowing development teams to access insight from across the entire company.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个关键点是你应该利用整个组织的各种视角。除了直接参与产品开发的人员外，你应该从每一个可以的人那里获取反馈——从高管到入门级工作人员。这将帮助你避免洞察中的盲点。在许多大型科技公司，员工被鼓励报名测试尚处于开发中的新产品，^([2](ch05.html#idm45988814194816))这使得开发团队能够获取整个公司的见解。
- en: As with everything in iterative development, this process is all about building
    feedback loops that will help make your product over time. You should create systems
    to gather the perspectives of your diverse team from the very earliest stages
    when you’re still sketching out ideas.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在迭代开发中的所有事情一样，这个过程关键在于建立反馈循环，随着时间的推移帮助改进你的产品。你应该在最早的阶段创建系统，收集你多样化团队的观点，甚至在你还在草拟想法时。
- en: It’s not always feasible for a single team to include all of the necessary diversity
    of perspectives. For example, you may need input on a product from young children,
    who are unlikely to be paid employees of your organization! One way to ensure
    these perspectives are included is to create a budget for having focus groups
    with these types of people throughout the course of your project.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个团队来说，确保包括所有必要的多样化视角并不总是可行的。例如，你可能需要年轻儿童对产品的意见，而这些儿童不太可能是你组织的付费员工！确保这些视角被纳入的方法之一是为在项目期间与这些类型的人进行焦点小组讨论制定预算。
- en: Another way of broadening perspectives is to find a diverse group of advisors
    who can help inform your decisions. Assembling an advisory board that combines
    expertise in key areas with diverse representation is a powerful tool for helping
    you make the right decisions. They can act as a review board who can help you
    understand whether you are meeting your goals or veering off course.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 拓宽视野的另一种方式是找到一群多样化的顾问，帮助你做出决策。组建一个结合关键领域专业知识和多样化代表性的顾问委员会，是帮助你做出正确决策的强大工具。他们可以作为审查委员会，帮助你了解是否达成目标或偏离了正确方向。
- en: Regardless of whether you have a large team, you should be relentless in seeking
    feedback from the people affected by your product—the most diverse group of all.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 不管   无论你的团队规模大小，都应该不遗余力地寻求受到你产品影响的人的反馈——这是最具多样性的群体。
- en: Stakeholders
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利益相关者
- en: The stakeholders of your project are all of the people and communities who are
    potentially affected. This includes people within your organization, your customers,
    the end users of your system, and anybody who may be impacted—both directly and
    indirectly.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你项目的利益相关者包括所有可能受影响的个人和社区。这包括你组织内的人员、客户、系统的最终用户，以及可能受到影响的任何人——无论是直接还是间接的。
- en: For a system to be effective, and for it to avoid causing harm, the needs and
    values of stakeholders must be considered. For example, if your system will come
    into contact with members of the public then it is important that they are considered
    as stakeholders, and that the project is designed with them in mind.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要使系统有效，并避免造成伤害，必须考虑利益相关者的需求和价值观。例如，如果你的系统将接触公众成员，那么必须将他们视为利益相关者，并且在设计项目时要考虑到他们。
- en: The best way to understand the needs and values of stakeholders is to ask them
    directly. They should be represented throughout your development workflow, from
    ideation to end of life.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 了解利益相关者的需求和价值观的最佳方式是直接询问他们。他们应该在你的开发工作流程中得到代表，从构思到项目结束。
- en: Stakeholders can be identified using a well-established tool known as [stakeholder
    mapping](https://oreil.ly/t7Gv0). You should make sure your team includes someone
    who is familiar with the process.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 利益相关者可以使用一个已被广泛认可的工具——[利益相关者映射](https://oreil.ly/t7Gv0)进行识别。你应该确保你的团队中有熟悉此过程的人。
- en: Roles and Responsibilities
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 角色与职责
- en: Building a product takes a village full of people, and the next section of this
    chapter outlines some of the roles that are required. Your project may require
    roles that are not included here; these are just the most common ones that directly
    participate in the edge AI workflow.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 建立一个产品需要一群人，这一章节的下一个部分概述了一些所需的角色。你的项目可能需要的角色在此未列出；这些只是直接参与边缘AI工作流程的最常见角色。
- en: Tip
  id: totrans-60
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 小贴士
- en: You don’t need to hire an individual person for each role. It’s perfectly possible
    for the same person to play multiple roles in a project, and early on it may be
    the case that all of your prototyping is done by a single person.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你无需为每个角色雇佣单独的人。完全有可能同一个人同时在一个项目中扮演多个角色，且在初期，可能所有的原型制作都由一个人完成。
- en: For ease of digestion, we’ll divide up the roles by type.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 为了便于消化，我们将按类型划分角色。
- en: Knowledge and understanding
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 知识与理解
- en: 'The roles in this category are critical to understanding the problem and solving
    it in the right way:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 此类别中的角色对于理解问题并以正确的方式解决它至关重要：
- en: Domain expert
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 域内专家
- en: The starring role in the play, the domain expert brings a deep understanding
    of the project area. While a product manager’s job is to understand how a project
    fits into the surrounding context (such as the market), a domain expert is the
    person who understands the science of the situation. For example, an industrial
    automation project might require a domain expert in the relevant industrial processes,
    and a healthcare project might need an expert in the related areas of medicine
    and biology.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在这出戏中扮演重要角色的领域专家带来了对项目领域的深刻理解。虽然产品经理的工作是理解项目如何融入周围的背景（如市场），但领域专家是了解情况科学的人。例如，工业自动化项目可能需要相关工业过程领域的专家，而医疗项目可能需要医学和生物学相关领域的专家。
- en: Ethics and fairness expert
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 道德和公平专家
- en: The ethics and fairness role is required in order to avoid making the types
    of mistakes that often result in harmful or ineffective products. They need a
    strong understanding of the technologies that will be used to solve a problem,
    the types of pitfalls that can emerge, and the processes that need to be followed.
    Domain expertise is important, too, since ethical issues can be specific to a
    domain.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 道德和公平的角色是为了避免那些经常导致有害或无效产品的错误类型。他们需要对将用于解决问题的技术有深刻的理解，了解可能出现的各种陷阱，并遵循必须遵循的流程。领域专业知识同样重要，因为道德问题可能与特定领域相关。
- en: Planning and execution
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 计划和执行
- en: 'These high-level roles are important in guiding the project down the right
    path as it travels from ideation to launch and long-term support:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这些高级角色在从构思到发布及长期支持的过程中对项目的正确路径起着重要指导作用：
- en: Product manager
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 产品经理
- en: 'A product manager is responsible for making decisions about the product: what
    it should be, what it should do, and who it should serve. Their job is to deeply
    understand the problem and the market, and work with those in technical roles
    to design and implement an effective solution. They lead through influence, pulling
    together different threads to weave a product that fits the right requirements.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 产品经理负责对产品做出决策：它应该是什么，它应该做什么，以及它应该为谁服务。他们的工作是深入了解问题和市场，并与技术角色合作，设计和实施有效的解决方案。他们通过影响力领导，将不同的线索汇集在一起，编织出符合正确需求的产品。
- en: Project manager
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 项目经理
- en: The project management role involves coordinating the execution of complex tasks
    across groups of people. For example, a project manager may organize the collection
    of a dataset that will be used to build and create a product.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 项目管理角色涉及协调跨团队执行复杂任务。例如，项目经理可能会组织收集数据集，这些数据集将用于构建和创建产品。
- en: Program manager
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 程序经理
- en: Program managers coordinate high-level strategies that are made up of multiple
    projects. For instance, a company planning to incorporate edge AI into multiple
    parts of its business to make cost savings may use a program manager to coordinate
    the process.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 程序经理协调由多个项目组成的高级战略。例如，一家计划在其业务的多个部分中引入边缘人工智能以节省成本的公司可能会使用程序经理来协调这个过程。
- en: Algorithm development
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 算法开发
- en: 'These roles are involved in the exploration of datasets and the design of algorithms—along
    with mechanisms for evaluation of the system that is being built. This work can
    increasingly be done by nonexpert users who are using end-to-end platforms, but
    it’s always good to have some solid experience to draw on to avoid making rookie
    mistakes:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这些角色涉及数据集的探索和算法设计，以及系统评估机制的制定。虽然现在这些工作越来越多由非专家用户在端到端平台上完成，但有些坚实的经验仍然可以避免新手错误的产生：
- en: Data scientist
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学家
- en: The data science role is responsible for gathering, maintaining, and understanding
    the data that underlies an edge AI project. They have skills in data cleaning,
    analysis, and feature engineering. This role may often encompass machine learning
    work, but it could just as easily be distinct.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学角色负责收集、维护和理解支持边缘人工智能项目的数据。他们具有数据清洗、分析和特征工程的技能。这一角色经常涵盖机器学习工作，但也可能与之完全不同。
- en: DSP engineer
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: DSP工程师
- en: A DSP engineer develops and implements DSP algorithms. They typically have strong
    skills in both algorithm development and low-level programming. DSP is extremely
    important in most edge AI projects—with the exception of those that combine deep
    learning with image data, since images are typically input without much processing.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: DSP工程师开发和实现DSP算法。他们通常在算法开发和低级编程方面具有强大的技能。在大多数边缘人工智能项目中，DSP非常重要——除了那些将深度学习与图像数据结合的项目，因为图像通常不经过太多处理即输入。
- en: ML practitioner
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: ML从业者
- en: Machine learning practitioners spend their time trying to solve problems with
    ML. An ML practitioner will try to frame a problem in terms of different types
    of learning algorithms. They will then work with a dataset, attempting to develop
    algorithms that solve the problem. A key part of their role is determining how
    to evaluate algorithms and their performance, both in the lab and in the field.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习从业者花时间尝试使用ML解决问题。ML从业者将尝试用不同类型的学习算法框架化问题。然后，他们将使用数据集，尝试开发解决问题的算法。他们工作的关键部分是确定如何评估算法及其在实验室和现场的表现。
- en: In an edge AI project, DSP engineers and ML practitioners work very closely
    together, since DSP is a sophisticated form of feature engineering—which is a
    key part of the ML workflow.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在边缘人工智能项目中，DSP工程师和ML从业者密切合作，因为DSP是复杂形式的特征工程，这是ML工作流的关键部分。
- en: Product engineering
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 产品工程
- en: 'This set of roles leads development of the product itself. They create the
    hardware and application code, and they implement the algorithm in a form that
    works efficiently on-device:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这一系列角色推动产品本身的开发。他们创建硬件和应用代码，并以能够在设备上高效运行的形式实现算法：
- en: Hardware engineer
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件工程师
- en: A hardware engineer designs the hardware that powers a product. This design
    includes both the sensors that capture raw data and the processors that attempt
    to make sense of it, along with the design and layout of printed circuit boards.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件工程师设计驱动产品的硬件。这种设计包括捕获原始数据的传感器以及试图理解数据的处理器，还包括印刷电路板的设计和布局。
- en: 'It’s critical for hardware engineers to work closely with those in algorithm
    development roles so that the hardware and algorithms support each other. This
    is a two-way street: algorithm design must be informed by hardware constraints,
    and hardware design must be informed by algorithm design.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件工程师与算法开发角色密切合作非常重要，以确保硬件和算法相互支持。这是一个双向的过程：算法设计必须考虑到硬件约束，而硬件设计必须考虑到算法设计。
- en: Embedded software engineer
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式软件工程师
- en: Embedded software engineers write the low-level code that brings a piece of
    hardware to life. Their code has to interface with sensors, run algorithms, and
    interpret their output in order to make decisions. They implement the embedded
    application itself.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式软件工程师编写使硬件实现生命的低级代码。他们的代码必须与传感器接口，运行算法，并解释其输出以做出决策。他们实现嵌入式应用程序本身。
- en: Embedded ML engineer
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式ML工程师
- en: Some embedded software engineers focus specifically on machine learning. Their
    job is to make sure that ML algorithms run as efficiently as possible on a particular
    piece of hardware. They may have deep knowledge of the mathematics behind machine
    learning, along with experience with low-level software optimization. They aren’t
    necessarily an expert in data science, although they can likely train simple ML
    models.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一些嵌入式软件工程师专门专注于机器学习。他们的工作是确保ML算法在特定硬件上尽可能高效地运行。他们可能对机器学习背后的数学有深入的了解，并具有低级软件优化经验。他们不一定是数据科学的专家，尽管他们可能能训练简单的ML模型。
- en: This is a very new role, but it’s growing in step with the edge AI space.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常新的角色，但它与边缘人工智能领域同步增长。
- en: Industrial designer
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 工业设计师
- en: 'An industrial designer creates the physical design of the product. This is
    relevant to edge AI in that the physical design dictates many of the realities
    of sensor data collection: moving a sensor to another location on a product can
    completely change its typical output and make a dataset instantly obsolete. This
    means there needs to be significant communication between industrial design, electronics
    engineering, and algorithm development.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一个工业设计师负责产品的物理设计。这在边缘人工智能领域很重要，因为物理设计决定了传感器数据收集的许多现实情况：将传感器移动到产品的另一个位置可能会完全改变其典型输出，并使数据集立即过时。这意味着工业设计、电子工程和算法开发之间需要进行重要的沟通。
- en: Software engineer
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 软件工程师
- en: Many projects involve software engineering outside of the embedded space. For
    example, a lot of edge AI projects involve a server-side component. Writing this
    backend code requires different skills to developing embedded applications, so
    a different type of engineer is needed.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 许多项目涉及嵌入空间以外的软件工程。例如，许多边缘AI项目涉及服务器端组件。编写这些后端代码需要与开发嵌入式应用程序不同的技能，因此需要不同类型的工程师。
- en: Technical services
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 技术服务
- en: 'These supporting roles help keep the technical side of the development process
    running smoothly and manage the tools that keep the team productive and safe:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这些支持性角色帮助保持开发过程的技术方面运行顺利，并管理工具以保持团队的生产力和安全性：
- en: MLOps engineer
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: MLOps工程师
- en: An MLOps engineer is responsible for building and maintaining the MLOps solutions
    that are used by the rest of the team. It’s essentially a [DevOps role](https://oreil.ly/kEFI-),
    but it requires strong understanding of the processes and demands of the edge
    AI workflow.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: MLOps工程师负责构建和维护MLOps解决方案，这些解决方案由团队其他成员使用。本质上，这是一个[DevOps角色](https://oreil.ly/kEFI-)，但它需要对边缘AI工作流程的过程和要求有深刻理解。
- en: Security practitioner
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 安全从业者
- en: This role attends to the security needs of the team, its data, and the products
    that are produced. It is both a consulting role—helping other roles understand
    how to be secure in what they do—and a proactive role, putting measures in place
    that help reduce security risk.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这一角色关注团队、数据和产品的安全需求。它既是一个咨询角色——帮助其他角色理解如何在其工作中保持安全——也是一个主动角色，制定措施来帮助降低安全风险。
- en: Quality assurance engineer
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 质量保证工程师
- en: This role helps design and implement testing plans that put a product through
    its paces, allowing a team to understand whether the product is meeting its design
    goals. There’s more about quality assurance in [“Real-world testing”](ch10.html#real_world_testing).
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这一角色帮助设计和实施测试计划，让产品经历其全过程，帮助团队了解产品是否达到设计目标。关于质量保证的更多信息，请参见[“现实世界测试”](ch10.html#real_world_testing)。
- en: Hiring for Edge AI
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 边缘AI的招聘
- en: 'A significant challenge of edge AI development is that as a very new field,
    there are not many people out there with experience working on it. At the time
    of writing, it is almost impossible to hire an engineer who has existing experience
    with edge AI: there are likely only a few hundred in the world, and most are still
    working on their first exciting edge AI projects and haven’t had long enough to
    get itchy feet.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI开发的一个重要挑战是作为一个非常新的领域，很少有人具有相关工作经验。在撰写本文时，几乎不可能招聘到具有现有边缘AI经验的工程师：全球可能只有几百人，大多数人仍在进行他们的第一个激动人心的边缘AI项目，并没有足够长的时间来感到不安。
- en: 'Fortunately, the fact that this is a new field means that even the most experienced
    engineers only have a couple of years’ advantage. Recent advances in edge AI tooling,
    particularly in the form of end-to-end platforms, have massively reduced the barriers
    to entry. Hiring for edge AI has two main fronts where very specific knowledge
    is required: algorithm development and embedded engineering.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，这是一个新领域的事实意味着，即使是经验丰富的工程师，也只有几年的优势。尤其是在边缘AI工具化的最新进展方面，特别是端到端平台的形式，极大地降低了进入门槛。边缘AI的招聘有两个主要方向需要特定的知识：算法开发和嵌入式工程。
- en: In the case of algorithm development, you’ll likely be in the market for data
    scientists and ML practitioners. Some practitioners have backgrounds in applied
    engineering, solving practical problems in industry. Others may have a more academic
    background, investigating the principles underlying machine learning and coming
    up with new techniques.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在算法开发的情况下，你可能需要数据科学家和机器学习从业者。一些从业者背景是应用工程，解决行业中的实际问题。其他人可能具有更加学术的背景，研究机器学习背后的原理并提出新技术。
- en: 'Applied practitioners will have more experience with problem framing, which
    is very important in edge AI. This makes them a desirable choice, especially as
    an initial or solo hire. That said, academic researchers can still be a good fit
    for edge AI projects. They are less likely to have experience working within a
    typical software development environment and may take longer to ramp up. On the
    other hand, they are easier to hire than applied practitioners: there are simply
    more of them.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 应用从业者在问题框架方面有更多经验，这在边缘AI中非常重要。这使得他们成为一个理想选择，特别是作为最初或独立的聘用。尽管如此，学术研究人员仍然可以成为边缘AI项目的良好选择。他们可能没有在典型软件开发环境中工作的经验，可能需要更长时间来适应。但是，与应用从业者相比，他们更容易被招聘：他们只是更多。
- en: Tip
  id: totrans-113
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 小贴士
- en: ML research is very different from applied ML, and some ML researchers may feel
    bored routinely applying existing techniques rather than attempting to come up
    with new ones. Make sure that it’s clear to candidates what the expectations are
    around a role to avoid disappointment on both sides.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习研究与应用机器学习非常不同，一些机器学习研究人员可能会觉得例行应用现有技术比尝试提出新技术更无聊。确保候选人清楚地了解角色期望，以避免双方的失望非常重要。
- en: 'One difficulty is that not many people in data science and machine learning
    have much experience with sensor data. While vision is a common modality, audio
    is less so, and time series sensor data is likely to be a mystery to most practitioners:
    while time series analysis is common in data science, it’s not typically the type
    of high-frequency time series that are produced by electronic sensors.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学和机器学习领域的一个难点是，不多的人对传感器数据有丰富的经验。虽然视觉是常见的模态，但音频不那么常见，而时间序列传感器数据对大多数从业者来说可能是个谜题：尽管时间序列分析在数据科学中很常见，但通常不是由电子传感器产生的高频时间序列的那种类型。
- en: Fortunately, DSP engineers have a similar workflow and toolchain to ML practitioners,
    and they are already experts in feature engineering for sensor data. The skills
    and experience of DSP engineers makes them well suited to learning embedded ML,
    so one potential avenue is to recruit DSP engineers and have them learn the basics
    of machine learning. A team composed of both DSP engineers and ML practitioners
    will have a much easier time than either role alone.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，DSP工程师与ML从业者具有类似的工作流程和工具链，并且他们已经是传感器数据特征工程的专家。DSP工程师的技能和经验使他们非常适合学习嵌入式机器学习，因此一个潜在的途径是招募DSP工程师并让他们学习机器学习的基础知识。由DSP工程师和ML从业者组成的团队将比任何一种角色单独组成的团队更容易应对挑战。
- en: In terms of embedded engineering, the challenges vary. While working with deep
    learning interpreters (or code generated by a deep learning compiler) is often
    simply a matter of library integration, embedded engineers may sometimes have
    to dig into the internals to figure out when something is going wrong. In these
    cases, some knowledge and understanding of deep learning is definitely helpful.
    Embedded engineers may also end up being responsible for the onerous task of converting
    a model into the appropriate form to use on-device, which is definitely easier
    with some ML insight.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在嵌入式工程方面，面临的挑战各不相同。虽然与深度学习解释器（或深度学习编译器生成的代码）一起工作通常只是库集成的问题，但嵌入式工程师有时可能需要深入内部来查明问题所在。在这些情况下，对深度学习的一些知识和理解肯定是有帮助的。嵌入式工程师可能还需要负责将模型转换为适合在设备上使用的适当形式，这在一定程度上需要一些机器学习的见解。
- en: 'Another common task for embedded engineers is to implement classical ML models
    in software. There isn’t yet a great embedded-specific C++ library for this but
    porting them is usually easy: there are reference implementations in higher-level
    languages that are simple to understand.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式工程师的另一个常见任务是在软件中实现经典的机器学习模型。目前尚没有一个很好的面向嵌入式的C++库，但通常很容易将它们移植：高级语言中有简单易懂的参考实现。
- en: 'Unfortunately, finding an embedded engineer with existing ML knowledge is going
    to be a challenge for a while. That said, end-to-end platforms make things a lot
    easier, and eventually the number of experienced embedded ML engineers will grow.
    For now, it shouldn’t be a blocker: a competent embedded engineer should be able
    to learn today’s tools without too much trouble.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，找到既有嵌入式工程知识又懂机器学习的工程师在一段时间内将是一个挑战。尽管如此，端到端平台使事情变得容易了许多，最终有经验的嵌入式机器学习工程师的数量会增加。但现在不应该成为阻碍：一位称职的嵌入式工程师应该能够轻松学习今天的工具。
- en: Learning Edge AI Skills
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 学习边缘人工智能技能
- en: 'Over the last few years, some great resources have emerged for learning about
    AI at the edge. Like with most fields, there are two sides: theory and practice.
    Theory content will be most interesting to those who wish to contribute to advancing
    the field, while practical content is more helpful for those who wish to build
    products.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去几年里，一些关于边缘人工智能学习的优秀资源已经出现。像大多数领域一样，存在理论和实践两方面。理论内容对于那些希望推动该领域发展的人最为有趣，而实践内容对于那些希望构建产品的人更为有帮助。
- en: 'A word of caution: don’t get lost in the weeds. Many people who wish to build
    AI products end up getting paralyzed by learning, exploring every rabbit hole
    they can rather than actually getting started on their projects. The reality is
    that this is a massive field, and you’re never going to be able to learn it all.
    Be oriented toward action, learn enough to take your next step, and then reevaluate.
    Successful hardware products require teams, so figure out the minimum you need
    to know and then bring some experts on board.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 警告：不要迷失在细枝末节中。许多希望构建AI产品的人最终陷入学习的泥潭中，探索每一个可能的兔子洞，而不是真正着手开始他们的项目。事实是，这是一个庞大的领域，你永远无法全部学习。要以行动为导向，学习足够让你迈出下一步的内容，然后重新评估。成功的硬件产品需要团队，因此弄清楚你需要了解的最少信息，然后引入一些专家。
- en: Here are our top recommendations for both practical and theoretical content.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是我们推荐的实践和理论内容。
- en: Practice
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实践
- en: 'The final three chapters of this book, starting with [Chapter 11](ch11.html#use_case_chapter_wildlife_monitoring),
    will walk through the edge AI workflow end to end with three real-world use cases:
    wildlife monitoring, food quality assurance, and consumer products.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的最后三章从[第11章](ch11.html#use_case_chapter_wildlife_monitoring)开始，详细介绍了边缘AI工作流程及三个真实用例：野生动物监测、食品质量保证和消费产品。
- en: 'Once you’re done with that, here’s some further content:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，这里还有更多内容：
- en: '[Introduction to Embedded Machine Learning](https://oreil.ly/ouQyM) (Coursera
    course)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[嵌入式机器学习导论](https://oreil.ly/ouQyM)（Coursera课程）'
- en: A highly rated online course intended as a practical introduction to the subject.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 一门旨在实践介绍该主题的高评分在线课程。
- en: '[Computer Vision with Embedded Machine Learning](https://oreil.ly/LgjmK) (Coursera
    course)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[带嵌入式机器学习的计算机视觉](https://oreil.ly/LgjmK)（Coursera课程）'
- en: A follow-up to the first course, focused specifically on vision.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 第一门课的后续课程，专注于视觉。
- en: '[Applied Machine Learning (TinyML) for Scale](https://oreil.ly/jX-m1) (HarvardX
    course)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[规模化应用机器学习（TinyML）](https://oreil.ly/jX-m1)（HarvardX课程）'
- en: This brilliant collection of courses focuses on the applied skills and big-picture
    expertise required for working with embedded ML.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这一系列课程聚焦于处理嵌入式ML所需的应用技能和全局专业知识。
- en: '[*TinyML Cookbook*](https://oreil.ly/Q_Eto), a book by Gian M. Iodice (Packt,
    2022)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[*TinyML Cookbook*](https://oreil.ly/Q_Eto)，Gian M. Iodice著（Packt，2022年）'
- en: A practical book based around useful “recipes” that demonstrate various concepts
    within embedded ML.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 一本围绕实用“食谱”展示嵌入式ML中各种概念的实用书籍。
- en: '[*TinyML*](https://tinymlbook.com), a book by Pete Warden and Daniel Situnayake
    (O’Reilly, 2020)'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '[*TinyML*](https://tinymlbook.com)，Pete Warden和Daniel Situnayake著（O’Reilly，2020年）'
- en: A working introduction to embedded ML on microcontrollers, with examples focused
    on TensorFlow Lite for Microcontrollers.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 一本关于在微控制器上进行嵌入式ML的工作介绍，重点放在TensorFlow Lite for Microcontrollers上的示例。
- en: '[*Designing Machine Learning Systems*](https://oreil.ly/aY4Iv), a book by Chip
    Huyen (O’Reilly, 2022)'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[*设计机器学习系统*](https://oreil.ly/aY4Iv)，Chip Huyen著（O’Reilly，2022年）'
- en: A fantastic book about the machine learning development workflow, geared toward
    server-side applications but still very relevant.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 一本关于机器学习开发工作流程的绝妙书籍，针对服务器端应用，但仍然非常相关。
- en: '[*Making Embedded Systems*](https://oreil.ly/BQG6z), a book by Elecia White
    (O’Reilly, 2011)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[*制作嵌入式系统*](https://oreil.ly/BQG6z)，Elecia White著（O’Reilly，2011年）'
- en: The best available practical introduction to developing embedded systems.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 开发嵌入式系统的最佳实用入门书籍。
- en: Theory
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理论
- en: This content is for people who want to dig deeper into the theory of embedded
    machine learning. Remember, it’s not a prerequisite for successful product development—so
    don’t feel intimidated or get lost down the rabbit hole of studying.^([3](ch05.html#idm45988809168480))
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这些内容适合想深入研究嵌入式机器学习理论的人群。请记住，这并非成功产品开发的先决条件——所以不要感到害怕或迷失在学习的兔子洞里。^([3](ch05.html#idm45988809168480))
- en: '[Tiny Machine Learning (TinyML)](https://oreil.ly/cZoLK) (HarvardX course)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[微型机器学习（TinyML）](https://oreil.ly/cZoLK)（HarvardX课程）'
- en: This set of courses overlaps with Applied Tiny Machine Learning (TinyML) for
    Scale, referenced earlier, but starts with the absolute fundamentals—which may
    not be necessary if you want to get building as quickly as possible.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这一系列课程与前面提到的应用TinyML（微型机器学习）有重叠之处，但从绝对基础开始，可能不是你想尽快开始构建的必要条件。
- en: '[*The Scientist and Engineer’s Guide to Digital Signal Processing*](https://oreil.ly/Oir2V),
    a book by Steven W. Smith (California Technical, 1997)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[*The Scientist and Engineer’s Guide to Digital Signal Processing*](https://oreil.ly/Oir2V)，Steven
    W. Smith 著（California Technical，1997）'
- en: A truly comprehensive guide to digital signal processing, available for free
    and as a hardcover book. A good resource for any non-DSP engineer who will be
    working seriously with DSP algorithms.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 一本真正全面的数字信号处理指南，可以免费获取，也有硬皮书版本。对于任何将与 DSP 算法严肃工作的非 DSP 工程师来说都是一个好资源。
- en: '[*Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow*](https://oreil.ly/tfO2J),
    a book by Aurélien Géron (O’Reilly, 2022)'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow*](https://oreil.ly/tfO2J)，Aurélien
    Géron 著（O’Reilly，2022）'
- en: A wonderful introduction to practical machine learning concepts and skills.
    A good resource for any non-ML engineer who will be working with ML algorithms.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 一本实用机器学习概念和技能的精彩介绍。对于任何将与 ML 算法一起工作的非 ML 工程师来说都是一个好资源。
- en: '[*Deep Learning with Python*](https://oreil.ly/G7qW4), a book by François Chollet
    (Manning, 2021)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '[*Deep Learning with Python*](https://oreil.ly/G7qW4)，François Chollet 著（Manning，2021）'
- en: Another fantastic introduction to ML, specifically focused on deep learning
    algorithms.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 另一本关于 ML 的绝妙介绍，专注于深度学习算法。
- en: '[TinyML Foundation](https://oreil.ly/AdXwm) (YouTube channel)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[TinyML 基金会](https://oreil.ly/AdXwm)（YouTube 频道）'
- en: The TinyML Foundation hosts regular presentations on embedded ML. Typically
    highly technical, this content reflects the cutting edge of research and engineering.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: TinyML 基金会定期举办关于嵌入式 ML 的演讲。通常内容高度技术化，反映了研究和工程的前沿。
- en: '[TinyML papers and projects](https://oreil.ly/P1YbW) (GitHub repository)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '[TinyML 论文和项目](https://oreil.ly/P1YbW)（GitHub 仓库）'
- en: This repo is a goldmine of papers and resources related to the field.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这个仓库是与该领域相关的论文和资源的宝库。
- en: Tools of the Trade
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工具
- en: The story of edge AI is a story of tooling. In terms of raw technology, most
    of the basic ingredients required for putting artificial intelligence on edge
    devices have existed for a decade or more. However, these technologies—from capable
    embedded processors to deep learning models—tend to have a steep learning curve
    when they first become available.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘 AI 的故事是关于工具的故事。在技术方面，大多数用于将人工智能应用于边缘设备的基本组件已经存在了十年以上。然而，这些技术——从功能强大的嵌入式处理器到深度学习模型——在首次可用时往往具有陡峭的学习曲线。
- en: Over time, however, our global technology ecosystem evolves tooling designed
    to manage the complexity and improve the usability of even the most challenging
    technologies. A rich combination of open source and commercial libraries, frameworks,
    and products have brought edge AI into the toolbox of the average embedded engineer.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，随着时间的推移，我们的全球技术生态系统演变出设计来管理复杂性并改善甚至是最具挑战性技术的可用性的工具。丰富的开源和商业库、框架和产品的组合已经将边缘
    AI 带入了普通嵌入式工程师的工具箱。
- en: A lot of this work has happened in the past two or three years, with libraries
    such as [TensorFlow Lite for Microcontrollers](https://oreil.ly/oowo5)^([4](ch05.html#idm45988809145088))
    and end-to-end development platforms like [Edge Impulse](https://edgeimpulse.com)^([5](ch05.html#idm45988809143904))
    bringing the technology over the threshold to enable mass adoption.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去两三年中，像[TensorFlow Lite for Microcontrollers](https://oreil.ly/oowo5)^([4](ch05.html#idm45988809145088))
    这样的库以及像[Edge Impulse](https://edgeimpulse.com)^([5](ch05.html#idm45988809143904))
    这样的端到端开发平台使得这项技术越过了门槛，实现了大规模采用。
- en: The following sections will walk through the tools that we think are most essential
    to AI at the edge. Successful teams will be at least passingly familiar with all
    of them.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的部分将详细介绍我们认为对边缘 AI 最为重要的工具。成功的团队至少应该对它们有所了解。
- en: Software Engineering
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件工程
- en: A large portion of edge AI involves software development, so modern software
    engineering tools are incredibly important. Here are some of the key contributors.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分边缘 AI 涉及软件开发，因此现代软件工程工具非常重要。以下是一些关键贡献者。
- en: Operating systems
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 操作系统
- en: It’s important to consider operating systems during both development and deployment.
    In development, your OS of choice will determine how easy it is to work with the
    extremely diverse set of software tools that make up the edge AI ecosystem. There’s
    a bit of minor conflict between two different engineering traditions.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发和部署过程中考虑操作系统非常重要。在开发阶段，您选择的操作系统将决定如何轻松地使用构成边缘 AI 生态系统的极其多样化的软件工具集。两种不同的工程传统之间存在一些轻微冲突。
- en: In embedded engineering it’s historically common to use Windows as an operating
    system, and some embedded tools are written with this assumption. In contrast,
    the tools of data science and machine learning are typically best suited to a
    Unix-compatible environment such as Linux or macOS.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在嵌入式工程中，使用Windows作为操作系统是历史上常见的做法，一些嵌入式工具也是基于此假设编写的。相比之下，数据科学和机器学习的工具通常最适合Unix兼容环境，如Linux或macOS。
- en: 'That said, this isn’t a huge problem in practice. It’s not strictly necessary
    for every member of a team to be able to run all of the tooling: for example,
    a machine learning engineer might train and optimize models with Linux and then
    hand them over to an embedded engineer who uses Windows. There are also plenty
    of tools for mixing environments, such as [Windows Subsystem for Linux](https://oreil.ly/VYaE6).
    In addition, it’s common for more recent embedded toolchains to work fine in Unix
    environments—although embedded engineers may still prefer Windows as a familiar
    environment. The entire team at Edge Impulse, including both embedded and ML engineers,
    uses a combination of macOS and Linux virtual machines.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，在实践中这并不是一个巨大的问题。团队中并不需要每个成员都能运行所有的工具：例如，机器学习工程师可能会在Linux上训练和优化模型，然后将其交给使用Windows的嵌入式工程师。此外，有许多混合环境的工具，比如[Windows子系统
    for Linux](https://oreil.ly/VYaE6)。此外，更近期的嵌入式工具链通常也能在Unix环境中正常工作——尽管嵌入式工程师可能仍然更喜欢Windows作为熟悉的环境。Edge
    Impulse团队的整个团队，包括嵌入式和ML工程师，都使用macOS和Linux虚拟机的组合。
- en: In deployment, operating systems are sometimes used on edge devices themselves.
    These are typically either embedded Linux (stripped-down distributions of Linux
    compiled to run on SoCs) or real-time operating systems (RTOS), which are special
    embedded-specific operating systems designed to run with minimal overhead. Both
    of these options, plus the option of no OS at all^([6](ch05.html#idm45988814324672))
    (which is the most common case for microcontrollers), are fully compatible with
    edge AI.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署中，操作系统有时会直接用于边缘设备。这些通常是嵌入式Linux（裁剪版的Linux，编译用于SoC运行）或实时操作系统（RTOS），后者是专门为嵌入式设计的特定操作系统，旨在以最小的开销运行。这两个选项，加上不使用操作系统的选项^([6](ch05.html#idm45988814324672))（对于微控制器来说最常见的情况），都完全兼容边缘人工智能。
- en: Programming and scripting languages
  id: totrans-167
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编程和脚本语言
- en: The two most important programming languages for edge AI are Python and C++.
    Python is overwhelmingly the current language of choice for machine learning,
    thanks to a vast array of open source mathematical and scientific computing libraries
    and nearly 100% adoption by the machine learning research community. Since Python
    is also a first-class language for general software engineering, it beats domain-specific
    languages such as R.^([7](ch05.html#idm45988814318672)) The two most important
    deep learning frameworks, TensorFlow and PyTorch, are both written in Python,
    as are the incredible tools we’ll encounter in [“Mathematical and scientific computing
    libraries”](#mathematical_and_scientific_computing_libraries). Python has its
    quirks, but it’s the right language to use for developing edge AI algorithms—from
    machine learning to DSP.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘人工智能最重要的两种编程语言是Python和C++。Python目前是机器学习的首选语言，得益于大量开源数学和科学计算库，几乎被机器学习研究社区完全采纳。由于Python也是通用软件工程的一流语言，它击败了像R这样的领域特定语言。^([7](ch05.html#idm45988814318672))
    最重要的两个深度学习框架TensorFlow和PyTorch都是用Python编写的，我们在[“数学和科学计算库”](#mathematical_and_scientific_computing_libraries)中也会遇到一些不可思议的工具。Python有它的怪癖，但它是开发边缘人工智能算法（从机器学习到DSP）的正确语言。
- en: C++ (pronounced *C-plus-plus*) is a ubiquitous language in modern embedded software
    engineering. While some embedded platforms only support C (a simpler language
    than C++ that shares some characteristics), the high-end embedded devices that
    are typically used for edge AI are generally programmed with C++. The ecosystem
    around C++ features numerous tools and libraries that can make development easier,
    which is lucky—since it’s the only game in town for most microcontroller-based
    systems.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: C++（发音为*C-plus-plus*）是现代嵌入式软件工程中普遍存在的语言。虽然一些嵌入式平台仅支持C（一种比C++更简单且具有一些相似特性的语言），但通常用于边缘人工智能的高端嵌入式设备一般都是用C++编程的。围绕C++的生态系统提供了许多工具和库，可以使开发变得更加容易，这很幸运——因为对于大多数基于微控制器的系统来说，C++是唯一的选择。
- en: C++ is a low-level language that provides a huge amount of control over the
    underlying hardware. It takes a skilled engineer to write good C++ code, but it
    can be much faster than the equivalent written in a higher-level language such
    as Python.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: C++ 是一种低级语言，可以对底层硬件进行大量控制。编写优秀的 C++ 代码需要技能，但其速度比使用高级语言如 Python 写的等效代码要快得多。
- en: Note
  id: totrans-171
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: 'It’s interesting to note that most of the mathematical heavy lifting done by
    Python libraries is actually implemented in C++ under the hood: the Python code
    is just used as a convenient wrapper. This gives developers the best of both worlds.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: Python 库中大部分的数学计算实际上是通过 C++ 在底层实现的：Python 代码只是作为一个方便的包装器。这让开发人员获得了最佳的两个世界。
- en: You’re also likely to use scripting languages, such as Bash, during the development
    process. They are used to chain together and automate the complex tools and scripts
    that help build applications and deploy them to devices.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发过程中，你也可能会使用诸如 Bash 这样的脚本语言。它们用于链式连接和自动化复杂工具和脚本，帮助构建应用程序并将其部署到设备上。
- en: In terms of targets, you can expect to almost always use C++ when working with
    microcontrollers. SoCs, which run full operating systems, are often a lot more
    flexible—you may be able to run high-level languages such as Python. The trade-off
    is that they are far more expensive and consume a lot more energy than smaller
    devices.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在目标方面，与微控制器一起工作时几乎总是会使用 C++。运行完整操作系统的 SoC 通常更加灵活 —— 你可能能够运行高级语言如 Python。权衡之处在于它们比较昂贵且消耗的能源比较多，远超小型设备。
- en: Since most targets require C++, you’ll need to port any algorithms developed
    in higher-level languages (like Python) in order to deploy your work. There are
    some tools explained later that make this easier, but it’s not always a simple
    process.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 由于大多数目标需要 C++，你需要将任何在高级语言（如 Python）中开发的算法移植以部署你的工作。稍后会介绍一些工具，这样做会更容易，但这并不总是一个简单的过程。
- en: Dependency management
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 依赖管理
- en: Modern software typically has a lot of dependencies, and AI development takes
    this to the next level. Data science and machine learning tools often require
    absurd numbers of additional third-party libraries; installing a major deep learning
    framework such as TensorFlow brings everything from web servers to databases along
    for the ride.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 现代软件通常有大量依赖项，而 AI 开发将这一点推到了一个新的水平。数据科学和机器学习工具通常需要大量额外的第三方库；安装像 TensorFlow 这样的主要深度学习框架会带来从
    Web 服务器到数据库的一切。
- en: Things can get complex on the embedded side, too, since signal processing and
    machine learning algorithms commonly require sophisticated, highly optimized mathematical
    computing libraries. In addition, the compilation and deployment of embedded C++
    code often requires a rat’s nest of dependencies to be present on a machine.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在嵌入式方面事情也可以变得复杂，因为信号处理和机器学习算法通常需要复杂、高度优化的数学计算库。此外，嵌入式 C++ 代码的编译和部署通常需要机器上存在一团复杂的依赖关系。
- en: All of these dependencies can be an absolute nightmare and managing them is
    truly one of the most challenging parts of edge AI development. Various techniques
    exist to make it easier, from containerization (see the next section, [“Containerization”](#containerization))
    to language-specific environment management.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些依赖关系可能是一场绝对的噩梦，管理它们真的是边缘 AI 开发中最具挑战性的部分之一。存在各种技术可以使这一过程更容易，从容器化（参见下一节，“容器化”）到特定语言的环境管理。
- en: For Python, one of the most helpful tools is called [Poetry](https://python-poetry.org).
    It aims to simplify the process of specifying, installing, and isolating dependencies
    in multiple environments on a single machine.^([8](ch05.html#idm45988814303184))
    Other essential tools include OS-specific package management systems like [aptitude](https://oreil.ly/aCq1n)
    (Debian GNU/Linux) and [Homebrew](https://brew.sh) (macOS).
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Python 来说，其中一个最有帮助的工具称为 [Poetry](https://python-poetry.org)。它旨在简化在单台机器上多个环境中指定、安装和隔离依赖项的过程。^([8](ch05.html#idm45988814303184))
    其他必要的工具包括特定于操作系统的软件包管理系统，如 [aptitude](https://oreil.ly/aCq1n)（Debian GNU/Linux）和
    [Homebrew](https://brew.sh)（macOS）。
- en: One of the worst parts of dependency management comes when attempting to integrate
    different parts of a system together. For example, a model trained with one version
    of a deep learning framework may not be compatible with an inferencing framework
    released slightly later. This makes it extremely important to test systems end
    to end very early in the development process, to avoid nasty surprises later on.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖管理中最糟糕的部分之一出现在尝试将系统的不同部分集成在一起时。例如，使用一个版本的深度学习框架训练的模型可能与稍后发布的推断框架不兼容。这使得在开发过程的早期就对系统进行端到端的测试变得非常重要，以避免后续出现令人不快的意外。
- en: Containerization
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 容器化
- en: Containerization is the use of OS-level techniques to run software inside of
    sandboxed environments called *containers*. From inside, a container appears entirely
    distinct from the machine that is running it. It can have a different operating
    system and dependencies, and limited access to system resources.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 容器化是使用操作系统级技术在被称为*容器*的隔离环境中运行软件。从内部看，容器与运行它的机器完全不同。它可以有不同的操作系统和依赖关系，并且对系统资源的访问受限。
- en: Edge AI involves many different toolchains, used for everything from machine
    learning to embedded development. These toolchains often have mutually incompatible
    dependencies. For example, two toolchains might require entirely different versions
    of a language interpreter. Containerization is a powerful tool for enabling these
    incompatible toolchains to happily live side by side on a single machine.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘人工智能涉及许多不同的工具链，用于从机器学习到嵌入式开发的各种任务。这些工具链通常具有相互不兼容的依赖关系。例如，两个工具链可能需要完全不同版本的语言解释器。容器化是一个强大的工具，可以使这些不兼容的工具链在单个机器上愉快地共存。
- en: Containers are typically state-free and highly portable. This means that you
    can treat an entire painstakingly configured machine—described in a special syntax—as
    a command-line program that does a specific task. You can chain these together
    in order to perform useful work, and you can easily run them on different machines
    for a distributed computational environment.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 容器通常是无状态且高度可移植的。这意味着你可以将整个费力配置的机器——用一种特殊语法描述——视为执行特定任务的命令行程序。你可以将它们串联起来以执行有用的工作，并且可以轻松地在不同的机器上运行它们，形成分布式计算环境。
- en: It’s also possible to run containers on embedded devices, typically within embedded
    Linux on an SoC. This can be an interesting way to package your software and its
    dependencies for distribution, although there is some overhead involved.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，也可以在嵌入式设备上运行容器，通常在SoC上的嵌入式Linux中。尽管涉及一些开销，但这可以是将软件及其依赖关系打包为分发包的有趣方式。
- en: The most popular tools for containerization are [Docker](https://www.docker.com)
    and [Kubernetes](https://kubernetes.io). Docker is typically used locally on a
    development workstation, while Kubernetes is used to run clusters of containers
    within distributed computing infrastructure.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 容器化最流行的工具是[Docker](https://www.docker.com)和[Kubernetes](https://kubernetes.io)。Docker通常用于开发工作站上的本地使用，而Kubernetes用于在分布式计算基础设施中运行容器集群。
- en: Distributed computing
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分布式计算
- en: Distributed computing is the idea of running different processes on different
    machines, potentially located anywhere in the world and connected via the internet.
    It’s a more flexible way to approach computation than the use of single, high-powered
    mainframes and supercomputers, and it’s the architectural style underlying the
    majority of modern computing.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式计算是在不同的机器上运行不同进程的概念，这些机器可以位于全球任何地方，并通过互联网连接。与使用单一的高功率主机和超级计算机相比，这是一种更灵活的计算方法，也是现代大多数计算的架构风格的基础。
- en: Distributed compute is important to edge AI for many reasons. First, edge AI
    is an example of distributed computing! Computation is performed at the edge,
    where the data is created, and the results are either used locally or sent across
    the network.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 分布式计算对边缘人工智能至关重要，原因有很多。首先，边缘人工智能就是分布式计算的一个例子！计算是在数据产生的边缘进行的，结果要么在本地使用，要么通过网络发送。
- en: Second, managing datasets, developing algorithms, and training machine learning
    models can be highly compute and storage intensive. This makes distributed computing
    a good fit for these parts of the process. For example, it’s common to rent a
    highly capable remote server in order to train deep learning models—as opposed
    to having to buy and maintain a powerful machine for your office.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，管理数据集、开发算法和训练机器学习模型可能需要大量的计算和存储资源。这使得分布式计算非常适合这些流程的部分。例如，通常会租用一台高性能的远程服务器来训练深度学习模型，而不是购买和维护办公室里的强大机器。
- en: The task of organizing and controlling distributed computing infrastructure
    is called *orchestration*. There are many open source orchestration tools available,
    designed for different tasks. [Kubeflow](https://www.kubeflow.org) is an orchestration
    framework designed for running machine learning workloads across multiple machines.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 组织和控制分布式计算基础设施的任务被称为*编排*。有许多开源编排工具可用，专为不同的任务设计。[Kubeflow](https://www.kubeflow.org)
    是一个为在多台机器上运行机器学习工作负载而设计的编排框架。
- en: Cloud providers
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 云服务提供商
- en: Businesses like [Amazon Web Services](https://aws.amazon.com), [Google Cloud](https://cloud.google.com),
    and [Microsoft Azure](https://oreil.ly/zXZeB) provide on-demand distributed computing
    resources that are available to anyone willing to pay for them. This type of distributed
    compute is known as “cloud compute,” since diagrams of computer networks typically
    use a cloud symbol to signify resources that are located outside of the local
    network.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于[亚马逊网络服务](https://aws.amazon.com)，[谷歌云](https://cloud.google.com)，和[微软 Azure](https://oreil.ly/zXZeB)等企业提供按需分布式计算资源，供愿意支付费用的任何人使用。这种类型的分布式计算被称为“云计算”，因为计算机网络的图表通常使用云符号表示位于本地网络外的资源。
- en: Cloud providers host most of the world’s websites. They take care of the physical
    hardware and the network configuration, allowing developers to focus on building
    applications rather than managing equipment. They make heavy use of containerization
    to allow many different workloads to live side by side on the same infrastructure.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 云服务提供商托管全球大部分的网站。他们负责物理硬件和网络配置，使开发人员能够专注于构建应用程序而不是管理设备。他们大量使用容器化技术，允许许多不同的工作负载共存于同一基础设施上。
- en: It’s common for edge AI projects to use cloud compute for storing datasets,
    training machine learning models, and providing a backend from which edge devices
    can send and receive data. In some cases, such as [“Cascade to the cloud”](ch08.html#cascade_to_the_cloud_title),
    AI algorithms running on cloud servers work in unison with those on edge devices
    in order to provide a service.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 对于边缘AI项目来说，常见的做法是使用云计算来存储数据集、训练机器学习模型，并提供一个后端，使边缘设备能够发送和接收数据。在某些情况下，例如[“级联至云”](ch08.html#cascade_to_the_cloud_title)，运行在云服务器上的AI算法与运行在边缘设备上的算法协同工作，以提供服务。
- en: Working with Data
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理数据
- en: Data is a key ingredient of edge AI applications, and many tools exist for collecting,
    storing, and processing data.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 数据是边缘AI应用的关键组成部分，存在许多用于收集、存储和处理数据的工具。
- en: Data capture
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据捕获
- en: Obtaining data from the field can be difficult since there’s often limited connectivity
    available at remote locations. Two useful tools are [data loggers](https://oreil.ly/0Tl46)
    and [mobile broadband modems](https://oreil.ly/xl0eZ).
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 由于偏远地区通常存在有限的连接性，因此从现场获取数据可能会很困难。两个有用的工具是[数据记录器](https://oreil.ly/0Tl46)和[移动宽带调制解调器](https://oreil.ly/xl0eZ)。
- en: Data loggers are small devices designed to capture and log data collected by
    sensors in the field. They typically have a large amount of persistent storage
    for collecting sensor readings and can either be battery powered or connected
    to a permanent power source. The benefit of using a data logger is that you can
    begin collecting data immediately, before designing and building any of your own
    hardware. The downside is that data needs to be collected manually, by physically
    connecting to the logger.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 数据记录器是小型设备，旨在捕获和记录现场传感器收集的数据。它们通常具有大量持久存储空间，用于收集传感器读数，并且可以是电池供电或连接到永久电源。使用数据记录器的好处是可以立即开始收集数据，而无需设计和构建自己的硬件。缺点是数据需要手动收集，即通过物理连接到记录器。
- en: Mobile broadband modems provide a wireless internet connection, typically via
    cellular networks—although satellite connections are also available. They can
    potentially transmit data from almost anywhere in the world, although connectivity
    depends on local availability and conditions. They offer the convenience of immediate
    data availability. However, data rates can be quite expensive, and wireless communication
    consumes a lot of energy, so they are not feasible for use in all situations.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 移动宽带调制解调器通过蜂窝网络（尽管也可以通过卫星连接）提供无线互联网连接。它们可以从世界上几乎任何地方传输数据，尽管连接性取决于当地的可用性和条件。它们提供即时数据的便利性。然而，数据费用可能相当昂贵，无线通信消耗大量能源，因此并非在所有情况下都可行。
- en: IoT device management
  id: totrans-203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: IoT 设备管理
- en: Many platforms exist for communicating with IoT devices, managing their operation,
    and collecting data from them. Using them typically involves integrating either
    libraries or APIs into your embedded software. The software then connects with
    a cloud server that you can use to control the device.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 许多平台用于与 IoT 设备通信、管理其操作并从中收集数据。通常需要将库或 API 集成到您的嵌入式软件中。然后，软件将连接到云服务器，您可以用它来控制设备。
- en: These platforms can be convenient for collecting sensor data, especially in
    brownfield deployments where device management software may already be in use.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这些平台可以方便地收集传感器数据，特别是在已经使用设备管理软件的现场部署中。
- en: Data storage and management
  id: totrans-206
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据存储与管理
- en: As you collect your dataset, you’ll need somewhere to store it. This can be
    as simple as comma-separated files on a hard disk—or as complex as a time series
    database designed specifically for storing and querying time series data. We will
    cover some of these options in [“Storing and Retrieving Data”](ch07.html#storing_and_retrieving_data).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 当你收集数据集时，你需要一个地方来存储它。这可以简单到存储在硬盘上的逗号分隔文件，或者复杂到专门设计用于存储和查询时间序列数据的时间序列数据库。我们将在
    [“存储和检索数据”](ch07.html#storing_and_retrieving_data) 中涵盖其中一些选项。
- en: Data storage solutions are designed for various purposes. Some are intended
    to be extremely fast at real-time querying of data, while others are designed
    to be as robust as possible against data loss. For edge AI applications, you’re
    typically dealing with data in a “batch” mode, so performance isn’t usually the
    most important factor. Instead, you should aim for a simple solution that fits
    the type of data you are collecting.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 数据存储解决方案设计用于各种用途。一些旨在在实时查询数据时极为快速，而其他一些则旨在尽可能防止数据丢失。对于边缘 AI 应用程序，通常是批处理模式处理数据，因此性能通常不是最重要的因素。相反，您应该选择适合您收集的数据类型的简单解决方案。
- en: It’s pretty common for AI datasets to be stored in the filesystem, without any
    type of database at all. Filesystems are designed for this type of data, and filesystem
    tools such as those available for the Unix command line can be helpful in manipulating
    it efficiently. Python’s scientific computing ecosystem includes a lot of tools
    that are great at reading data from disk and helping you explore and visualize
    it.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: AI 数据集通常存储在文件系统中，根本不使用任何类型的数据库也很常见。文件系统专为此类数据设计，而类似于 Unix 命令行提供的文件系统工具在有效处理这些数据时非常有用。Python
    的科学计算生态系统包括许多工具，非常擅长从磁盘读取数据，并帮助您探索和可视化数据。
- en: While a fancy database isn’t necessary, storing data in the right format is
    still important. As we will learn in [“Formatting”](ch07.html#data_formatting),
    sensor readings themselves should be stored in an efficient, compact binary representation
    such as [CBOR](https://cbor.io), [NPY](https://oreil.ly/FdGWo), or perhaps [TFRecord](https://oreil.ly/5HZPO)—which
    is specifically designed for high performance during machine learning training.
    Metadata about readings should be stored in separate files (known as *manifest
    files*) or in a simple database. Separating data from metadata in this way allows
    you to efficiently explore and manipulate datasets without reading massive files
    into memory.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然并不需要高级数据库，但以正确格式存储数据仍然很重要。正如我们将在 [“格式化”](ch07.html#data_formatting) 中学到的那样，传感器读数本身应以高效紧凑的二进制表示形式（如
    [CBOR](https://cbor.io)、[NPY](https://oreil.ly/FdGWo) 或可能是 [TFRecord](https://oreil.ly/5HZPO)）存储，后者专为机器学习训练时的高性能而设计。有关读数的元数据应存储在单独的文件（称为*清单文件*）或简单的数据库中。以这种方式将数据与元数据分开存储，可以使您有效地探索和操作数据集，而无需将大文件全部读入内存。
- en: Data pipelines
  id: totrans-211
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据管道
- en: A data pipeline is a process that takes raw data and transforms it for use in
    a task, such as training a machine learning model. It’s the way that data engineers
    automate things like data cleaning and wrangling. A typical data pipeline might
    take raw sensor data, filter it, combine it with other data, and write it into
    the correct format for training a machine learning model.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 数据管道是一个处理原始数据并将其转换为用于特定任务（例如训练机器学习模型）的过程。这是数据工程师自动化数据清洗和整理等任务的方法。典型的数据管道可能会获取原始传感器数据，对其进行过滤，与其他数据结合，并将其写入正确的格式以进行机器学习模型的训练。
- en: Many tools exist for defining data pipelines, some more complex than others.
    Edge AI data pipelines tend to involve very large amounts of relatively simple
    data, so avoid tools that are designed for working with structured data (such
    as data stored in relational databases). Instead of querying capabilities, look
    for high throughput and enough flexibility to run arbitrary signal processing
    algorithms.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 存在许多用于定义数据管道的工具，有些比其他工具更复杂。Edge AI数据管道往往涉及大量相对简单的数据，因此应避免设计用于处理结构化数据（例如存储在关系数据库中的数据）的工具。与查询能力不同，要寻找高吞吐量和足够的灵活性来运行任意信号处理算法。
- en: Many cloud providers have features for running data pipelines in their distributed
    infrastructure. Some end-to-end platforms for edge AI make data pipelines a core
    feature and are designed specifically for the characteristics of sensor data.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 许多云提供商在其分布式基础设施中提供运行数据管道的功能。一些边缘AI的端到端平台将数据管道作为核心功能，并专门为传感器数据的特性设计。
- en: Algorithm Development
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 算法开发
- en: Algorithm development is where most of the tooling complexity lives; there’s
    a real galaxy of software available to help with the process. Some software is
    better suited to edge AI than others.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 算法开发是大多数工具复杂性所在；为此过程提供了丰富的软件资源。一些软件比其他软件更适合边缘AI应用。
- en: Mathematical and scientific computing libraries
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数学和科学计算库
- en: 'The Python community has created some legitimate marvels of software engineering
    in the form of various open source libraries for performing mathematics and analysis
    of numbers. Some of the most important ones are:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: Python社区创造了一些非常出色的软件工程奇迹，以各种开源库的形式进行数学计算和数据分析。其中一些最重要的是：
- en: '[NumPy](https://numpy.org)'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '[NumPy](https://numpy.org)'
- en: NumPy describes itself as “the fundamental package for scientific computing
    with Python,” and it’s absolutely true. It provides the high-performance backbone
    for most Python-based numerical computing, and it has a wonderful API that lets
    you do complex things to large arrays of numbers with minimal effort. Its file
    format, NPY, is a convenient way to store sensor data.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy自称为“用Python进行科学计算的基础包”，这完全正确。它为大多数基于Python的数值计算提供了高性能的支持，并且具有出色的API，使您可以以最少的努力对大量数字数组执行复杂操作。其文件格式NPY是存储传感器数据的便捷方式。
- en: '[pandas](https://pandas.pydata.org)'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '[pandas](https://pandas.pydata.org)'
- en: What NumPy is to arrays, pandas is to tables of data. It provides an almost
    magically intuitive syntax for querying and transforming any information that
    can be organized into rows and columns. Pandas works with NumPy, so you can use
    it to help explore your sensor data; it’s super-fast.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy对于数组的作用，就像pandas对于数据表格一样。它提供了一种几乎神奇直观的语法，用于查询和转换任何可以组织成行和列的信息。Pandas与NumPy兼容，因此您可以使用它来帮助探索您的传感器数据；速度超快。
- en: '[SciPy](https://scipy.org)'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '[SciPy](https://scipy.org)'
- en: SciPy provides a collection of fast implementations of algorithms that are essential
    to scientific computing. It’s used heavily in developing DSP algorithms, and it’s
    the magic that powers many other tools.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: SciPy提供了一系列快速实现的算法，这些算法对于科学计算至关重要。它在开发DSP算法中被广泛使用，并且是许多其他工具的核心。
- en: '[scikit-learn](https://scikit-learn.org/stable)'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '[scikit-learn](https://scikit-learn.org/stable)'
- en: The library scikit-learn, built using NumPy and SciPy, provides a huge library
    of implementations of machine learning algorithms, along with the tools needed
    to feed them with processed data and evaluate their performance. Its API is designed
    so that you can plug its components together interchangeably, meaning you can
    easily compare and combine different algorithms. It’s the gold standard for classical
    machine learning in Python, and its data processing and evaluation tools are often
    used even when training deep learning models with other frameworks.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 NumPy 和 SciPy 构建的 scikit-learn 库提供了大量的机器学习算法实现，以及用于提供经过处理的数据并评估其性能所需的工具。其
    API 设计使得可以互换地组合其组件，这意味着可以轻松比较和组合不同的算法。它是 Python 中经典机器学习的黄金标准，即使在使用其他框架训练深度学习模型时，其数据处理和评估工具也经常被使用。
- en: Data visualization
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据可视化
- en: When working with data, visualization is an essential tool—especially when the
    data concerned is digital signals. Graphs and charts allow us to represent and
    interpret numeric information that would otherwise be incomprehensible. The Python
    ecosystem has some fantastic libraries for visualizing data. They can be quite
    complex to get to grips with—especially if you want to customize visualizations
    beyond the provided defaults—but once you get the hang of them they can quickly
    turn rows of numbers into clear insight.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理数据时，可视化是一种必不可少的工具——特别是涉及数字信号的数据。图形和图表使我们能够表示和解释数字信息，否则这些信息将难以理解。Python 生态系统中有一些出色的数据可视化库。它们可能非常复杂，尤其是如果您想要超越提供的默认设置来定制可视化效果时，但一旦掌握它们，它们可以迅速将数列转化为清晰的见解。
- en: The two most common libraries are [Matplotlib](https://matplotlib.org) and [seaborn](https://seaborn.pydata.org).
    Matplotlib provides a million different ways to create data visualizations; it’s
    commonly used to create the figures in scientific publications. Its syntax can
    be a little challenging, but it’s so popular that a quick web search will usually
    help you figure out what you’re trying to do.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的两个库是[Matplotlib](https://matplotlib.org)和[seaborn](https://seaborn.pydata.org)。Matplotlib
    提供了许多不同的方法来创建数据可视化；它通常用于创建科学出版物中的图表。其语法可能有点具有挑战性，但由于其广泛流行，通常可以通过快速的网络搜索帮助您解决问题。
- en: Seaborn is built on top of Matplotlib and is designed to tame some of the complexity,
    making it easier to build attractive visualizations like the one in [Figure 5-2](#seaborn_plot)
    without getting tangled in difficult APIs. It’s made specifically to pair well
    with pandas.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn 是建立在 Matplotlib 之上的，旨在简化一些复杂性，使得像[图 5-2](#seaborn_plot)中那样的吸引人的可视化更加容易，而不会陷入复杂的
    API 中。它专门设计与 pandas 搭配使用。
- en: '![A seaborn plot visualizing various measurements from the iris dataset.](assets/aiae_0502.png)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![一个 seaborn 图表，可视化鸢尾花数据集中的各种测量结果。](assets/aiae_0502.png)'
- en: Figure 5-2\. This plot shows the ranges and means for various columns in a dataset
    of plant measurements; it’s one of the visualizations in [seaborn’s example gallery](https://oreil.ly/uPOl0)
  id: totrans-232
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-2。该图显示了植物测量数据集中各列的范围和均值；这是[seaborn 示例画廊](https://oreil.ly/uPOl0)中的一个可视化实例。
- en: Seaborn and Matplotlib output image files—but some visualization libraries,
    such as [Plotly](https://plotly.com/python), produce interactive visualizations
    that can be explored dynamically.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: Seaborn 和 Matplotlib 输出图像文件，但某些可视化库，如[Plotly](https://plotly.com/python)，生成可以动态探索的交互式可视化。
- en: Interactive computing environments
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 交互式计算环境
- en: Edge AI development involves a lot of exploration that lives outside of the
    context of routine software engineering. Exploratory data analysis, digital signal
    processing, and machine learning all have a workflow that involves trying different
    ideas and quickly visualizing the results.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘 AI 开发涉及许多超出常规软件工程上下文的探索。探索性数据分析、数字信号处理和机器学习都涉及尝试不同的想法并快速可视化结果的工作流程。
- en: Various interactive environments exist for this purpose. Rather than just running
    a script and writing the results to a file or having to build an entire web application
    just to express information visually, interactive computing environments allow
    code and visualizations to exist side by side in the same editor.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 存在各种交互式环境来实现这一目的。与仅运行脚本并将结果写入文件或必须构建整个 Web 应用程序以表达信息视觉化不同，交互式计算环境允许代码和可视化并存于同一编辑器中。
- en: The most important interactive environment for Python code is called [Jupyter
    Notebook](https://jupyter.org). Inside a notebook you can write and run Python
    code, and the output of the code is displayed alongside. This includes any visualizations
    you generate using libraries such as Matplotlib—as seen in [Figure 5-3](#jupyter_screenshot).
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: Python 代码最重要的交互式环境称为 [Jupyter Notebook](https://jupyter.org)。在笔记本中，您可以编写和运行
    Python 代码，并且代码的输出会显示在旁边。这包括使用诸如 Matplotlib 等库生成的任何可视化效果，如 [图 5-3](#jupyter_screenshot)
    所示。
- en: '![A screenshot from a Jupyter notebook rendered by GitHub.](assets/aiae_0503.png)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![GitHub 渲染的 Jupyter 笔记本截图。](assets/aiae_0503.png)'
- en: Figure 5-3\. A screenshot from a Jupyter Notebook, showing a mixture of rich
    text, code, and the output of the code; the featured notebook is from the TensorFlow
    Lite for Microcontrollers [Hello World example](https://oreil.ly/a976F)
  id: totrans-239
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-3\. 来自 Jupyter Notebook 的截图，显示了丰富文本、代码以及代码的输出；所展示的笔记本来自 TensorFlow Lite
    for Microcontrollers 的 [Hello World 示例](https://oreil.ly/a976F)
- en: This allows you to build interactive living documents that contain both the
    implementation of algorithms and the results of running them. They’re valuable
    as both an interactive tool for experimentation and as documentary evidence of
    the work that you’ve done. A common workflow is to experiment with algorithms
    in a notebook until you find the best candidate, then port the code into regular
    Python scripts once you know it works well.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 这使您能够构建交互式的动态文档，其中包含算法的实现和运行结果。它们既是实验的交互工具，也是展示您所做工作的文档证据。常见的工作流程是在笔记本中尝试算法，直到找到最佳候选者，然后一旦确认代码运行良好，再将其移植到常规的
    Python 脚本中。
- en: Jupyter can be run locally, but there are also Jupyter-based hosted environments.
    One of these is [Google Colab](https://oreil.ly/eA4Mb), and another is [Amazon
    SageMaker](https://oreil.ly/GxOs-). Both can be used without cost but will provide
    additional compute for a fee.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter 可以在本地运行，但也有基于 Jupyter 的托管环境。其中之一是 [Google Colab](https://oreil.ly/eA4Mb)，另一个是
    [Amazon SageMaker](https://oreil.ly/GxOs-)。这两者都可以免费使用，但如果需要额外计算资源则需付费。
- en: Another common environment for interactive computing is [MATLAB](https://oreil.ly/NJ7Pr),
    which combines a similar interactive environment with its own programming language.
    It’s common in academia and engineering, but as a closed-source commercial product
    that costs money to license, it’s less popular with software engineers. It’s quite
    likely that those with a background adjacent to electrical engineering are familiar
    with MATLAB, including DSP engineers.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个常见的交互式计算环境是 [MATLAB](https://oreil.ly/NJ7Pr)，它结合了类似的交互式环境和自己的编程语言。在学术界和工程领域很常见，但作为需要付费许可的闭源商业产品，相比于软件工程师而言流行度较低。那些有电子工程背景的人通常熟悉
    MATLAB，包括 DSP 工程师。
- en: There’s even an interactive environment designed specifically for edge AI. The
    [OpenMV IDE](https://oreil.ly/f0-KB) is an open source product created by the
    OpenMV team to support development of machine vision applications. It makes it
    easy to test and implement algorithms that interpret visual information, which
    can subsequently be deployed to both OpenMV’s hardware, and to other targets.
    The OpenMV IDE is unique in that it can be connected to a camera-equipped hardware
    device and display the results of algorithms running in real time.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 甚至还有一种专门设计用于边缘 AI 的交互式环境。[OpenMV IDE](https://oreil.ly/f0-KB) 是由 OpenMV 团队创建的开源产品，支持机器视觉应用的开发。它能够轻松测试和实现解释视觉信息的算法，随后可以部署到
    OpenMV 的硬件设备和其他目标上。OpenMV IDE 的独特之处在于，它可以连接到装有摄像头的硬件设备，并实时显示算法运行的结果。
- en: Digital signal processing
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数字信号处理
- en: DSP algorithm development is typically performed in Python or MATLAB. Either
    environment can be used, with individual DSP engineers typically preferring one
    over the other.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: DSP 算法开发通常在 Python 或 MATLAB 中进行。个别 DSP 工程师通常更喜欢其中的一种环境。
- en: In Python, SciPy’s [`scipy.signal`](https://oreil.ly/UwJsO) module provides
    implementations of a lot of important DSP algorithms. In MATLAB, the [signal processing](https://oreil.ly/X8umU)
    and [image processing](https://oreil.ly/MYpwC) toolboxes are very helpful.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，SciPy 的 [`scipy.signal`](https://oreil.ly/UwJsO) 模块提供了许多重要的 DSP 算法的实现。在
    MATLAB 中，[信号处理](https://oreil.ly/X8umU) 和 [图像处理](https://oreil.ly/MYpwC) 工具箱非常有帮助。
- en: MATLAB has some nice GUI-based tools that reduce the amount of programming required
    for algorithm development, but Python has the advantage of being directly compatible
    with the toolchains used for training machine learning models—as well as being
    free.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: MATLAB 拥有一些不错的基于 GUI 的工具，可以减少算法开发所需的编程量，但 Python 的优势在于可以直接与用于训练机器学习模型的工具链兼容，而且是免费的。
- en: An increasingly popular third choice is [GNU Octave](https://www.octave.org),
    designed to be a free, open source alternative MATLAB.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 越来越受欢迎的第三选择是 [GNU Octave](https://www.octave.org)，旨在成为 MATLAB 的免费开源替代品。
- en: Deep learning frameworks
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 深度学习框架
- en: 'The ecosystem of deep learning tools is dominated by two wildly popular open
    source frameworks, written for Python: [TensorFlow](https://tensorflow.org), created
    by Google, and [PyTorch](https://pytorch.org), created by Meta.^([9](ch05.html#idm45988814058000))
    Each framework originated as an in-house system for training deep learning models,
    and they both reflect the priorities of their respective sponsors.'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习工具生态系统主要由两个广受欢迎的开源框架主导，均为用于 Python 编写：[TensorFlow](https://tensorflow.org)，由
    Google 创建，以及 [PyTorch](https://pytorch.org)，由 Meta 创建。^([9](ch05.html#idm45988814058000))
    每个框架最初都是用于内部训练深度学习模型的系统，并反映了各自赞助商的优先事项。
- en: Deep learning frameworks are different from typical software libraries (like
    NumPy or scikit-learn) in that they attempt to provide entire suites of tools
    under a single banner. TensorFlow and PyTorch both include systems for defining
    and training machine learning models, handling data, coordinating distributed
    systems, deploying to different types of compute, and much more.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习框架不同于典型的软件库（如 NumPy 或 scikit-learn），它们试图在单一平台下提供整套工具。TensorFlow 和 PyTorch
    都包含用于定义和训练机器学习模型、处理数据、协调分布式系统、部署到不同类型计算平台等系统。
- en: Example 5-1\. A simple deep learning model architecture being defined and trained
    using Keras, the high level API of TensorFlow
  id: totrans-252
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 示例 5-1\. 使用 Keras 定义和训练简单的深度学习模型架构，Keras 是 TensorFlow 的高级 API。
- en: '[PRE0]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The history of both tools has led to TensorFlow being the primary framework
    for industry, while PyTorch is the preferred tool of deep learning researchers.^([10](ch05.html#idm45988814050064))
    A big part of this is due to the TensorFlow ecosystem having more options available
    for model deployment, and this is especially relevant for edge AI.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 两者工具的历史使得 TensorFlow 成为工业界的主要框架，而 PyTorch 则是深度学习研究人员首选的工具。^([10](ch05.html#idm45988814050064))
    其中很大一部分原因是 TensorFlow 生态系统中有更多模型部署选项可用，对于边缘人工智能尤为重要。
- en: At the time of writing, the majority of tools for optimizing models for efficiency
    and deploying them to edge devices have been written to integrate with the TensorFlow
    ecosystem. TensorFlow and PyTorch have different formats for storing models, and
    while there are ways to convert between them, it isn’t a straightforward process.^([11](ch05.html#idm45988814946032))
    This means that the majority of ML engineers working in edge AI currently use
    TensorFlow.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，优化模型效率并将其部署到边缘设备的工具大多都是为了与 TensorFlow 生态系统集成。TensorFlow 和 PyTorch 在模型存储方面有不同的格式，虽然有转换方式，但并非一蹴而就的过程。^([11](ch05.html#idm45988814946032))
    这意味着目前从事边缘人工智能的大多数机器学习工程师都使用 TensorFlow。
- en: Since PyTorch is the framework of choice for researchers, many of the newest
    model architectures are available first in a PyTorch format. This can be frustrating
    for industry developers who are using TensorFlow for its deployment capabilities.
    Fortunately, most of the researchers focusing on producing smaller, more efficient
    models that are suited for edge deployment are doing so within the TensorFlow
    ecosystem. The area where model incompatibility is most frustrating is in visual
    object detection since the training code for object detection models tends to
    be complex and difficult to port from one framework to another.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 PyTorch 是研究人员的首选框架，许多最新的模型架构首先以 PyTorch 格式发布。这对于使用 TensorFlow 进行部署的工业开发人员可能会感到沮丧。幸运的是，大多数专注于开发适合边缘部署的更小更高效模型的研究人员都在
    TensorFlow 生态系统内进行。在视觉对象检测领域，模型不兼容性最令人沮丧，因为对象检测模型的训练代码往往复杂且难以从一个框架移植到另一个框架。
- en: At the time of writing, TensorFlow is the best choice of framework for edge
    AI development. Developers using PyTorch will struggle with a complex and unreliable
    conversion process when they attempt to deploy their models. It will be interesting
    to see how this evolves over time as the PyTorch ecosystem matures.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，TensorFlow 是边缘人工智能开发的最佳框架选择。使用 PyTorch 的开发者在尝试部署模型时将面临复杂且不可靠的转换过程。随着
    PyTorch 生态系统的成熟，未来其如何发展将非常有趣。
- en: Model compression and optimization
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 模型压缩和优化
- en: Edge devices typically require small, efficient models—especially in a deep
    learning context, where parameter count and computational requirements can scale
    up fast. In [“Compression and optimization”](ch04.html#compression_and_optimization),
    we learned about the various techniques available for improving the performance
    of models. Some of them are applied during training, while others happen afterwards.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘设备通常需要小型、高效的模型 —— 特别是在深度学习的背景下，参数数量和计算需求可能会迅速增长。在[“压缩和优化”](ch04.html#compression_and_optimization)中，我们学习了一些可用于提升模型性能的各种技术。其中一些技术是在训练过程中应用的，而另一些则是在训练后进行的。
- en: Compression and optimization tools are generally available either as part of
    deep learning frameworks or by hardware vendors whose hardware supports particular
    optimizations. The [TensorFlow Lite converter](https://oreil.ly/P5VHY) has become
    the de facto standard for operator fusion and basic quantization, with the TensorFlow
    Lite model file format becoming close to a standard in the industry.^([12](ch05.html#idm45988808833312))
    Still in the TensorFlow ecosystem, the [TensorFlow Model Optimization Toolkit](https://oreil.ly/ASl_h)
    provides a collection of open source tools that cover other types of optimization
    and compression.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 压缩和优化工具通常作为深度学习框架的一部分提供，或者由硬件供应商提供，其硬件支持特定的优化。[TensorFlow Lite 转换器](https://oreil.ly/P5VHY)已成为运算融合和基本量化的事实标准，TensorFlow
    Lite 模型文件格式在行业内接近成为标准。^([12](ch05.html#idm45988808833312)) 同样在 TensorFlow 生态系统中，[TensorFlow
    模型优化工具包](https://oreil.ly/ASl_h)提供了一套开源工具，涵盖了其他类型的优化和压缩。
- en: 'It’s worth remembering that most optimization approaches also require special
    tooling at inference time, covered later in the sidebar [“Inference and Model
    Optimization”](#inference_optimizations). At the time of writing the best supported
    optimization approach is quantization, with 8-bit quantized operator implementations
    widely available. Other techniques are less well supported, with sparsity being
    the biggest red herring: it sounds impressive, but there’s currently very little
    hardware that supports it.'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 值得记住的是，大多数优化方法在推断时也需要特定的工具支持，后文将在侧边栏[“推断和模型优化”](#inference_optimizations)中进行详细讨论。目前，最受支持的优化方法是量化，广泛支持8位量化运算符实现。其他技术支持较少，其中稀疏性是一个最大的误导：听起来很引人注目，但目前几乎没有硬件支持它。
- en: Experiment tracking
  id: totrans-262
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实验跟踪
- en: Algorithm development is an iterative, exploratory process, and over the course
    of a project you’re likely to make hundreds or thousands of different attempts
    at getting something that works acceptably well. It’s important to keep things
    scientific, testing ideas systematically rather than just making random changes
    and hoping for the best. To achieve this, you’ll need some kind of system for
    tracking experiments.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 算法开发是一个迭代的、探索性的过程，在项目的过程中，你可能会尝试数百甚至数千次不同的方法来找到一个可以令人满意的解决方案。保持科学性很重要，系统地测试想法，而不是随意进行修改并希望得到最佳结果。为了实现这一点，您需要一种跟踪实验的系统。
- en: 'A typical experiment might involve taking a specific set of data samples, applying
    a particular DSP algorithm, using the features to train a machine learning model
    with a unique set of hyperparameters, and then testing the model on a standard
    test dataset. This situation has a lot of variables: the choice of samples, the
    DSP algorithm, the model, and its parameters.'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 一个典型的实验可能涉及采集特定的数据样本，应用特定的DSP算法，使用这些特征训练一个具有独特超参数集的机器学习模型，然后在标准测试数据集上测试该模型。这种情况涉及许多变量：样本的选择、DSP算法、模型及其参数。
- en: 'Experiment tracking tools are designed to keep a log of which experiments are
    run, how their variables are set up, and what the results are. They try to organize
    what would otherwise be an unreliable, informal process of taking notes in a notebook
    and trying not to forget any details. Experiment trackers can also store the artifacts
    that result from experiments: training scripts, datasets, and trained models.
    This is helpful in understanding and reproducing your work at a later stage.'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 实验追踪工具旨在记录运行的实验、变量设置以及结果。它们试图组织起本来可能是不可靠的、非正式的笔记过程，并努力不漏掉任何细节。实验追踪器还可以存储由实验产生的工件：训练脚本、数据集和训练模型。这有助于在后期理解和重现您的工作。
- en: Experiment trackers are available as both open source packages and hosted commercial
    products. One of the simplest options is [TensorBoard](https://oreil.ly/nOaGP),
    an official part of the TensorFlow ecosystem.^([13](ch05.html#idm45988808822496))
    TensorBoard provides a simple web interface for visualizing and comparing the
    logs collected during training runs, along with some very powerful tools for optimizing
    and debugging training code. It’s useful for keeping track of basic experiments,
    although it isn’t designed as a persistent datastore that will last the lifetime
    of a project, and it doesn’t work well if you are running very large numbers of
    trials.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 实验追踪器既可以作为开源包，也可以作为托管的商业产品提供。其中一个最简单的选择是[TensorBoard](https://oreil.ly/nOaGP)，它是TensorFlow生态系统的官方部分^([13](ch05.html#idm45988808822496))。TensorBoard提供了一个简单的Web界面，用于可视化和比较训练运行期间收集的日志，并提供了一些非常强大的工具，用于优化和调试训练代码。它对于跟踪基本实验很有用，尽管它并非设计为一个将持续存在项目生命周期的持久性数据存储，且在运行大量试验时表现不佳。
- en: A more sophisticated open source option is [MLflow](https://mlflow.org). It’s
    a complex web application, backed by a database that can track experiments, store
    trained models, and package data science code so that experiments can be reproduced
    easily. It’s better suited to long-term use than TensorBoard, and it can scale
    to track many thousands of experiments. It doesn’t have the same optimization
    and debugging features as TensorBoard, which remains the tool of choice for improving
    the computational performance of training.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更复杂的开源选项是[MLflow](https://mlflow.org)。它是一个复杂的Web应用程序，由一个数据库支持，可以追踪实验，存储训练模型，并打包数据科学代码，以便轻松重现实验。它比TensorBoard更适合长期使用，并且可以扩展以跟踪成千上万个实验。它没有TensorBoard的优化和调试功能，后者仍然是优化训练计算性能的首选工具。
- en: Many commercial products exist to help with experiment tracking. A notable option
    is [Weights & Biases](https://wandb.ai/site), which has a simple API and a well-designed
    web interface (along with many features that fit into the MLOps category, which
    we’ll explore in [“Machine learning operations (MLOps)”](#mlops_tools)). A nice
    benefit of commercial tools is that you don’t have to host them on your own infrastructure;
    you just pay a monthly fee and someone else performs the setup and maintenance
    and makes sure they are secure.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 存在许多商业产品可帮助实验追踪。一个显著的选择是[Weights & Biases](https://wandb.ai/site)，它具有简单的API和精心设计的Web界面（以及许多适合于MLOps类别的特性，我们将在[“机器学习运营（MLOps）”](#mlops_tools)中探讨）。商业工具的一个好处是你无需托管它们在自己的基础设施上；你只需支付月费，由其他人进行设置和维护，并确保它们的安全性。
- en: Automated machine learning (AutoML)
  id: totrans-269
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动化机器学习（AutoML）
- en: Once you begin tracking experiments using software, it’s a simple step to start
    running them from software, too. AutoML tools are designed to automate the process
    of iteratively exploring a design space. Given a dataset and some constraints,
    they’ll design experiments to test different combinations of variables in order
    to try and find the best model or algorithm.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您开始使用软件跟踪实验，从软件中运行它们也是一种简单的步骤。自动机器学习（AutoML）工具旨在自动化迭代探索设计空间的过程。给定数据集和一些约束条件，它们将设计实验来测试不同变量组合，以尝试找到最佳模型或算法。
- en: This process is called *hyperparameter optimization*,^([14](ch05.html#idm45988808810832))
    and it’s a highly effective way to find the best model for a particular dataset.
    There are many different algorithms that guide hyperparameter optimization, from
    a simple grid search (where every possible combination of variable is tried in
    turn) to named algorithms such as [Hyperband](https://oreil.ly/OOeNa) that aim
    to intelligently control the process for maximum efficiency.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程被称为*超参数优化*^([14](ch05.html#idm45988808810832))，它是找到特定数据集最佳模型的一种高效方法。有许多不同的算法指导超参数优化，从简单的网格搜索（逐个尝试每个可能的变量组合）到像[Hyperband](https://oreil.ly/OOeNa)这样的具名算法，旨在智能控制过程以达到最大效率。
- en: 'AutoML isn’t a magic wand that will solve problems for you. It still takes
    domain expertise to frame a problem and set up the design space in the correct
    way. What AutoML *can* do is take the guesswork and tedium out of the ML workflow:
    it’s a way to automate the trial and error while you focus on more productive
    things.'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: AutoML 并非一个可以为你解决问题的魔法棒。在正确的方式下，仍然需要领域专业知识来框定问题并设置设计空间。AutoML *可以* 做的是在你专注于更有生产力的事情时，消除机器学习工作流程中的猜测和单调乏味。
- en: Some AutoML systems just take a design space as input and output a list of experiments
    to run, while others take it a step further toward the MLOps world (see the next
    section, [“Machine learning operations (MLOps)”](#mlops_tools)) by orchestrating
    the process of running the experiments using distributed computing techniques.
    A particularly complex flavor of AutoML is neural architecture search (NAS), which
    incorporates machine learning into the process of exploring the design space.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 有些 AutoML 系统仅将设计空间作为输入，并输出要运行的实验列表，而其他一些则更进一步走向 MLOps 领域（参见下一节，“[机器学习运维（MLOps）](#mlops_tools)”），通过编排使用分布式计算技术运行实验的过程。一种特别复杂的
    AutoML 变体是神经架构搜索（NAS），它将机器学习融入到探索设计空间的过程中。
- en: In terms of specifics, we recommend [Ray Tune](https://oreil.ly/8eGs9) as a
    popular open source framework for hyperparameter tuning that is able to orchestrate
    the task of running hyperparameter optimization within your distributed infrastructure.
    [Sweeps by Weights & Biases](https://oreil.ly/-tRCq) is a commercial, hosted product
    that helps orchestrate experiments on your own hardware.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 具体而言，我们推荐 [Ray Tune](https://oreil.ly/8eGs9) 作为一种流行的开源框架，用于超参数调整，能够在您的分布式基础设施中编排运行超参数优化的任务。[Weights
    & Biases 的 Sweeps](https://oreil.ly/-tRCq) 是一款商业化的托管产品，帮助编排在您自己的硬件上进行实验。
- en: 'AutoML is especially powerful for edge AI. This is because models designed
    for edge devices tend to be small and quick to train, which makes it easy to try
    a lot of different options. It’s also especially important, since in edge AI we
    are optimizing for more than just model accuracy: we also need to find the smallest,
    fastest, and lowest power-consuming models that we can.'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: AutoML 在边缘 AI 方面尤为强大。这是因为为边缘设备设计的模型往往小巧且训练速度快，这使得可以尝试许多不同的选项变得容易。这也特别重要，因为在边缘
    AI 中，我们优化的不仅仅是模型准确性：我们还需要找到尽可能小、快速和低功耗的模型。
- en: Typical AutoML tools don’t account for these things, but some end-to-end edge
    AI platforms do.^([15](ch05.html#idm45988808801312))
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的 AutoML 工具不考虑这些因素，但一些端到端的边缘 AI 平台却考虑到了^([15](ch05.html#idm45988808801312))。
- en: Machine learning operations (MLOps)
  id: totrans-277
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 机器学习运维（MLOps）
- en: The machine learning workflow has a lot of moving parts, and MLOps is the art
    and science of keeping track of them all. It encompasses many of the types of
    tools that we’ve covered in this chapter, from data storage systems to experiment
    tracking and AutoML capabilities.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习工作流程涉及许多活动部分，而 MLOps 则是跟踪它们的全部艺术和科学。它涵盖了本章中我们讨论过的许多类型的工具，从数据存储系统到实验跟踪和 AutoML
    能力。
- en: As an engineer on an ML project, you’re doing MLOps whether you’re conscious
    of it or not. Even in the simplest projects, keeping track of your dataset, training
    scripts, and your current best model can be a challenge. In more complex projects,
    where every part of the workflow is constantly evolving as the result of feedback
    loops, keeping a handle on what is going on can be nearly impossible without effective
    tools.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个机器学习项目的工程师，无论你是否意识到，你都在进行 MLOps。即使在最简单的项目中，跟踪数据集、训练脚本和当前最佳模型都可能是一个挑战。在更复杂的项目中，每个工作流部分都在不断地根据反馈循环演变，如果没有有效的工具，掌握进展几乎是不可能的。
- en: 'An MLOps system can be built from individual components: you may choose one
    tool for dataset management, another tool for experiment tracking, and a different
    tool to store your best models. It is equally common to use comprehensive frameworks
    that take care of every stage in the process. It’s also possible to use a mixture
    of comprehensive frameworks and whichever individual tools fit your specific needs.'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 MLOps 系统可以由各个组件构建：你可以选择一个工具来管理数据集，另一个工具来跟踪实验，以及另一种工具来存储最佳模型。同样常见的是使用综合框架来处理整个过程的每个阶段。还有可能混合使用综合框架和符合特定需求的各种个别工具。
- en: MLOps is a big area that encompasses many categories of tools, including some
    that we’ve seen earlier in this chapter. The website [*ml-ops.org*](https://ml-ops.org),
    a great resource for understanding MLOps, says that MLOps includes the following
    tasks:^([16](ch05.html#idm45988808784496))
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: MLOps 是一个包括许多工具类别的广泛领域，其中一些我们在本章前面已经看过。网站[*ml-ops.org*](https://ml-ops.org)，是理解
    MLOps 的好资源，指出 MLOps 包括以下任务：^([16](ch05.html#idm45988808784496))
- en: Data engineering
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据工程
- en: Version control of data, ML models, and code
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据、ML 模型和代码的版本控制
- en: Continuous integration and continuous delivery pipelines
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续集成和持续交付管道
- en: Automating deployments and experiments
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化部署和实验
- en: Model performance assessment
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型性能评估
- en: Model monitoring in production
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在生产中监控模型
- en: 'Since edge AI is a new field, most MLOps systems are designed with the assumption
    that models will be “served” by web services, not deployed to edge devices. The
    unique nature of edge AI development involves some additional tasks, including:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 由于边缘 AI 是一个新领域，大多数 MLOps 系统设计时假设模型将通过网络服务“服务”，而非部署到边缘设备。边缘 AI 开发的独特性质涉及一些额外任务，包括：
- en: Capture of data from devices and sensors
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从设备和传感器中捕获数据
- en: Digital signal processing and rule-based algorithms
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字信号处理和基于规则的算法
- en: Estimation of on-device performance^([17](ch05.html#idm45988808773392))
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 估计设备性能^([17](ch05.html#idm45988808773392))
- en: Model compression and optimization
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型压缩和优化
- en: Conversion and compilation for edge device support
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转换和编译以支持边缘设备
- en: Tracking which model versions are currently in the field
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跟踪当前在现场的模型版本
- en: 'A great way to think about MLOps is as a “stack”: a set of software tools that
    work together to enable development, deployment, and maintenance of an edge AI
    system. The company Valohai created the idea of an [MLOps stack template](https://oreil.ly/MKaon):
    a diagram that shows how all of the components of the MLOps stack fit together.
    Their original stack template is based on a server-side context, but [Figure 5-4](#mlops_stack_template)
    shows the idea adapted to suit edge ML.'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: MLOps 的一个很好的思考方式是将其视为一个“堆栈”：一组软件工具共同工作，以实现边缘 AI 系统的开发、部署和维护。公司 Valohai 提出了一个[MLOps
    堆栈模板](https://oreil.ly/MKaon)的概念：一个显示 MLOps 堆栈所有组件如何配合的图表。他们最初的堆栈模板基于服务器端上下文，但[图 5-4](#mlops_stack_template)展示了适应边缘
    ML 的思路。
- en: '![A block diagram showing the MLOps stack for edge ML.](assets/aiae_0504.png)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
  zh: '![显示边缘 ML 的 MLOps 堆栈的块图](assets/aiae_0504.png)'
- en: Figure 5-4\. A stack template for ML at the edge; you’ll need a solution for
    each of the boxes, and probably some others depending on your particular use case
  id: totrans-297
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-4\. 适用于边缘 ML 的堆栈模板；你需要为每个框框找到一个解决方案，并可能根据特定用例选择其他解决方案。
- en: Over the course of development, you might choose to incrementally assemble your
    stack from various software components. On the other hand, you may benefit from
    working with a comprehensive MLOps platform that is designed specifically for
    edge AI, as we’ll encounter in [“End-to-End Platforms for Edge AI”](#end_to_end_platforms).
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发过程中，你可能选择逐步从各种软件组件中组装你的堆栈。另一方面，你可能受益于与专为边缘 AI 设计的综合 MLOps 平台合作，正如我们在[“面向边缘
    AI 的端到端平台”](#end_to_end_platforms)中所见。
- en: 'MLOps is a massive topic, too extensive to cover fully in a book about edge
    AI. If you’re looking to dig deeper, we recommend the following resources—with
    the caveat that most MLOps content is written with server-side models, not edge
    AI, in mind:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: MLOps 是一个广泛的主题，在一本关于边缘 AI 的书中无法完全覆盖。如果你想深入了解，我们推荐以下资源——需要注意的是，大部分 MLOps 内容是为服务器端模型而非边缘
    AI 写的：
- en: The website [*ml-ops.org*](https://ml-ops.org).
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网站[*ml-ops.org*](https://ml-ops.org)。
- en: '[*Introducing MLOps*](https://oreil.ly/Ycq8b), a book by Mark Treveil et al.
    (O’Reilly, 2020).'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*介绍 MLOps*](https://oreil.ly/Ycq8b)，作者 Mark Treveil 等人著（O’Reilly，2020）。'
- en: '[Google Cloud’s introduction to MLOps](https://oreil.ly/dng28), an excellent
    technical article.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Google Cloud对MLOps的介绍](https://oreil.ly/dng28)，一篇优秀的技术文章。'
- en: Running Algorithms On-Device
  id: totrans-303
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在设备上运行算法
- en: Designing algorithms and training models requires one set of tools, while another
    is needed to run them efficiently on-device. These include both general-purpose
    C++ libraries and highly efficient implementations that are optimized for specific
    hardware architectures.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 设计算法和训练模型需要一组工具，而在设备上高效运行它们则需要另一组工具。这些包括通用的C++库和针对特定硬件架构优化的高效实现。
- en: Math and DSP libraries
  id: totrans-305
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数学和DSP库
- en: 'Various implementations of common mathematical operations are available, providing
    functionality for both DSP algorithms and deep learning ops—it would be time consuming
    to have to implement these fundamental algorithms from scratch. Some notable examples
    are:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 提供常见数学运算的各种实现，为DSP算法和深度学习运算提供功能。从头开始实现这些基本算法将非常耗时。一些显著的例子包括：
- en: Fast Fourier transforms, used heavily in DSP, such as [KISS FFT](https://oreil.ly/BPyFl)
    and [FFTW](https://www.fftw.org).
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速傅立叶变换，在DSP中广泛使用，如[KISS FFT](https://oreil.ly/BPyFl)和[FFTW](https://www.fftw.org)。
- en: Matrix multiplication libraries such as [gemmlowp](https://oreil.ly/6hCG3) and
    [ruy](https://oreil.ly/WSrv4).
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩阵乘法库，如[gemmlowp](https://oreil.ly/6hCG3)和[ruy](https://oreil.ly/WSrv4)。
- en: Hardware devices often have features designed to improve the performance of
    common algorithms. These are available in hardware-specific libraries, such as
    the [CMSIS DSP Software Library](https://oreil.ly/PkVwj) that provides optimized
    implementations of many popular DSP algorithms for Arm’s Cortex-M and Cortex-A
    hardware.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件设备通常具有改进常见算法性能的功能。这些功能包含在硬件特定的库中，例如为Arm的Cortex-M和Cortex-A硬件提供了许多流行DSP算法的优化实现的[CMSIS
    DSP软件库](https://oreil.ly/PkVwj)。
- en: There are similarly optimized implementations available for deep learning kernels,
    such as the [CMSIS NN Software Library](https://oreil.ly/dLOXy). Equivalents exist
    for many modern processor architectures, including microcontrollers and SoCs.
    When choosing hardware, you should investigate the availability of optimized kernels,
    since they can make a huge (10–100x) difference in latency.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 针对深度学习内核也有类似优化的实现，例如[CMSIS NN软件库](https://oreil.ly/dLOXy)。许多现代处理器架构，包括微控制器和SoC，都有相应的等效实现。在选择硬件时，应注意优化内核的可用性，因为它们可能导致延迟大幅（10–100倍）不同。
- en: Machine learning inference
  id: totrans-311
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 机器学习推断
- en: 'One way to run inference on an edge device is to write a custom program that
    implements a specific deep learning model in code that is hand-optimized for the
    target architecture. However, this would be time consuming and inflexible: you
    wouldn’t be able to reuse your code for new applications or with different hardware,
    and if you made any changes to your model you would have to change your entire
    program.'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 在边缘设备上运行推断的一种方式是编写定制程序，在目标架构上手动优化实现特定的深度学习模型。然而，这将耗费时间且缺乏灵活性：无法将代码重用于新的应用程序或不同的硬件，如果对模型进行任何更改，就必须修改整个程序。
- en: 'Developers have come up with various solutions to avoid this problem.^([18](ch05.html#idm45988808729408))
    The most common approaches are as follows:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员已经提出了各种解决方案来避免这个问题。^([18](ch05.html#idm45988808729408)) 最常见的方法如下：
- en: Interpreters
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 解释器
- en: 'An interpreter (or *runtime*) is a program that reads a file describing a model,
    including both its operations and its parameters, and then uses a set of prewritten
    operators to execute the model’s operations one after the other. Interpreters
    are very flexible: using an interpreter, an identical few lines of code can be
    used to run any model interchangeably. The trade-off is that the process of reading
    and interpreting a model introduces some operational overhead beyond what is required
    for the model’s operations. Interpreters consume additional RAM, ROM, and CPU
    cycles.'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 解释器（或*运行时*）是一个程序，它读取描述模型的文件，包括其操作和参数，然后使用一组预先编写的运算符依次执行模型的操作。解释器非常灵活：使用解释器，可以使用相同的几行代码互换地运行任何模型。但这样做会引入一些操作开销，超出模型操作本身所需的范围。解释器消耗额外的RAM、ROM和CPU周期。
- en: The most widely used interpreters are both from the TensorFlow ecosystem. [TensorFlow
    Lite](https://oreil.ly/vc3-p) was originally designed for cellphones but works
    on many popular SoCs, and [TensorFlow Lite for Microcontrollers](https://oreil.ly/OHQ9a)
    works well on microcontrollers and DSPs. Both of them are implemented in C++,
    but TensorFlow Lite provides Python and Java APIs for convenience. They both benefit
    from operator fusion and quantization provided by the [TensorFlow Lite converter](https://oreil.ly/_ryR8).
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 最广泛使用的解释器都来自于 TensorFlow 生态系统。[TensorFlow Lite](https://oreil.ly/vc3-p)最初是为手机设计的，但在许多流行的
    SoC 上也能运行，而[TensorFlow Lite for Microcontrollers](https://oreil.ly/OHQ9a)则非常适合微控制器和
    DSP。它们都是用 C++ 实现的，但 TensorFlow Lite 提供了 Python 和 Java 的 API 以便使用。它们都受益于由[TensorFlow
    Lite 转换器](https://oreil.ly/_ryR8)提供的操作融合和量化功能。
- en: The kernels used by interpreters can be switched out depending on the device
    being targeted, so highly efficient optimized kernels can be used where available.
    These are readily available for several common devices and architectures.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 解释器使用的内核可以根据目标设备进行切换，因此可以在可用时使用高效优化的内核。这些内核已经为几种常见设备和架构提供。
- en: Code generation compilers
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 代码生成编译器
- en: With a code generation approach, a code-generating compiler takes a model file
    as input and transforms it into a program that implements it. For operator support,
    the program relies on a library of prewritten operators, calling them in the correct
    order and passing the appropriate parameters.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 采用代码生成方法，一个生成代码的编译器以模型文件作为输入，并将其转换为一个实现模型的程序。对于操作符支持，程序依赖于一个预先编写的操作符库，按正确顺序调用它们并传递适当的参数。
- en: 'Code generation provides many of the same benefits as an interpreter-based
    approach but eliminates the majority of the overhead associated with the interpreter
    itself. Code generation may even make use of the wide array of prewritten operators
    available for interpreters: for example, Edge Impulse’s [EON Compiler](https://oreil.ly/GN5oT)
    is compatible with TensorFlow Lite for Microcontrollers kernels.'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 代码生成提供了与基于解释器的方法许多相同的优点，但消除了解释器本身的大部分开销。代码生成甚至可以利用解释器可用的广泛预编写的操作符：例如，Edge Impulse
    的[EON 编译器](https://oreil.ly/GN5oT)兼容 TensorFlow Lite for Microcontrollers 的内核。
- en: Bytecode compilers
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 字节码编译器
- en: It’s possible for a compiler with knowledge of a target to directly generate
    the bytecode that implements a model, applying target-specific optimizations along
    the way. This results in a highly efficient implementation that makes use of whatever
    performancing-enhancing features are available on the silicon. For example, Synaptics’
    [TENSAI Flow neural network compiler](https://oreil.ly/1bP6V) is designed to compile
    models for deployment to Synaptics Katana Edge AI processors.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 如果编译器了解目标的相关知识，它可以直接生成实现模型的字节码，并在此过程中应用特定于目标的优化。这将导致高效的实现，利用硅片上可用的所有性能增强功能。例如，Synaptics
    的[TENSAI Flow 神经网络编译器](https://oreil.ly/1bP6V)专门设计用于编译模型以部署到 Synaptics Katana
    Edge AI 处理器。
- en: Virtual machines
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟机
- en: 'The big downside of the bytecode compiler approach is that a compiler has to
    be written for each device that is going to be targeted, and writing a compiler
    is a difficult task. To get around this problem, some compilers target a so-called
    *virtual machine*: an abstraction layer that sits directly above the hardware
    and provides instructions that map to various low-level processor capabilities.'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 字节码编译器方法的主要缺点是必须为每个要定位的设备编写一个编译器，而编写编译器是一项困难的任务。为了解决这个问题，一些编译器针对所谓的*虚拟机*：一个位于硬件之上的抽象层，提供映射到各种低级处理器功能的指令。
- en: The abstraction layer slightly reduces the efficiency, but the benefits can
    outweigh the drawbacks—although the virtual machine still has to be ported to
    new processors. This approach is used by [Apache TVM](https://tvm.apache.org),
    which also uses an on-device runtime that can iteratively test different implementations
    to find the most efficient.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 抽象层稍微降低了效率，但好处可能会超过缺点——尽管虚拟机仍然需要移植到新处理器上。这种方法被[Apache TVM](https://tvm.apache.org)采用，它还使用在设备上运行时，可以迭代测试不同实现以找到最高效的方式。
- en: Hardware description language
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件描述语言
- en: A newly emerging trend is the use of special compilers to generate hardware
    description language (HDL), the code that describes processor architectures and
    is used to program FPGAs and ASICs. Using these techniques, it is possible to
    implement a model directly in hardware, which can be extremely efficient.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 一种新兴的趋势是使用特殊的编译器生成硬件描述语言（HDL），这是描述处理器体系结构并用于编程FPGA和ASIC的代码。使用这些技术，可以在硬件中直接实现模型，这可以非常高效。
- en: '[CFU Playground](https://oreil.ly/SzHbP) and [Tensil](https://www.tensil.ai)
    are both open source tools that aim to make it easier to design custom accelerators
    using this approach.'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '[CFU Playground](https://oreil.ly/SzHbP) 和 [Tensil](https://www.tensil.ai)
    都是旨在通过这种方法更容易设计定制加速器的开源工具。'
- en: Alternative methods
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 替代方法
- en: Some accelerator chips are programmed using systems that fall outside of the
    normal workflow of code and compilation. For example, some chips with hardware
    implementations of neural network kernels provide an interface via which a model’s
    weights are written directly to a special memory buffer, separately from any application
    code.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 一些加速器芯片是使用系统编程的，不在代码和编译的正常工作流程之外。例如，一些具有神经网络核心硬件实现的芯片提供了一个接口，通过这个接口可以将模型的权重直接写入到特殊的内存缓冲区，与任何应用程序代码分开。
- en: On-device learning
  id: totrans-331
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设备端学习
- en: As we learned in [“On-Device Training”](ch04.html#on_device_training), the data
    and computational requirements of deep learning training means that on-device
    training remains of limited utility. Most of the time, “on-device training” means
    a simple approach that involves calculating the distance between embedding vectors,
    for example if determining whether the embeddings of two fingerprints are a match.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[“On-Device Training”](ch04.html#on_device_training)中学到的，深度学习训练的数据和计算需求意味着设备端训练仍然具有有限的实用性。大多数情况下，“设备端训练”意味着一个简单的方法，例如计算嵌入向量之间的距离，例如确定两个指纹的嵌入是否匹配。
- en: It’s very rare for actual deep learning training to happen on an edge device.
    If you do have a device with the required amount of storage and compute—typically
    an SoC or mobile telephone— [TensorFlow Lite provides some functionality](https://oreil.ly/WDBo7).
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 真正的深度学习训练在边缘设备上发生的情况非常罕见。如果您确实有具备所需存储和计算能力的设备——通常是SoC或移动电话——[TensorFlow Lite提供了一些功能](https://oreil.ly/WDBo7)。
- en: The problem remains that it is incredibly difficult to understand whether a
    model trained on-device is actually performing well. On-device deep learning is
    best avoided unless you have an extremely good reason to require it.^([19](ch05.html#idm45988809332688))
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 问题仍然是很难理解设备端训练的模型是否表现良好。除非有非常充分的理由需要它，否则最好避免设备端深度学习。^([19](ch05.html#idm45988809332688))
- en: 'Federated learning remains a topic of fascination for many people, but as we
    learned earlier in the book it is not a particularly good fit for the vast majority
    of problems. In addition, the tooling around federated learning is still primitive
    and experimental.^([20](ch05.html#idm45988809329312)) Many people feel drawn to
    follow the federated learning rabbit hole and end up wasting time: the chance
    that a project really needs it is very slim. However, if you really feel compelled
    to dig deeper, [TensorFlow Federated](https://oreil.ly/6dxOr) is a good resource.'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 联邦学习仍然是许多人着迷的话题，但正如我们早前在书中学到的那样，它并不特别适合绝大多数问题。此外，围绕联邦学习的工具仍然比较原始和实验性。^([20](ch05.html#idm45988809329312))
    许多人觉得被联邦学习吸引，最终浪费时间：一个项目真正需要它的机会非常渺茫。但是，如果你真的有冲动想深入了解，[TensorFlow Federated](https://oreil.ly/6dxOr)
    是一个很好的资源。
- en: Embedded Software Engineering and Electronics
  id: totrans-336
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 嵌入式软件工程和电子学
- en: Edge AI is a subfield of embedded software engineering, which is closely tied
    to the practical disciplines of electrical engineering and electronics. Each of
    these areas involves multitudes of tools and techniques—there’s no way we’d have
    space in this book to cover them all.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI是嵌入式软件工程的一个子领域，与电气工程和电子学密切相关。每个领域都涉及大量的工具和技术——我们没有足够的空间在本书中覆盖它们所有。
- en: Instead, we’ll step through the parts that specifically matter for developing
    AI at the edge.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我们将逐步介绍在边缘开发AI时特别重要的部分。
- en: Just Getting Started
  id: totrans-339
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 刚刚开始
- en: If you’re prototyping your own edge AI project but don’t have much embedded
    experience, [Arduino](https://www.arduino.cc) and [Arduino Pro](https://www.arduino.cc/pro)
    products are a great place to start. Arduino has created an embedded development
    environment that is easy for beginners to use but still powerful enough for building
    real applications—perfect if you’re an ML engineer beginning to work with edge
    devices, or a newcomer to both fields. The Arduino team have understood the potential
    of the edge AI movement since the very beginning and have contributed a lot to
    its growth.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在原型化自己的边缘AI项目，但没有太多嵌入式经验，[Arduino](https://www.arduino.cc)和[Arduino Pro](https://www.arduino.cc/pro)产品是一个很好的起点。Arduino已经创建了一个对初学者来说易于使用但又足够强大以构建真实应用程序的嵌入式开发环境——如果您是一位开始使用边缘设备的ML工程师，或者是两个领域的新手，这非常完美。Arduino团队从一开始就理解了边缘AI运动的潜力，并为其增长做出了很多贡献。
- en: Embedded hardware tools
  id: totrans-341
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 嵌入式硬件工具（Embedded hardware tools）
- en: Developing embedded software is challenging due to the nature of embedded devices.
    Software is harder to debug when it’s running on a separate device, especially
    one with limited ways to display its internal state. Embedded programs must take
    care of everything from basic hardware integration—it’s common to have to write
    your own drivers for hardware such as sensors—to the complex handshakes of low-level
    communications protocols.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 开发嵌入式软件具有挑战性，因为嵌入式设备的特性。当软件运行在一个有限显示其内部状态方式有限的独立设备上时，调试会更加困难。嵌入式程序必须处理从基本的硬件集成（例如需要为传感器等硬件编写自己的驱动程序）到低级通信协议复杂握手的一切。
- en: 'As such, embedded development requires some tools that would appear unusual
    to other software engineers. Some of these items include:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，嵌入式开发需要一些对其他软件工程师来说可能看起来不寻常的工具。其中一些包括：
- en: Device programmers, which are pieces of hardware that allow a developer to upload
    new programs to an embedded device. They are often device specific.
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备编程器（Device programmers），这些是硬件设备，允许开发者向嵌入式设备上传新程序。它们通常是特定于设备的。
- en: Debug probes, hardware devices that connect to embedded processors and allow
    analysis of a program at runtime. They are also device specific.
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试探针（Debug probes），硬件设备，连接到嵌入式处理器并允许在运行时分析程序。它们也是特定于设备的。
- en: USB to UART adapters, which send and receive arbitrary data between the developer’s
    workstation and the embedded device. They are generic.
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB到UART适配器（USB to UART adapters），在开发者工作站和嵌入式设备之间发送和接收任意数据。它们是通用的。
- en: Multimeters, which measure voltage, current, and resistance and can be used
    to understand the state of an embedded circuit as it is being controlled by a
    program.
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多用表（Multimeters），用于测量电压、电流和电阻，可以帮助理解在程序控制下嵌入式电路的状态。
- en: Oscilloscopes, which measure signals on the device or PCB, expressed as voltage
    over time.
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 示波器（Oscilloscopes），用于测量设备或PCB上的信号，以电压随时间的表达方式。
- en: These tools are necessary in order to reach into, manipulate, and understand
    the states of embedded devices. For example, to test a program is running correctly
    you might have it toggle a specific pin on the processor when it gets to a certain
    point. You would then use a multimeter to measure whether the pin has been toggled.
    Another common way to communicate with an embedded device is via a serial (UART)
    cable, which can send and receive data at a relatively low frequency—but still
    high enough to transfer sensor data in a reasonable timeframe.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具对于深入、操作和理解嵌入式设备的状态至关重要。例如，要测试程序是否正常运行，您可以在处理器达到特定点时让其切换特定引脚。然后您可以使用多用表来测量引脚是否已切换。另一种常见的与嵌入式设备通信的方式是通过串行（UART）电缆，它可以在相对较低的频率下发送和接收数据，但足以在合理时间内传输传感器数据。
- en: Development boards
  id: totrans-350
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开发板（Development boards）
- en: An embedded processor on its own is just a little piece of sand, wrapped in
    plastic. In order to actually do anything, it requires a small constellation of
    other electronic components to be wired up to it. As we saw in [“Boards and Devices”](ch03.html#boards_and_devices),
    development boards (or dev boards) provide a convenient ready-to-go platform that
    includes an embedded processor and various inputs and outputs, often including
    some sensors.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 单独的嵌入式处理器只是包裹在塑料中的一小片砂子。要实际运行它，需要将一小组其他电子组件连接起来。正如我们在[“板和设备”](ch03.html#boards_and_devices)中看到的那样，开发板（或开发板）提供了一个方便的即插即用平台，包括嵌入式处理器和各种输入输出，通常还包括一些传感器。
- en: The goal of a dev board is to allow embedded engineers to evaluate a particular
    chip for suitability for a project, and allow software development to proceed
    without being blocked by the hardware development process. Once a working iteration
    of the product’s own hardware is ready, development can move there. The exception
    is with rapid prototyping platforms, such as [Arduino Pro](https://www.arduino.cc/pro),
    which are designed for use in small-batch production designs.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 开发板的目标是允许嵌入式工程师评估特定芯片是否适合项目，并允许软件开发在不受硬件开发过程阻碍的情况下继续进行。一旦产品自己的硬件的工作迭代准备好，开发可以转移到那里。但快速原型设计平台（例如[Arduino
    Pro](https://www.arduino.cc/pro)）是个例外，它们设计用于小批量生产设计。
- en: Dev boards are available for most families of embedded processors. When deciding
    on hardware, it’s a good idea to obtain a few different dev boards to experiment
    with. For example, you might try to run an early version of your deep learning
    model on a few different dev boards to understand their relative performance.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数嵌入式处理器家族都有开发板可用。在选择硬件时，建议获取几个不同的开发板进行实验。例如，您可以尝试在几个不同的开发板上运行您的深度学习模型的早期版本，以了解它们的性能差异。
- en: Some end-to-end platforms (see [“End-to-End Platforms for Edge AI”](#end_to_end_platforms))
    provide deep integration with dev boards, allowing you to capture data from their
    sensors or deploy and evaluate models without writing a single line of code. This
    can be extremely useful in development and testing.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 一些端到端平台（参见[“端到端平台用于边缘人工智能”](#end_to_end_platforms)）与开发板深度集成，允许您从其传感器捕获数据或部署和评估模型，而无需编写一行代码。这在开发和测试中非常有用。
- en: Embedded software tools
  id: totrans-355
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 嵌入式软件工具
- en: For the purposes of edge AI, embedded software engineering generally means C++
    development. This can be done in your text editor of choice, but it’s also common
    for embedded processor vendors to provide their own integrated development environments
    (IDEs) that integrate neatly with their hardware and make it easier to upload
    and debug code.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 对于边缘人工智能的目的，嵌入式软件工程通常指的是C++开发。这可以在您选择的文本编辑器中完成，但嵌入式处理器供应商通常也会提供他们自己的集成开发环境（IDE），与其硬件完美集成，使上传和调试代码更加简便。
- en: Vendors will often provide SDKs, drivers, and libraries that can be used on
    their hardware to help you access various processor features—but they are not
    always great quality, often provided more as a proof of concept than as production-quality
    code.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 供应商通常会提供SDK、驱动程序和库，可用于其硬件，以帮助您访问各种处理器功能，但它们的质量不一定很高，通常更像是概念验证而非生产质量的代码。
- en: To reduce the amount of boilerplate code you need to write, you may choose to
    use a real-time operating system (RTOS). An RTOS provides the functionality of
    a simple operating system, but it arrives as a bunch of library code that you
    compile alongside your own program. You can then call the RTOS APIs to do things
    such as controlling peripherals or performing network communication.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少需要编写的样板代码量，您可以选择使用实时操作系统（RTOS）。RTOS提供了简单操作系统的功能，但它作为一堆库代码随您自己的程序一起编译。然后，您可以调用RTOS
    API执行控制外设或执行网络通信等操作。
- en: 'Embedded development frequently involves complex toolchains: programs and scripts
    that are supplied by the hardware vendor and are used to take code from a text
    file, turn it into a program, and “flash” it onto a hardware device.'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式开发经常涉及复杂的工具链：由硬件供应商提供的程序和脚本，用于将代码从文本文件转换为程序，并将其“烧录”到硬件设备上。
- en: 'The workflow generally looks like this:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 工作流程通常如下：
- en: Make changes to your source code.
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对源代码进行更改。
- en: Run a compiler (supplied by the processor vendor) and linker to transform your
    code into a binary.
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行编译器（由处理器供应商提供）和链接器将您的代码转换为二进制文件。
- en: Run a script to flash your code onto the embedded device.
  id: totrans-363
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本将您的代码烧录到嵌入式设备上。
- en: Use a serial connection to communicate with the device and test your code.
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用串行连接与设备通信并测试您的代码。
- en: When your code is running on-device, you can often use a hardware tool called
    a *debug probe* to inspect it from your development machine. This allows you to
    debug as if you were running the code locally, setting break points, examining
    variables, and stepping through code.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的代码在设备上运行时，您通常可以使用称为*调试探针*的硬件工具从开发机上检查它。这使您可以像在本地运行代码一样进行调试，设置断点，检查变量并逐步执行代码。
- en: Some parts of your code will be generic C++, and you’ll be able to run it on
    your development machine with no problem, perhaps in the form of unit tests. However,
    you’ll also end up with plenty of code that integrates with the specific hardware
    APIs of your processor. It’s not possible to run that on your development machine—so
    you can either shrug your shoulders and test it on-device only, or you can attempt
    to use an emulator.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 你的代码中有些部分将是通用的C++代码，可以在开发机上无问题运行，可能以单元测试的形式存在。然而，你也会有大量与处理器特定硬件API集成的代码。这些代码无法在开发机上运行——所以你可以选择无所作为，仅在设备上进行测试，或者尝试使用仿真器。
- en: Emulators and simulators
  id: totrans-367
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 仿真器和模拟器
- en: An *emulator* is a piece of software that aims to reproduce a processor virtually,
    running on your development machine, so that you can execute your embedded code
    without having to flash it to the device. It will never be a perfect representation
    of the real hardware—for example, it won’t necessarily run at the exact same speed
    as the program on real hardware—but it can be close enough to be a valuable tool.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '*仿真器* 是一种软件，旨在虚拟复制处理器，可以在开发机上运行嵌入式代码，而不必将其烧录到设备上。它永远无法完美地复制真实硬件——例如，它可能无法以与真实硬件上的程序完全相同的速度运行——但它足够接近，成为一个有价值的工具。'
- en: If you need to determine how fast a program will run, for example in order to
    estimate the latency of an AI algorithm, a cycle-accurate simulator will allow
    you to determine the exact number of clock cycles that will run on the real hardware.
    You can divide this number by the clock rate to give you a precise estimate of
    latency. The emulator won’t actually *run* at that speed, but it will give you
    the information you need to create an estimate.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要确定程序运行速度，例如估算AI算法的延迟，精确的周期仿真器将允许你确定在真实硬件上运行的时钟周期数。你可以将这个数字除以时钟速率，得到精确的延迟估计。仿真器实际上不会以那样的速度*运行*，但它将为你提供所需的信息，以便创建估计。
- en: '*Simulation* is the use of software to simulate an entire device, including
    an emulated processor plus all of the other devices it may be attached to—including
    sensors and communications hardware. Some simulators can even represent multiprocessor
    boards, or entire networks of interconnected devices.'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '*模拟* 是使用软件模拟整个设备的过程，包括模拟处理器以及它可能连接的所有其他设备，包括传感器和通信硬件。一些模拟器甚至可以表示多处理器板或整个互连设备网络。'
- en: Emulators aren’t available for all processors, but [Renode](https://renode.io)
    is a powerful emulation and simulation environment for many common processor architectures,
    and [Arm Virtual Hardware](https://oreil.ly/iXED4) allows you to emulate Arm processors
    in the cloud.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有处理器都有仿真器，但[Renode](https://renode.io)是一种功能强大的仿真和模拟环境，支持许多常见的处理器架构，而[Arm虚拟硬件](https://oreil.ly/iXED4)则允许你在云中仿真Arm处理器。
- en: Embedded Linux
  id: totrans-372
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 嵌入式 Linux
- en: 'Most of the specialized embedded tools we’ve mentioned so far are intended
    for working with microcontrollers and other bare-metal devices. SoCs and edge
    servers are another story: with enough computing power and memory to host a full-blown
    operating system, SoC development is much more similar to development for personal
    computers and web servers. This is one of their major benefits: developers don’t
    need quite so many specialized skills.'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们提到的大多数专用嵌入式工具都是为微控制器和其他裸金属设备设计的。SoC和边缘服务器则是另一回事：具有足够的计算能力和内存来托管全功能操作系统，SoC开发与个人计算机和Web服务器的开发更加相似。这是它们的主要优势之一：开发人员不需要那么多专门的技能。
- en: 'A typical SoC will run a distribution of Linux, with all the helpful tools
    and libraries that that implies. Programming can be done in nearly any language,
    with the same trade-offs as on any other platform: low-level languages like C++
    are fast and efficient, while high-level languages like Python are flexible and
    easy to use.'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的SoC将运行Linux发行版，并具备所有相关工具和库的帮助。编程可以使用几乎任何语言进行，与其他平台一样存在权衡：低级语言如C++快速高效，而高级语言如Python灵活易用。
- en: 'Google provides a [TensorFlow Lite runtime](https://oreil.ly/VAk82) that is
    prebuilt for some popular platforms, and you’ll have the benefit of being able
    to use Python computing libraries directly: for example, you can use SciPy’s digital
    signal processing functions within your application.'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌提供了一个[TensorFlow Lite运行时](https://oreil.ly/VAk82)，为一些流行平台预构建，你可以直接使用Python计算库：例如，你可以在应用程序中使用SciPy的数字信号处理函数。
- en: 'Embedded Linux devices can even make use of containerization for deployment:
    embedded applications can be packaged as Linux containers, making them easy to
    install and use.'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式Linux设备甚至可以利用容器化进行部署：嵌入式应用程序可以打包为Linux容器，使其易于安装和使用。
- en: With SoCs, it’s relatively common to use an off-the-shelf board in a production
    installation. Many vendors exist who design and sell SoC-based platforms designed
    for specific applications. For example, you can buy devices in ruggedized housing
    designed for industrial deployments. To deploy, you just connect whatever sensors
    are required and install your application.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 在SoCs中，通常使用现成的板卡进行生产安装是相对常见的。存在许多设计和销售基于SoC的平台的供应商，这些平台设计用于特定应用程序。例如，你可以购买设计用于工业部署的耐用外壳的设备。要部署，只需连接所需的传感器并安装你的应用程序。
- en: One challenge working with SoCs is that despite the familiar Linux environment,
    prebuilt packages are not always available. You may have to get used to building
    libraries from source in order to make your applications work, which can get a
    little involved at times.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理SoCs时的一个挑战是，尽管使用了熟悉的Linux环境，预构建的软件包并不总是可用的。你可能需要习惯于从源代码构建库来使你的应用程序工作，这有时可能会有点复杂。
- en: It’s important to think about security when working with devices that have fully
    fledged operating systems. The embedded Linux running on an SoC needs to be locked
    down as tightly as any other machine on your network to avoid it becoming a vector
    for attacks. Insecure IoT devices are notorious for being compromised by hackers
    and used to attack other systems.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 当与具有完整操作系统的设备一起工作时，考虑安全性是很重要的。运行在SoC上的嵌入式Linux需要像网络中的任何其他机器一样严格锁定，以避免成为攻击的矢量。不安全的物联网设备因易受黑客攻击而臭名昭著，并被用于攻击其他系统。
- en: Automated hardware testing
  id: totrans-380
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动化硬件测试
- en: 'Modern software engineering best practices encourage the use of continuous
    integration tests: every code change is put through its paces by a suite of automated
    tests. Creating automated tests for embedded applications can be difficult, since
    code that interacts with hardware can’t be tested on a development machine; it
    can only be tested on the target device itself.'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 现代软件工程的最佳实践鼓励使用持续集成测试：每个代码变更都通过一套自动化测试进行测试。创建嵌入式应用程序的自动化测试可能很困难，因为与硬件交互的代码只能在目标设备上测试，而不能在开发机器上测试。
- en: However, it’s easy for an embedded device to get into a state where it is unable
    to run tests. For example, if the program crashes it may not be possible to restart
    the device without physically interacting with it. Similarly, uploading new firmware
    may require physical intervention.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，嵌入式设备很容易陷入无法运行测试的状态。例如，如果程序崩溃，则可能无法在不物理干预的情况下重新启动设备。同样，上传新固件可能需要物理干预。
- en: To get around this problem, developers build automated hardware testing systems
    that can interact with embedded devices to facilitate easier testing. These systems
    are a combination of software and hardware that can do things like flash new code,
    power cycle devices between tests, and even provide input to I/O ports or sensors.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，开发人员构建了可以与嵌入式设备交互以便于更轻松测试的自动化硬件测试系统。这些系统是软件和硬件的组合，可以执行诸如刷新新代码、在测试之间对设备进行电源循环，甚至向I/O端口或传感器提供输入等操作。
- en: Automated hardware testing systems are usually custom built. They are based
    around a host system (perhaps an embedded device itself) that is connected to
    whatever continuous integration tools the team is using, as well as being connected
    to the devices that are intended to run the code.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化硬件测试系统通常是定制构建的。它们围绕一个主机系统（可能是嵌入式设备本身）构建，该系统连接团队使用的持续集成工具，并连接到打算运行代码的设备。
- en: If integration with a sensor needs to be tested—for example, a microphone that
    is supposed to be detecting a keyword—the host system might even feature a speaker
    that can issue keywords on demand.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要测试与传感器的集成，例如应该检测关键词的麦克风，主机系统甚至可能配备可以按需发出关键词的扬声器。
- en: End-to-End Platforms for Edge AI
  id: totrans-386
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 边缘AI的端到端平台
- en: In an ideal world, any team with expertise in a certain domain would be able
    to capture its knowledge and deploy as edge AI. People with deep insight into
    diverse fields like healthcare, agriculture, manufacturing, and consumer technology
    should be able to take what they know and use it to build amazing AI-powered products.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 在理想的情况下，任何具备某个领域专业知识的团队都能够捕捉其知识并将其部署为边缘 AI。深入了解诸如医疗保健、农业、制造业和消费技术等多个领域的人士应能利用他们所知，构建出令人惊叹的
    AI 驱动产品。
- en: Unfortunately, with so many moving parts and so much to learn, it’s easy to
    feel overwhelmed by the edge AI development process. A huge amount of the workflow
    is focused not on domain knowledge but on the arcane engineering skills required
    to build a complex product across multiple fronts, including machine learning,
    digital signal processing, and low-level software engineering on embedded hardware.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，由于涉及太多的组成部分和学习内容，边缘 AI 开发过程很容易让人感到不知所措。工作流程的大部分精力都集中在非领域知识上，而是集中在构建跨多个前沿领域的复杂产品所需的神秘工程技能，包括机器学习、数字信号处理以及嵌入式硬件上的低级软件工程。
- en: In the early days, only a small number of technologists—who happened, by accident,
    to have all of the required skills—were able to work with edge AI technology.
    However, over the past few years a vibrant ecosystem of tools has sprung up that
    is designed to reduce the barriers to entry and make it possible for people without
    backgrounds in machine learning or embedded systems to build fantastic new products.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 在早期阶段，只有少数偶然具备所有必要技能的技术人员能够使用边缘 AI 技术。然而，过去几年中，涌现出了一个充满活力的工具生态系统，旨在降低准入门槛，使没有机器学习或嵌入式系统背景的人们也能构建出新的优秀产品。
- en: 'End-to-end edge AI platforms are designed to assist developers with the entire
    process of developing an application: collecting, managing, and exploring datasets;
    performing feature engineering and digital signal processing; training machine
    learning models; optimizing algorithms for embedded hardware; generating efficient
    low-level code; deploying to embedded systems; and evaluating systems’ performance
    on real-world data. This flow is summarized in [Figure 5-5](#edge_impulse_graphic).'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 端到端边缘 AI 平台旨在协助开发者完成应用程序开发的整个过程：收集、管理和探索数据集；执行特征工程和数字信号处理；训练机器学习模型；优化嵌入式硬件的算法；生成高效的低级代码；部署到嵌入式系统；并评估在实际数据上的系统性能。这个流程在
    [图 5-5](#edge_impulse_graphic) 中有所总结。
- en: '![A diagram showing the Edge Impulse iterative development loop.](assets/aiae_0505.png)'
  id: totrans-391
  prefs: []
  type: TYPE_IMG
  zh: '![显示 Edge Impulse 迭代开发循环的图表。](assets/aiae_0505.png)'
- en: Figure 5-5\. A major advantage of using an end-to-end platform is that it includes
    all of the components required for an iterative, data-driven feedback loop; that
    said, the most flexible platforms provide points for integration with external
    tools (Image courtesy of Edge Impulse Inc.)
  id: totrans-392
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-5\. 使用端到端平台的一个主要优势在于它包含了迭代、数据驱动反馈循环所需的所有组件；话虽如此，最灵活的平台提供了与外部工具集成的接口（图片由
    Edge Impulse Inc. 提供）。
- en: 'End-to-end platforms are designed to apply the principles of MLOps to the specific
    process of creating algorithms that will run on embedded devices. As highly integrated
    tools, they are able to take most of the friction out of the development process:
    far less time is wasted in getting different parts of a toolchain to work together,
    and a holistic view of the entire process allows for helpful guidance that massively
    reduces exposure to risk.'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 端到端平台旨在将 MLOps 原则应用到创建将在嵌入式设备上运行的算法的特定过程中。作为高度集成的工具，它们能够减少开发过程中的大部分摩擦：不再需要花费大量时间让工具链的不同部分协同工作，全面的流程视角提供了有益的指导，大幅降低了风险暴露。
- en: For example, an end-to-end platform can analyze a dataset in order to help a
    user select the type of ML model best suited to it, or it might provide estimates
    of on-device performance that can help the developer choose an algorithm or embedded
    processor. A platform may perform AutoML with the goal of finding the best possible
    combination of signal processing and model that will fit on a specific device,
    within a maximum specified latency, or within a limited power budget.^([21](ch05.html#idm45988808364736))
    A wide range of ready-to-deploy algorithms or architectures are typically available,
    preoptimized for various processors.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，端到端平台可以分析数据集，以帮助用户选择最适合的ML模型类型，或者提供关于设备性能的估算，以帮助开发者选择算法或嵌入式处理器。平台可能执行AutoML，目的是在特定设备上找到信号处理和模型的最佳组合，以及在最大指定延迟或有限功耗预算内进行优化。^([21](ch05.html#idm45988808364736))
    通常有各种预优化的可部署算法或架构可供选择，适用于各种处理器。
- en: 'Platforms can also help teams collaborate. For instance, a cloud-based edge
    AI platform can act as a central repository for a team’s datasets and workflow
    artifacts. APIs and configurable ML pipelines allow teams to automate routine
    tasks: so, for example, a new version of a model might be trained, tested, and
    deployed whenever new data is available. And visualizations and low-code user
    interfaces make it possible for anyone on a team to contribute insight, not just
    those with existing data science or embedded engineering skills.'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 平台还可以帮助团队协作。例如，基于云的边缘AI平台可以充当团队数据集和工作流工件的中央存储库。API和可配置的ML管道允许团队自动化常规任务：例如，每当有新数据可用时，可以训练、测试和部署模型的新版本。可视化和低代码用户界面使得任何团队成员都能贡献见解，而不仅仅是那些具备现有数据科学或嵌入式工程技能的人。
- en: Cloud-based platforms also allow developers to benefit from distributed compute
    without having to administer their own systems. For example, data processing and
    model training might occur on powerful cloud servers that are managed by the platform,
    not by the user. This simplifies the process of running AutoML, where experiments
    may be run in parallel—as shown in [Figure 5-6](#eon_tuner_screenshot).
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 云端平台还允许开发人员受益于分布式计算，而无需管理自己的系统。例如，数据处理和模型训练可能在由平台管理而非用户管理的强大云服务器上进行。这简化了运行AutoML的过程，其中实验可以并行运行，如图
    [5-6](#eon_tuner_screenshot) 所示。
- en: '![A screenshot showing Edge Impulse''s EON Tuner, which is displaying metrics
    for a hyperparameter sweep currently in progress.](assets/aiae_0506.png)'
  id: totrans-397
  prefs: []
  type: TYPE_IMG
  zh: '![显示Edge Impulse的EON Tuner正在进行超参数扫描的截图。](assets/aiae_0506.png)'
- en: Figure 5-6\. An AutoML sweep conducted using Edge Impulse’s [EON Tuner](https://oreil.ly/QP1pZ);
    with end-to-end platforms, optimization of signal processing and machine learning
    algorithms can occur hand in hand, incorporating estimates of on-device latency
    and memory use
  id: totrans-398
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-6\. 使用Edge Impulse的 [EON Tuner](https://oreil.ly/QP1pZ) 进行的AutoML扫描；通过端到端平台，信号处理和机器学习算法的优化可以手牵手进行，包括对设备延迟和内存使用的估计。
- en: The best end-to-end platforms have a focus on tightening all the feedback loops
    in the edge AI workflow. They make it possible to iterate rapidly, moving back
    and forth between development and testing with minimal overhead. This makes it
    far easier to build a successful product, since you’re able to immediately detect
    and course-correct on any issues.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳端到端平台专注于缩短边缘AI工作流中所有反馈环路。它们使快速迭代成为可能，在开发和测试之间来回移动的开销最小化。这样一来，建立成功产品变得更加容易，因为您能够立即检测并在任何问题上进行调整。
- en: Traditionally, getting an algorithm to run on-device for the first time—using
    real sensor data—has been a tricky process. Some end-to-end platforms provide
    prebuilt firmwares for popular development boards, allowing you to capture sensor
    data and deploy and test models without writing any code. This enables you to
    close the loop between model development and real-world testing.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，首次在设备上运行算法——使用真实传感器数据——是一个棘手的过程。一些端到端平台为流行的开发板提供预构建的固件，使您能够捕获传感器数据，并在不编写任何代码的情况下部署和测试模型。这使您能够关闭模型开发和实际测试之间的循环。
- en: Another big benefit provided by end-to-end platforms is the ability to conveniently
    try out a variety of hardware to find the best fit. The same model can potentially
    be deployed in an optimized form to a multitude of microcontrollers, SoCs, and
    ML accelerators with a couple of clicks, allowing a development team to compare
    performance and determine the right choice for their application. Done by hand,
    this process could take weeks.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 端到端平台提供的另一个重要优势是能够方便地尝试各种硬件，以找到最合适的解决方案。同一个模型可以通过几次点击以优化的形式部署到多种微控制器、SoC和ML加速器中，使开发团队能够比较性能并确定适合其应用程序的正确选择。手工完成这一过程可能需要数周时间。
- en: The AI ecosystem is built on top of open source tools, and good end-to-end platforms
    will allow you to continue using them however you want; they will integrate with
    industry standard technologies throughout the workflow and won’t rely on vendor
    lock-in to keep you as a customer. You should be able to easily export your data,
    models, and training code, and it should be simple to create a mixed MLOps stack
    that incorporates parts of multiple solutions.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: AI生态系统建立在开源工具之上，良好的端到端平台将允许您根据需要继续使用它们；它们将在整个工作流程中与行业标准技术集成，并且不会依赖供应商锁定以保持您作为客户。您应该能够轻松导出您的数据、模型和训练代码，并且可以简单地创建混合MLOps堆栈，以整合多个解决方案的部分。
- en: At this point, it’s worth addressing the fact that the authors of this book,
    Daniel and Jenny, are part of the team that has designed and developed [Edge Impulse](https://edgeimpulse.com),
    an extremely popular end-to-end edge AI development platform. It’s always important
    to take recommendations with a pinch of salt when the people doing the recommendation
    have a vested interest! Since we work on an end-to-end tool, how can we be expected
    to recommend anything else?
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 到这一步，值得注意的是，本书的作者丹尼尔和珍妮是[Edge Impulse](https://edgeimpulse.com)的设计和开发团队成员，这是一个极其流行的端到端边缘人工智能开发平台。当推荐者对推荐物有既得利益时，采纳建议就显得尤为重要！因为我们从事端到端工具的开发，所以我们能推荐的选择也是有限的。
- en: Hopefully, the history of this book provides some reassurance. One of the authors,
    Dan, was coauthor of [*TinyML*](https://oreil.ly/-_tKt)—a book that helped introduce
    the field of embedded machine learning to a wider audience. *TinyML* introduces
    the process of building edge AI software using open source tools. At about 500
    pages, it’s not a short guide—but it only covers the absolute basics, and it relies
    on its readers learning both Python and C++. Working directly with low-level tools
    is not a productive way to go.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这本书的历史能够给予一些安心。书中的一位作者丹尼尔曾是[*TinyML*](https://oreil.ly/-_tKt)的共同作者，这本书帮助更广泛的读者了解嵌入式机器学习领域。*TinyML*介绍了使用开源工具构建边缘人工智能软件的过程。虽然有大约500页，但它仅涵盖了基础知识，并依赖于读者学习Python和C++。直接使用低级工具并不是一个高效的方法。
- en: Writing *TinyML* inspired both of its authors to try and make life easier for
    developers. Dan went on to join Edge Impulse as its founding engineer, inspired
    by a demo where the company’s CEO built and deployed a deep learning model for
    activity classification live in under ten minutes. The other coauthor of *TinyML*,
    Pete Warden, is working to simplify machine learning deployment by integrating
    sensors and ML as closely as possible.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 编写*TinyML*激发了两位作者尝试为开发者简化生活。丹尼尔随后加入Edge Impulse担任创始工程师，他受到公司CEO演示的启发，在不到十分钟内构建和部署了一个用于活动分类的深度学习模型。*TinyML*的另一位共同作者皮特·沃登正致力于通过尽可能紧密地集成传感器和机器学习来简化机器学习部署。
- en: Summary
  id: totrans-406
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: We’ve now encountered the people, skills, and tools that are prerequisites to
    successful edge AI projects. From the next chapter onward, we’ll be taking a journey
    through the iterative development workflow that real-world teams use to build
    applications.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经接触到成功的边缘人工智能项目所需的人员、技能和工具。从下一章开始，我们将通过迭代开发工作流程，探索真实团队用于构建应用程序的旅程。
- en: ^([1](ch05.html#idm45988809046864-marker)) See [“What Are the 4 Types of Diversity?”](https://oreil.ly/SQ-P9)
    for more information on the four core areas.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch05.html#idm45988809046864-marker)) 请参阅[“四种多样性类型是什么？”](https://oreil.ly/SQ-P9)以获取有关四个核心领域的更多信息。
- en: ^([2](ch05.html#idm45988814194816-marker)) It’s part of a strategy known as
    “dogfooding,” covered in [“Real-world testing”](ch10.html#real_world_testing).
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch05.html#idm45988814194816-marker)) 这是“吃自己的狗食”战略的一部分，详见[“真实世界测试”](ch10.html#real_world_testing)。
- en: ^([3](ch05.html#idm45988809168480-marker)) Remember, the best way to learn is
    to build! Don’t fall into the common trap of thinking you need to memorize all
    of the theory first. This field develops so rapidly that you can never hope to
    learn it all.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch05.html#idm45988809168480-marker)) 记住，学习的最佳方式是实践！不要陷入先学习所有理论的常见陷阱。这个领域发展如此迅速，你永远无法希望掌握所有知识。
- en: ^([4](ch05.html#idm45988809145088-marker)) Founded by Pete Warden, then at Google,
    who kindly wrote the foreword for this book.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch05.html#idm45988809145088-marker)) 由当时在 Google 的 Pete Warden 创建，他还友好地为本书写了序言。
- en: ^([5](ch05.html#idm45988809143904-marker)) Which impressed this book’s authors
    enough that we left jobs at Google and Arm to come and work on it.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: ^([5](ch05.html#idm45988809143904-marker)) 这让本书的作者们印象深刻，足以让我们离开 Google 和 Arm
    的工作来投身其中。
- en: ^([6](ch05.html#idm45988814324672-marker)) Known as “bare metal.”
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: ^([6](ch05.html#idm45988814324672-marker)) 也称为“裸机”。
- en: ^([7](ch05.html#idm45988814318672-marker)) A popular language for statistical
    computing that is not typically used for purposes outside data analysis.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: ^([7](ch05.html#idm45988814318672-marker)) 一种用于统计计算的流行语言，通常不用于数据分析之外的目的。
- en: ^([8](ch05.html#idm45988814303184-marker)) The most common Python dependency
    management tools are [pip](https://oreil.ly/fV_w0) and [Conda](https://conda.io);
    Poetry is a relative newcomer but is highly recommended.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: ^([8](ch05.html#idm45988814303184-marker)) 最常见的 Python 依赖管理工具是 [pip](https://oreil.ly/fV_w0)
    和 [Conda](https://conda.io); Poetry 是一个相对较新的工具，但非常推荐使用。
- en: ^([9](ch05.html#idm45988814058000-marker)) Back when they were known as Facebook.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: ^([9](ch05.html#idm45988814058000-marker)) 早期称为 Facebook 时。
- en: ^([10](ch05.html#idm45988814050064-marker)) The history and comparison between
    the two frameworks is quite interesting, and [this fantastic blog post from AssemblyAI](https://oreil.ly/6c6ta)
    does a great job of summarizing it.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: ^([10](ch05.html#idm45988814050064-marker)) 两个框架的历史和比较非常有趣，[AssemblyAI 的这篇精彩博客文章](https://oreil.ly/6c6ta)
    很好地总结了这一点。
- en: ^([11](ch05.html#idm45988814946032-marker)) In fact, it can be an absolute nightmare
    even for the most experienced developers.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: ^([11](ch05.html#idm45988814946032-marker)) 事实上，即使对于经验丰富的开发者来说，这也可能是一场绝对的噩梦。
- en: ^([12](ch05.html#idm45988808833312-marker)) Other formats are in use, such as
    [ONNX](https://onnx.ai), but the TensorFlow Lite format is by far the most popular.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: ^([12](ch05.html#idm45988808833312-marker)) 还有其他格式在使用，比如 [ONNX](https://onnx.ai)，但
    TensorFlow Lite 格式目前是最流行的。
- en: ^([13](ch05.html#idm45988808822496-marker)) TensorBoard works with both TensorFlow
    and PyTorch.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: ^([13](ch05.html#idm45988808822496-marker)) TensorBoard 可同时与 TensorFlow 和 PyTorch
    配合使用。
- en: ^([14](ch05.html#idm45988808810832-marker)) Or *hyperparameter tuning*.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: ^([14](ch05.html#idm45988808810832-marker)) 或*超参数调整*。
- en: ^([15](ch05.html#idm45988808801312-marker)) Introduced in [“End-to-End Platforms
    for Edge AI”](#end_to_end_platforms).
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: ^([15](ch05.html#idm45988808801312-marker)) 在“边缘AI的端到端平台”([#end_to_end_platforms](#end_to_end_platforms))
    中首次引入。
- en: ^([16](ch05.html#idm45988808784496-marker)) Listed in [State of MLOps](https://oreil.ly/aGKfQ)
    at *ml-ops.org*.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: ^([16](ch05.html#idm45988808784496-marker)) 在 *ml-ops.org* 的[ML运维现状](https://oreil.ly/aGKfQ)中列出。
- en: ^([17](ch05.html#idm45988808773392-marker)) Including both model quality and
    computational performance.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: ^([17](ch05.html#idm45988808773392-marker)) 包括模型质量和计算性能两方面。
- en: ^([18](ch05.html#idm45988808729408-marker)) Pete Warden has an [excellent blog
    post](https://oreil.ly/UbDtm) that outlines the technical challenges in this area.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: ^([18](ch05.html#idm45988808729408-marker)) Pete Warden 写了一篇[优秀的博客文章](https://oreil.ly/UbDtm)，详细介绍了这一领域的技术挑战。
- en: ^([19](ch05.html#idm45988809332688-marker)) Pete Warden’s blog post, [“Why Isn’t
    There More Training on the Edge?”](https://oreil.ly/vo7-R) does a great job of
    illuminating this topic.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: ^([19](ch05.html#idm45988809332688-marker)) Pete Warden 的博客文章，“为什么边缘计算的培训不足？”([https://oreil.ly/vo7-R](https://oreil.ly/vo7-R))
    很好地阐明了这个主题。
- en: ^([20](ch05.html#idm45988809329312-marker)) Although it will invariably improve
    over time.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: ^([20](ch05.html#idm45988809329312-marker)) 尽管随着时间的推移它无疑会得到改善。
- en: '^([21](ch05.html#idm45988808364736-marker)) The paper by Kanav Anand et al.,
    [“Black Magic in Deep Learning: How Human Skill Impacts Network Training”](https://oreil.ly/-TlS9)
    (arXiv, 2020), shows that prior experience can have a strong impact on performance
    when tuning ML models by hand, which suggests the value of AutoML tools.'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: ^([21](ch05.html#idm45988808364736-marker)) Kanav Anand 等人的论文，“深度学习中的黑魔法：人类技能如何影响网络训练”([https://oreil.ly/-TlS9](https://oreil.ly/-TlS9))
    (arXiv, 2020)，显示出先前经验在手动调整机器学习模型时对性能有显著影响，这表明了自动化机器学习工具的价值。
- en: ^([22](ch05.html#idm45988808333408-marker)) Pete Warden et al., [“Machine Learning
    Sensors”](https://oreil.ly/xOtDp), arXiv, 2022.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: ^([22](ch05.html#idm45988808333408-marker)) Pete Warden 等人的论文，“机器学习传感器”([https://oreil.ly/xOtDp](https://oreil.ly/xOtDp)),
    arXiv, 2022。

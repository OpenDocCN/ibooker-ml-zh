- en: Chapter 5\. Deploying Automated Machine Learning Models
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章\. 部署自动化机器学习模型
- en: Microsoft Azure Machine Learning enables you to manage the life cycle of your
    machine learning models. After you have trained the models by using Azure Machine
    Learning’s automated ML tool, you can retrieve the best model identified, and
    register the model with Azure Machine Learning. Model registration enables you
    to store varying versions of models in the machine learning workspace and makes
    it possible for you to easily deploy the models to different target environments.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Azure Machine Learning 可以帮助您管理机器学习模型的生命周期。使用 Azure Machine Learning
    的自动化 ML 工具训练模型后，您可以检索识别出的最佳模型，并将其注册到 Azure Machine Learning 中。模型注册使您能够在机器学习工作区中存储不同版本的模型，并且可以轻松部署模型到不同的目标环境。
- en: 'In this chapter, we explore how to use Azure Machine Learning to do the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨如何使用 Azure Machine Learning 执行以下操作：
- en: Register the best model produced by automated ML.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册由自动化 ML 生成的最佳模型。
- en: Specify and develop the scoring file. The scoring will be included as part of
    the container images that will be generated.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定和开发评分文件。评分文件将作为生成的容器映像的一部分包含在内。
- en: Deploy the models to Microsoft Azure Container Instances (ACI) and Azure Kubernetes
    Service (AKS).
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将模型部署到 Microsoft Azure 容器实例（ACI）和 Azure Kubernetes 服务（AKS）。
- en: Troubleshoot failures during model and web service deployments.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在模型和 Web 服务部署期间进行故障排除。
- en: Deploying Models
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型部署
- en: 'In [Chapter 3](ch03.html#getting_started_with_microsoft_azure_mac), you learned
    how to build a machine learning model using automated ML. In this section, you’ll
    learn how to register and deploy the best model that is identified by automated
    ML. Azure Machine Learning supports a rich set of deployment environments, ranging
    from REST APIs hosted in Azure, to models deployed to different edge devices and
    hardware. These environments include the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [第三章](ch03.html#getting_started_with_microsoft_azure_mac) 中，您学习了如何使用自动化 ML
    构建机器学习模型。在本节中，您将学习如何注册和部署由自动化 ML 识别出的最佳模型。Azure Machine Learning 支持一系列丰富的部署环境，包括托管在
    Azure 中的 REST API，以及部署到不同边缘设备和硬件的模型。这些环境包括以下内容：
- en: Azure Machine Learning Compute
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Machine Learning 计算
- en: ACI
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ACI
- en: AKS
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AKS
- en: Azure IoT Edge
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure IoT Edge
- en: Tip
  id: totrans-13
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: To learn more about the up-to-date list of deployment options that are supported
    by Azure Machine Learning, go to the [Microsoft page](http://bit.ly/2Haqkmv) about
    deploying models.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解 Azure Machine Learning 支持的最新部署选项列表，请访问有关部署模型的 [Microsoft 页面](http://bit.ly/2Haqkmv)。
- en: 'Now, let’s walk through the steps that you will use to register, deploy, and
    test the best models that have been produced by automated ML:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们详细介绍您将用于注册、部署和测试由自动化 ML 生成的最佳模型的步骤：
- en: Retrieve the best model.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检索最佳模型。
- en: Register the model.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册模型。
- en: Create the container image.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建容器映像。
- en: Deploy the model to a test environment, then test it.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模型部署到测试环境，然后进行测试。
- en: Deploy the model to production.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模型部署到生产环境。
- en: Because the steps for deploying a model to the different environments are similar,
    we focus on deployment to ACI.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 因为部署模型到不同环境的步骤相似，我们专注于部署到 ACI。
- en: 'To get started with model deployment, you need one or more trained machine
    learning models. If you do not have a trained model yet, you can follow the steps
    described in the sample notebook (in this book’s [GitHub repository](https://oreil.ly/Practical_Automated_ML_on_Azure))
    to train a simple regression model for predictive maintenance. The code for creating
    an automated ML run and submitting the experiment using an `AutoMLConfig` object
    is as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始模型部署，您需要一个或多个训练好的机器学习模型。如果您尚未拥有训练好的模型，您可以按照本书的 [GitHub 存储库](https://oreil.ly/Practical_Automated_ML_on_Azure)
    中描述的步骤，训练一个简单的预测维护回归模型。使用 `AutoMLConfig` 对象创建自动化 ML 运行并提交实验的代码如下：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After the experiment has completed successfully (see [Figure 5-1](#output_from_an_automated_ml_experiment)),
    you’ll have access to the `local_run` object that you will use to register the
    model.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在实验成功完成后（参见 [图 5-1](#output_from_an_automated_ml_experiment)），您将可以访问 `local_run`
    对象，用于注册模型。
- en: '![paml 0501](assets/paml_0501.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0501](assets/paml_0501.png)'
- en: Figure 5-1\. Output from an automated ML experiment
  id: totrans-26
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-1\. 自动化 ML 实验的输出
- en: Note
  id: totrans-27
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: The sample notebook for using automated ML to build and deploy the predictive
    maintenance model discussed in this chapter is available at [*https://bit.ly/2k2e6VC*](https://bit.ly/2k2e6VC).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讨论的使用自动化ML构建和部署预测性维护模型的示例笔记本可在[*https://bit.ly/2k2e6VC*](https://bit.ly/2k2e6VC)获取。
- en: The predictive maintenance model uses the NASA turbofan failure dataset. More
    details on the dataset are available at [*https://go.nasa.gov/2J6N1eK*](https://go.nasa.gov/2J6N1eK).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 预测性维护模型使用了NASA涡轮风扇故障数据集。有关数据集的更多详细信息，请访问[*https://go.nasa.gov/2J6N1eK*](https://go.nasa.gov/2J6N1eK)。
- en: Registering the Model
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注册模型
- en: Before you register the trained model, you can use the `get_output()` function
    to find out more about the run that corresponds to the best-performing model.
    The `get_output()` function returns both the best run as well as the corresponding
    fitted model.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在注册训练好的模型之前，您可以使用`get_output()`函数了解与表现最佳模型对应的运行更多信息。`get_output()`函数同时返回最佳运行和相应的拟合模型。
- en: Note
  id: totrans-32
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: What types of machine learning model can you register? You can register Python
    or R models using Azure Machine Learning, as well as models that have been trained
    using Azure Machine Learning, or pretrained models that are available externally.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以注册哪些类型的机器学习模型？您可以使用Azure机器学习注册Python或R模型，以及使用Azure机器学习训练的模型或外部可用的预训练模型。
- en: '[Figure 5-2](#retrieving_the_best_run_comma_and_detail) shows the output from
    running the code block that follows. You will notice that under the hood, a *regression
    pipeline* is created. The regression pipeline consists of several steps: `StackEnsembleRegressor`,
    `StandardScalerWrapper`, and `LightGBMRegressor`). Notice that the number of folds
    for cross-validation is set to `5`:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-2](#retrieving_the_best_run_comma_and_detail) 显示了运行下面代码块的输出。您会注意到在幕后创建了一个*回归管道*。回归管道包括几个步骤：`StackEnsembleRegressor`、`StandardScalerWrapper`
    和 `LightGBMRegressor`）。请注意，交叉验证的折数设置为`5`：'
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![paml 0502](assets/paml_0502.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0502](assets/paml_0502.png)'
- en: Figure 5-2\. Retrieving the best run, and details of the corresponding fitted
    model
  id: totrans-37
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-2\. 检索最佳运行和相应拟合模型的详细信息
- en: You are now ready to register the model. First, you specify the descriptions
    and tags for the model, and use the `register_model()` function to register the
    model with Azure Machine Learning. By registering the model, you are storing and
    versioning the model in the cloud.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在可以准备注册模型了。首先，您指定模型的描述和标签，然后使用`register_model()`函数将模型注册到Azure机器学习中。通过注册模型，您将模型存储和版本化在云中。
- en: Each registered model is identified by its name and version. When you register
    a model (with the same name) multiple times, the registry will incrementally update
    the version for the model stored in the registry. Metadata tags enable you to
    provide more information about the models that you are registering with the model
    registry. You can search for the model using the metadata tags that are provided
    when the model is registered.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 每个注册的模型由其名称和版本标识。当您多次注册模型（使用相同名称）时，注册表将逐步更新注册表中存储的模型版本。元数据标签使您能够为注册到模型注册表中的模型提供更多信息。您可以使用在注册模型时提供的元数据标签搜索模型。
- en: 'After you have registered the model, you can get the model’s identifier. In
    the following code, you retrieve the identifier using `local_run.model_id` ([Figure 5-3](#getting_the_identifier_for_the_model_tha)
    shows the output of running the code):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 注册模型后，您可以获取模型的标识符。在以下代码中，您使用`local_run.model_id`检索标识符（[图 5-3](#getting_the_identifier_for_the_model_tha)
    显示了运行代码的输出）：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![paml 0503](assets/paml_0503.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0503](assets/paml_0503.png)'
- en: Figure 5-3\. Getting the identifier for the model registered with Azure Machine
    Learning
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-3\. 获取注册到Azure机器学习的模型标识符
- en: 'So far, you have learned how to use the `register_model()` function to register
    a model that has been trained with Azure Machine Learning. You might have trained
    a model without using Azure Machine Learning or obtained a model from an external
    model repository (or model zoo). For example, to register the MNIST Handwritten
    Digit Recognition ONNX model provided in [this repo](https://oreil.ly/18z5e),
    you can use `Model.register()` to register it by providing a local path to the
    model. The following code shows how to do this:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经学会如何使用 `register_model()` 函数注册使用 Azure Machine Learning 训练的模型。您可能已经在没有使用
    Azure Machine Learning 的情况下训练了一个模型，或者从外部模型仓库（或模型库）获取了一个模型。例如，要注册在[此 repo](https://oreil.ly/18z5e)中提供的
    MNIST 手写数字识别 ONNX 模型，可以使用 `Model.register()`，通过提供模型的本地路径来注册它。以下代码展示了如何操作：
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Tip
  id: totrans-46
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: You can find out more about the `Model` class on Microsoft’s [Models documentation
    page](http://bit.ly/2E2YqrW).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 Microsoft 的[模型文档页面](http://bit.ly/2E2YqrW)上找到更多关于 `Model` 类的信息。
- en: Creating the Container Image
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建容器映像
- en: Next, we work toward deploying the model as a REST API. Azure Machine Learning
    helps you create the container image. The container image can be deployed to any
    environment where Docker is available (including Docker running on-premises).
    In this chapter, you’ll learn how to deploy and serve the model by using either
    ACI or AKS.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将努力将模型部署为 REST API。Azure Machine Learning 帮助您创建容器映像。容器映像可以部署到任何支持 Docker
    的环境中（包括在本地运行的 Docker）。在本章中，您将学习如何使用 ACI 或 AKS 部署和提供模型。
- en: 'To do this, you will need to create a scoring file (*score.py*) and the YAML
    file (*myenv.yml*). The scoring file is used for loading the model, making the
    prediction, and returning the results when the REST API is invoked. In the scoring
    file, you will notice that two functions need to be defined: `init()` and `run(rawdata)`.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成这一步骤，您需要创建一个评分文件（*score.py*）和一个 YAML 文件（*myenv.yml*）。评分文件用于加载模型、进行预测，并在调用
    REST API 时返回结果。在评分文件中，您会注意到需要定义两个函数：`init()` 和 `run(rawdata)`。
- en: 'The `init()` function is used to load the model into a global model object.
    When the Docker container is started, the function is run only once. The `run()`
    function is used to predict a value based on the input data that is passed to
    it. Because this code is mostly used in a web service, the input that is passed
    via `rawdata` is a JSON object. The JSON object needs to be deserialized before
    you pass it to the model for prediction, as shown in the following code:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 函数 `init()` 用于将模型加载到全局模型对象中。当启动 Docker 容器时，该函数仅运行一次。函数 `run()` 用于基于传递给它的输入数据预测值。因为此代码主要用于
    web 服务，所以通过 `rawdata` 传递的输入是一个 JSON 对象。在将其传递给模型进行预测之前，需要对 JSON 对象进行反序列化，如以下代码所示：
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: After the code is run, the content will be written to a file called *score.py*.
    [Figure 5-4](#creating_the_scoring_filemscore.py) shows the output from running
    the code. We will replace the value for `<<modelid>>` in a later step with the
    actual model identifier value from `local_run.model_id`.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 代码运行后，内容将写入名为 *score.py* 的文件中。[图 5-4](#creating_the_scoring_filemscore.py) 显示了运行代码的输出。稍后，我们将使用
    `local_run.model_id` 的实际模型标识符值替换 `<<modelid>>` 的值。
- en: '![paml 0504](assets/paml_0504.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0504](assets/paml_0504.png)'
- en: Figure 5-4\. Creating the scoring file—*score.py*
  id: totrans-55
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-4\. 创建评分文件—*score.py*
- en: 'After the scoring file has been created, we identify the dependencies from
    the run and create the YAML file, as demonstrated in the following code ([Figure 5-5](#retrieve_the_version_of_the_azure_machin)
    shows the output from running the code):'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 创建评分文件后，从运行中识别出依赖项，并创建 YAML 文件，如以下代码所示（[图 5-5](#retrieve_the_version_of_the_azure_machin)
    显示了运行代码的输出）：
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![paml 0505](assets/paml_0505.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0505](assets/paml_0505.png)'
- en: Figure 5-5\. Retrieving the version of the Azure Machine Learning SDK
  id: totrans-59
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-5\. 检索 Azure Machine Learning SDK 的版本
- en: 'After you have identified the dependencies, you can create the YAML file with
    all of the dependencies specified by using the function `CondaDependencies.create()`.
    The function creates the environment object and enables you to serialize it to
    the *myenv.yml* file by using the function `save_to_file()`. [Figure 5-6](#creating_the_environment_yaml_filemmyenv)
    shows the output from running the following code:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 识别出依赖项后，您可以使用函数 `CondaDependencies.create()` 指定所有依赖项来创建 YAML 文件。该函数创建环境对象，并通过函数
    `save_to_file()` 将其序列化到 *myenv.yml* 文件中。[图 5-6](#creating_the_environment_yaml_filemmyenv)
    显示了运行以下代码的输出：
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![paml 0506](assets/paml_0506.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0506](assets/paml_0506.png)'
- en: Figure 5-6\. Creating the environment YAML file—*myenv.yml*
  id: totrans-63
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-6\. 创建环境YAML文件—*myenv.yml*
- en: 'Now that we have created both the scoring and environment YAML files, we can
    update the files’ content with the version of the Azure Machine Learning SDK and
    model identifier that we obtained earlier. The following code reads the file,
    replaces the affected values, and writes it back to disk:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了得分和环境的YAML文件，我们可以更新文件的内容，用之前获取的Azure机器学习SDK的版本和模型标识符。以下代码读取文件，替换受影响的值，并将其写回磁盘：
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: With the values now replaced, you’re ready to configure and create the container
    images, which will be registered with the ACI. In the configuration of the container
    image, using the function `ContainerImage.image_configuration()`, you specify
    the runtime used, the environment file that provides the Conda dependencies, metadata
    tags, and a description for the container image.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在值已替换，您可以配置并创建容器镜像，并将其注册到ACI。在容器镜像的配置中，使用函数`ContainerImage.image_configuration()`指定所使用的运行时，提供Conda依赖项的环境文件，元数据标签以及容器镜像的描述。
- en: 'When you invoke `Image.create()`, Azure Machine Learning builds the container
    image, and registers the container image with the ACI. Running the container creation
    code (from “Creating image” to “Running”) usually takes several minutes. By using
    `image.creation.status`, you can learn whether the image creation was successful.
    [Figure 5-7](#creating_the_docker_container_for_the) shows the output from running
    the following code and verifying that the container creation is successful:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当您调用`Image.create()`时，Azure机器学习会构建容器镜像，并将容器镜像注册到ACI。运行容器创建代码（从“Creating image”到“Running”）通常需要几分钟时间。通过使用`image.creation.status`，您可以了解镜像创建是否成功。[图 5-7](#creating_the_docker_container_for_the)
    显示了运行以下代码并验证容器创建成功的输出：
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![paml 0507](assets/paml_0507.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0507](assets/paml_0507.png)'
- en: Figure 5-7\. Creating the Docker container for the predictive maintenance model
  id: totrans-70
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-7\. 为预测维护模型创建Docker容器
- en: Deploying the Model for Testing
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署模型进行测试
- en: 'After the Docker container images have been created successfully, you are ready
    to deploy the model. You can deploy the container to any environment in which
    Docker is available (including Docker running on-premises). These include Azure
    Machine Learning Compute, ACI, AKS, IoT Edge, and more. Begin by deploying the
    Docker container to ACI for testing. For this deploy, do the following:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 成功创建Docker容器镜像后，您可以准备部署模型。您可以将容器部署到任何支持Docker的环境中（包括本地运行的Docker）。这些环境包括Azure机器学习计算、ACI、AKS、IoT
    Edge等。首先，将Docker容器部署到ACI进行测试。为此部署，执行以下操作：
- en: Specify the deploy configuration.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定部署配置。
- en: Deploy the Docker image to ACI.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Docker镜像部署到ACI。
- en: Retrieve the scoring URI.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检索评分URI。
- en: 'The `AciWebservice` class is used to specify the deploy configuration. First,
    we specify this for the ACI web service. In the following code, we specify a configuration
    that uses one CPU core with 2 GB of memory. In addition, we add metadata tags
    as well as a description:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`AciWebservice`类用于指定部署配置。首先，我们为ACI Web服务指定配置。在以下代码中，我们指定使用一个CPU核心和2GB内存的配置。此外，我们还添加了元数据标签和描述：'
- en: '[PRE9]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Next, we use the `Webservice` class to deploy the Docker image to the ACI.
    We use `wait_for_deployment(True)` after invoking `deploy_from_image()`. This
    requires you to wait for the completion of the web service deployment to ACI.
    When this is done, we print the state of the ACI web service. [Figure 5-8](#deploying_the_web_service_to_container)
    shows the output from running the following code:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们使用`Webservice`类将Docker镜像部署到ACI。在调用`deploy_from_image()`后，我们使用`wait_for_deployment(True)`等待Web服务部署到ACI的完成。完成后，我们打印ACI
    Web服务的状态。[图 5-8](#deploying_the_web_service_to_container) 显示了运行以下代码的输出：
- en: '[PRE10]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-80
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: The `Webservice` class provides various functions for deployment, including
    deployment from the image (what we’re using here) and from the `Model` object,
    building and deploying a model locally for testing, and more. To learn how to
    use the various functions from the `WebService` class, see the [Microsoft documentation
    page](http://bit.ly/2VzN6i5).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`Webservice`类提供了各种部署功能，包括从图像（我们这里使用的）和从`Model`对象部署模型到本地进行测试，以及更多功能。要了解如何使用`WebService`类的各种功能，请参阅[微软文档页面](http://bit.ly/2VzN6i5)。'
- en: '![paml 0508](assets/paml_0508.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0508](assets/paml_0508.png)'
- en: Figure 5-8\. Deploying the web service to ACI and checking that the operation
    completed
  id: totrans-83
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-8\. 将Web服务部署到ACI并检查操作是否完成
- en: Tip
  id: totrans-84
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: Here you’re learning how to use the Azure Machine Learning SDK for deploying
    the models created by automated ML. Azure Machine Learning supports deployment
    of models using the Azure CLI, via the command `az ml model deploy`. To learn
    how to do that, refer to [this Microsoft Azure documentation page](http://bit.ly/2vYOGdP).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您正在学习如何使用 Azure 机器学习 SDK 部署由自动化 ML 创建的模型。Azure 机器学习支持使用 Azure CLI 部署模型，通过命令
    `az ml model deploy`。要了解如何操作，请参阅 [此 Microsoft Azure 文档页面](http://bit.ly/2vYOGdP)。
- en: 'After the ACI service deployment is complete, you will be able to use the Azure
    portal to see the deployment. When an ACI–based web service is created, you will
    notice the following:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: ACI 服务部署完成后，您可以使用 Azure 门户查看部署情况。创建基于 ACI 的 Web 服务后，您会注意到以下情况：
- en: A deployment is created in the Azure Machine Learning workspace (see [Figure 5-9](#azure_portalmverifying_that_the_deployme)).
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Azure 机器学习工作区中创建了一个部署（见 [图 5-9](#azure_portalmverifying_that_the_deployme)）。
- en: 'When an ACI instance is created for the deployment, two containers are deployed:
    `azureml-fe-aci` (ACI frontend for Azure Machine Learning that includes AppInsights
    logging), and a container (with the name that is provided during deployment) that
    includes the scoring code.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 ACI 实例进行部署时，会部署两个容器：`azureml-fe-aci`（包括 AppInsights 日志记录的 Azure 机器学习 ACI
    前端）和一个包含评分代码的容器（在部署期间提供的名称）。
- en: '![paml 0509](assets/paml_0509.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0509](assets/paml_0509.png)'
- en: Figure 5-9\. Azure portal—verifying that the deployment to ACI is complete
  id: totrans-90
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-9\. Azure 门户—验证部署到 ACI 的完成情况
- en: Using the Azure portal, you can navigate to the ACI created and click Containers.
    You will see the two aforementioned containers. Click the container for scoring
    and then click Logs. You can observe the received input and how it is processed.
    You can also connect to the container by clicking the Connect tab. For the Start
    Up Command, choose /bin/bash, and then click Connect.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Azure 门户，您可以导航到创建的 ACI，并单击容器。您将看到上述两个容器。单击评分容器，然后单击日志。您可以观察接收到的输入及其处理方式。您还可以单击连接选项卡连接到容器。对于启动命令，请选择
    /bin/bash，然后单击连接。
- en: If you navigate to */var/azureml-app*, you will find the files that you have
    been specified during deployment (e.g., *score.py*) as well as other supporting
    files needed for enabling the web service to be instantiated.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果导航到 */var/azureml-app*，您将找到在部署期间指定的文件（例如 *score.py*）以及用于启用 Web 服务实例化所需的其他支持文件。
- en: 'Once the deployment from the image is successful, you’ll have a scoring URI
    you can use to test the deployed model:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦从镜像部署成功，您将获得一个评分 URI，可用于测试已部署的模型：
- en: '[PRE11]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[Figure 5-10](#scoring_uri_for_the_new_web_service) shows the scoring URI for
    the web service that is created.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-10](#scoring_uri_for_the_new_web_service) 显示了创建的 Web 服务的评分 URI。'
- en: '![paml 0510](assets/paml_0510.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0510](assets/paml_0510.png)'
- en: Figure 5-10\. Scoring URI for the new web service
  id: totrans-97
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-10\. 新 Web 服务的评分 URI
- en: Using the Azure portal, you can also dive deeper into the deployment log, or
    use the portal to connect to the container that is running. [Figure 5-11](#azure_portal_showing_the_deployed_contai)
    shows the deployed containers in the ACI.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Azure 门户，您还可以深入了解部署日志，或使用门户连接到正在运行的容器。[图 5-11](#azure_portal_showing_the_deployed_contai)
    显示了在 ACI 中部署的容器。
- en: '![paml 0511](assets/paml_0511.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0511](assets/paml_0511.png)'
- en: Figure 5-11\. Azure portal showing the deployed container instance
  id: totrans-100
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-11\. Azure 门户显示已部署的容器实例
- en: '[Figure 5-12](#connecting_to_the_running_container) shows the processes that
    are running in the deployed container.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 5-12](#connecting_to_the_running_container) 显示了在部署容器中运行的进程。'
- en: '![paml 0512](assets/paml_0512.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0512](assets/paml_0512.png)'
- en: Figure 5-12\. Connecting to the running container
  id: totrans-103
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-12\. 连接到运行中的容器
- en: Testing a Deployed Model
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试已部署的模型
- en: 'With the web service deployed to ACI, you are now ready to test the web service.
    To do this, you randomly identify a row from `X_test`. `X_test` contains the test
    rows from the NASA data. You then construct the JSON payload, and perform a POST
    to the scoring URI, which returns the result. [Figure 5-13](#testing_the_container_instances_web_serv)
    shows the output from running the following code:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将 Web 服务部署到 ACI，现在可以准备测试 Web 服务。为此，从 `X_test` 中随机选择一行。`X_test` 包含 NASA 数据的测试行。然后构造
    JSON 负载，并执行 POST 到评分 URI，返回结果。[图 5-13](#testing_the_container_instances_web_serv)
    显示了运行以下代码的输出：
- en: '[PRE12]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![paml 0513](assets/paml_0513.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![paml 0513](assets/paml_0513.png)'
- en: Figure 5-13\. Testing the ACI web service by using the NASA dataset
  id: totrans-108
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-13\. 使用 NASA 数据集测试 ACI Web 服务
- en: Notice in this example that we are sending a POST request directly to the scoring
    URI. Because the web service is backed by an ACI instance, authentication is not
    enabled. Deploying models to ACI is good for quickly deploying and validating
    your models as well as testing a model that is still in development.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在此示例中，我们直接向评分URI发送POST请求。因为Web服务由ACI实例支持，因此未启用身份验证。将模型部署到ACI对于快速部署和验证模型以及测试正在开发中的模型非常有利。
- en: Deploying to AKS
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署到AKS
- en: For production deployment, consider deploying the models to AKS. To do that,
    you will need to create an AKS cluster. You can either use the Azure CLI or Azure
    Machine Learning SDK to create the cluster. After you create the AKS cluster,
    you can use it to deploy multiple images.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 对于生产部署，请考虑将模型部署到AKS。要做到这一点，您需要创建一个AKS集群。您可以使用Azure CLI或Azure Machine Learning
    SDK创建集群。创建AKS集群后，您可以使用它来部署多个映像。
- en: 'Let’s start by creating the AKS cluster by using the following code:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从使用以下代码创建AKS集群开始：
- en: '[PRE13]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'After you’ve created the AKS cluster, you can deploy the model to the service.
    In the following code, notice that we are specifying the AKS cluster that we have
    created as a `deployment_target`:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了AKS集群之后，您可以将模型部署到服务中。在以下代码中，请注意我们将创建的AKS集群指定为`deployment_target`：
- en: '[PRE14]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'With the model deployed to AKS, you will need to specify the service key in
    the header of the request before being able to invoke the scoring URI. To do that,
    let’s modify the test scoring code that you developed earlier:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 将模型部署到AKS后，您需要在请求的头部指定服务密钥，然后才能调用评分URI。为此，请修改您之前开发的测试评分代码：
- en: '[PRE15]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Swagger Documentation for the Web Service
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Web服务的Swagger文档
- en: After you have deployed the machine learning web service to various compute
    environments, it is important to provide good documentation describing how to
    use the APIs. This helps to accelerate development of applications that depend
    on the APIs for prediction. Because the machine learning APIs that you need to
    manage will evolve over time (especially during development), it is important
    to keep the documentation up-to-date.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 将机器学习Web服务部署到各种计算环境后，提供良好的文档描述如何使用API非常重要。这有助于加速依赖API进行预测的应用程序的开发。由于您需要管理的机器学习API在时间上会发生变化（特别是在开发过程中），因此保持文档的及时更新至关重要。
- en: '*Swagger* is an open source software framework that is used by many developers
    who are designing, developing, and documenting RESTful web services. Swagger documentation
    makes it easy for a developer to quickly describe and document the inputs and
    outputs of a web service. Swagger documentation has evolved over the years to
    become a common way of describing RESTful APIs. Having autogenerated Swagger documentation
    helps to ensure that up-to-date information is always available when you deploy
    your machine learning model and make it available as a web service.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*Swagger*是一个开源软件框架，许多开发人员在设计、开发和文档化RESTful Web服务时使用它。Swagger文档使开发人员能够快速描述和记录Web服务的输入和输出。Swagger文档已经逐步发展成为描述RESTful
    API的常见方式。自动生成的Swagger文档有助于确保在部署机器学习模型并将其作为Web服务提供时始终可用最新信息。'
- en: When you deploy a model using Azure Machine Learning, you can use the Python
    `inference-schema` package when creating the scoring file. The `inference-schema`
    package allows you to add function decorators that enable Swagger documentation
    to be generated as well as enforce the schema types.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Azure Machine Learning部署模型时，您可以在创建评分文件时使用Python的`inference-schema`包。`inference-schema`包允许您添加函数装饰器，以便生成Swagger文档并强制执行模式类型。
- en: 'First, import the relevant classes from the `inference-schema` package, as
    follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，从`inference-schema`包中导入相关类，如下所示：
- en: '[PRE16]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'After you have imported the various classes, you can specify the input and
    output schema, by providing the `input_schema` and `output_schema` as decorators
    for the `run()` function. The sample input and output data is provided as part
    of the `input_sample` and `output_sample` variables:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 导入各种类之后，您可以通过为`run()`函数提供`input_schema`和`output_schema`装饰器来指定输入和输出模式。示例输入和输出数据作为`input_sample`和`output_sample`变量的一部分提供：
- en: '[PRE17]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The following code shows the *score.py* file, with the decorators specified:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码展示了*score.py*文件，指定了装饰器：
- en: '[PRE18]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: After you have the *score.py* file defined and the model deployed, you can retrieve
    the Swagger using the Swagger URI, using `print(aci_service.swagger_uri)`.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 当你定义了 *score.py* 文件并且模型已部署后，你可以使用 Swagger URI 获取 Swagger，使用 `print(aci_service.swagger_uri)`。
- en: This enables you to download the file *swagger.json*, which contains the Swagger
    documentation for the API. For an example of the *swagger.json* generated, visit
    this book’s [GitHub repository](http://bit.ly/30gu2nz). You can also generate
    the documentation by importing the API using [SwaggerHub](https://oreil.ly/M818e).
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 这使你能够下载包含 API 的 Swagger 文档的 *swagger.json* 文件。想查看生成的 *swagger.json* 示例，请访问本书的[GitHub
    仓库](http://bit.ly/30gu2nz)。你还可以通过导入 API 使用 [SwaggerHub](https://oreil.ly/M818e)
    生成文档。
- en: Debugging a Deployment
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试部署
- en: As you work toward deploying your machine learning models to various compute
    environments (e.g., ACI, AKS), you might encounter situations in which the deployment
    fails (e.g., container terminated) or the scoring API is not returning the results
    you are expecting. In this section, we cover some common deployment failures and
    show you how to resolve them.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在部署机器学习模型到各种计算环境（如 ACI、AKS）的过程中，你可能会遇到部署失败（如容器终止）或评分 API 未返回预期结果的情况。在本节中，我们将介绍一些常见的部署失败情况，并向你展示如何解决它们。
- en: Web Service Deployment Fails
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Web 服务部署失败
- en: 'After a container image is created and you deploy the image using `Webservice.deploy_from_image()`,
    the ACI deployment might fail and the web service will not be available. As a
    result, you might see the following error message:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 创建容器映像并使用 `Webservice.deploy_from_image()` 部署映像后，ACI 部署可能会失败，Web 服务将不可用。因此，你可能会看到以下错误消息：
- en: '[PRE19]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'To debug what caused the service creation to fail, download the container image
    using the URI provided in the error message. At the same time, you can use the
    Azure portal to investigate. Navigate to the resource group where the Azure Machine
    Learning workspace has been created, and find the ACI that corresponds to the
    service you’re creating. [Figure 5-14](#the_container_instance_open_parenthesis)
    shows an example of the ACI. To investigate, do the following:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 若要调试导致服务创建失败的原因，请使用错误消息中提供的 URI 下载容器映像。同时，你可以使用 Azure 门户进行调查。导航至创建了 Azure 机器学习工作区的资源组，并找到对应于正在创建的服务的
    ACI。[图 5-14](#the_container_instance_open_parenthesis) 显示了 ACI 的示例。进行调查时，请执行以下操作：
- en: In the pane on the left, click Containers.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧窗格中，点击 Containers。
- en: '![paml 0514](assets/paml_0514.png)'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![paml 0514](assets/paml_0514.png)'
- en: Figure 5-14\. The container instance (automl-book-pred-maint2) to which the
    container image is deployed
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-14\. 部署容器映像的容器实例 (automl-book-pred-maint2)
- en: Click the container that displays the state as Waiting, and the previous state
    as Terminated, as shown in [Figure 5-15](#investigating_a_terminated_container_in).
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击显示状态为 Waiting 的容器，以及上一个状态为 Terminated 的容器，如 [图 5-15](#investigating_a_terminated_container_in)
    所示。
- en: '![paml 0515](assets/paml_0515.png)'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![paml 0515](assets/paml_0515.png)'
- en: Figure 5-15\. Investigating a terminated container in ACI
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-15\. 调查 ACI 中终止的容器
- en: Click the Logs tab, and you will see the logs and the errors causing the container
    to fail to boot, as depicted in [Figure 5-16](#error_causing_the_container_to_fail_to).
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 Logs 标签，你将看到日志和导致容器启动失败的错误，如 [图 5-16](#error_causing_the_container_to_fail_to)
    所示。
- en: '![paml 0516](assets/paml_0516.png)'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![paml 0516](assets/paml_0516.png)'
- en: Figure 5-16\. Error causing the container to fail to start
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 5-16\. 导致容器启动失败的错误
- en: Tip
  id: totrans-145
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: To learn how to troubleshoot Azure Machine Learning AKS and ACI deployments,
    see this [Microsoft documentation page on the topic](http://bit.ly/2VyQtFZ).
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解如何排查 Azure 机器学习 AKS 和 ACI 部署问题，请参阅此[Microsoft 文档页面](http://bit.ly/2VyQtFZ)。
- en: Conclusion
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this chapter, you learned how to register, deploy, and test the models produced
    by automated ML to ACI. You also learned how to specify the input and output schema
    for the web service so that you can generate Swagger documentation. Sometimes
    you might have a buggy scoring script that causes deployment to fail, and containers
    might fail to start. For these circumstances, you learned how to use the Azure
    portal as well as the Azure Machine Learning Python SDK to debug a failed deployment.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何注册、部署和测试由自动 ML 生成的模型到 ACI。你还学会了如何指定 Web 服务的输入和输出模式，以便生成 Swagger 文档。有时你可能会遇到有错误的评分脚本导致部署失败，容器可能无法启动。针对这些情况，你学会了如何使用
    Azure 门户以及 Azure 机器学习 Python SDK 来调试失败的部署。

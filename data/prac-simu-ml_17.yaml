- en: Chapter 14\. Synthetic Shopping
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 14 章. 合成购物
- en: You’ve had some initial exposure to using Unity to generate a custom synthetic
    dataset, but you’ve only scratched the surface.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经初步了解了如何使用 Unity 生成自定义合成数据集，但仅仅是触及到了皮毛。
- en: In this chapter, we’ll combine what we’ve learned so far to further explore
    the possibilities and features of Unity Perception, and talk about how you can
    apply them to your own projects.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将结合迄今学到的内容，进一步探索 Unity Perception 的可能性和特性，并讨论如何将其应用到您自己的项目中。
- en: 'Specifically, we’re going to create a full-featured set of synthetic data using
    Unity and Perception: a set of items that one might find at a supermarket, nicely
    annotated and tagged.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，我们将使用 Unity 和 Perception 创建一个完整功能的合成数据集：一个在超市可能找到的项目集，精心注释和标记。
- en: Imagine an AI-powered shopping trolley that knows what items you’re touching
    as you take them from the shelves (you don’t have to stretch far to imagine it,
    since it’s real!). In order to train such a thing, you’d need a large corpus of
    data, showing packages of products you’d find in a supermarket. You’d need the
    images of packages at a huge variety of angles, with a variety of things behind
    them, and you’d need them tagged so that when you train the model using them,
    you’d be able to accurately train it.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，一个由人工智能驱动的购物车，它知道您触摸的物品，当您从货架上拿出它们时（您不必费力去想象它，因为它是真实存在的！）。为了训练这样一个东西，您需要一个大量的数据集，显示超市里的产品包装。您需要各种角度的包装图像，以及它们背后各种物品的图像，并且需要对它们进行标记，以便在使用它们训练模型时，能够准确地进行训练。
- en: We’re going to make that dataset in this chapter.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章中创建该数据集。
- en: Creating the Unity Environment
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 Unity 环境
- en: First, we need to build the world inside Unity that will create our randomized
    shop images. The world in this case will be a scene that we add randomizers to,
    in order to create the range of images we need.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要在 Unity 中构建一个世界，用于创建我们的随机商店图像。在这种情况下，世界将是一个场景，我们向其中添加随机器，以创建我们需要的图像范围。
- en: 'To get the Unity environment up and running, follow these steps:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动和运行 Unity 环境，请按照以下步骤操作：
- en: Create a brand-new Unity project, selecting the Universal Render Pipeline (URP)
    template again, as shown in [Figure 14-1](#fig:shop1). Our project is called “SyntheticShopping,”
    but feel free to get creative.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个全新的 Unity 项目，再次选择 Universal Render Pipeline（URP）模板，如[图 14-1](#fig:shop1)所示。我们的项目名为“SyntheticShopping”，但您可以自由发挥创意。
- en: '![psml 1401](assets/psml_1401.png)'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1401](assets/psml_1401.png)'
- en: Figure 14-1\. A new URP project
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-1\. 一个新的 URP 项目
- en: When the project opens, install the Unity Perception package using the Unity
    Package Manager, as shown in [Figure 14-2](#fig:shop2).
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目打开后，使用 Unity Package Manager 安装 Unity Perception 包，如[图 14-2](#fig:shop2)所示。
- en: '![psml 1402](assets/psml_1402.png)'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1402](assets/psml_1402.png)'
- en: Figure 14-2\. Adding the Perception package
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-2\. 添加 Perception 包
- en: Tip
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: You can add the package by name, `com.unity.perception`, browse the package
    repository, or download and install the it manually.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以按名称添加该包，`com.unity.perception`，浏览包存储库，或手动下载并安装。
- en: Click the Import button next to the tutorial files in the Package Manager pane,
    while the Unity Perception package is selected. This will import a collection
    of useful images and models into the project. We’ll be using these for this chapter.
    This is shown in [Figure 14-3](#fig:shop3).
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在包管理器窗口中，单击教程文件旁边的导入按钮，同时选中 Unity Perception 包。这将导入一系列有用的图像和模型到项目中。本章我们将使用它们。如[图 14-3](#fig:shop3)所示。
- en: '![psml 1403](assets/psml_1403.png)'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1403](assets/psml_1403.png)'
- en: Figure 14-3\. Importing the tutorial files
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-3\. 导入教程文件
- en: In the Project pane, create a new scene, as shown in [Figure 14-4](#fig:shop4).
    Name it “SyntheticShop” or something similar.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目窗口中创建一个新场景，如[图 14-4](#fig:shop4)所示。将其命名为“SyntheticShop”或类似的名称。
- en: '![psml 1404](assets/psml_1404.png)'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1404](assets/psml_1404.png)'
- en: Figure 14-4\. A new scene
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-4\. 一个新场景
- en: Open the new, empty scene. Your Unity screen should look like [Figure 14-4](#fig:shop4).
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开新的空场景。您的 Unity 屏幕应该看起来像[图 14-4](#fig:shop4)。
- en: Next, locate the ForwardRenderer asset in the Project pane, as shown in [Figure 14-5](#fig:shop5).
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在项目窗口中找到 ForwardRenderer 资产，如[图 14-5](#fig:shop5)所示。
- en: '![psml 1405](assets/psml_1405.png)'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1405](assets/psml_1405.png)'
- en: Figure 14-5\. The ForwardRenderer asset
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-5\. ForwardRenderer 资产
- en: With the ForwardRenderer asset selected, using the Inspector click the Add Renderer
    Feature button and select Ground Truth Renderer Feature, as shown in [Figure 14-6](#fig:shop6).
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 ForwardRenderer 资产，在 Inspector 中点击添加渲染特性按钮，并选择 Ground Truth Renderer Feature，如
    [图 14-6](#fig:shop6) 所示。
- en: '![psml 1406](assets/psml_1406.png)'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1406](assets/psml_1406.png)'
- en: Figure 14-6\. Configuring the forward renderer
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-6\. 配置前向渲染器
- en: That’s everything we need for now; next we need to add a Perception Camera.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止我们所需的一切；接下来我们需要添加一个感知摄像机。
- en: A Perception Camera
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个感知摄像机
- en: To allow ground truth to be labeled, we need to add a Perception Camera to the
    Main Camera in the SyntheticShop scene.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 为了允许地面真实标注，我们需要将感知摄像机添加到 SyntheticShop 场景中的主摄像机。
- en: A Perception Camera is the camera, or the view, used to generate the images.
    What the Perception Camera sees is ultimately what will be rendered out for each
    image that’s created for you when you generate synthesized images.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 感知摄像机是生成图像所用的相机或视图。感知摄像机所见的内容最终将呈现为为您生成的每个图像。
- en: 'To add a Perception Camera, in Unity, follow these steps:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要在继续之前测试标签器，请在 Unity 中执行以下步骤：
- en: Select the Main Camera in the Hierarchy of your SyntheticShop scene, and use
    the Add Component button in its Inspector to add a Perception Camera component,
    as shown in [Figure 14-7](#fig:shop7).
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 SyntheticShop 场景的 Hierarchy 中选择 Main Camera，并在其 Inspector 中使用添加组件按钮添加 Perception
    Camera 组件，如 [图 14-7](#fig:shop7) 所示。
- en: '![psml 1407](assets/psml_1407.png)'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1407](assets/psml_1407.png)'
- en: Figure 14-7\. Adding the Perception Camera to the Main Camera
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-7\. 将感知摄像机添加到主摄像机
- en: Next, in the Inspector for the Perception Camera component, choose the + button
    below the Camera Labelers section, and add a BoundingBox2DLabeler, as shown in
    Figures [14-8](#fig:shop8) and [14-9](#fig:shop9).
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在 Perception Camera 组件的 Inspector 中，在 Camera Labelers 部分下选择 + 按钮，并添加一个 BoundingBox2DLabeler，如图
    [14-8](#fig:shop8) 和 [14-9](#fig:shop9) 所示。
- en: '![psml 1408](assets/psml_1408.png)'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1408](assets/psml_1408.png)'
- en: Figure 14-8\. Adding a BoundingBox2DLabeler
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-8\. 添加 BoundingBox2DLabeler
- en: '![psml 1409](assets/psml_1409.png)'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1409](assets/psml_1409.png)'
- en: Figure 14-9\. The labeler
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-9\. 标签器
- en: Now we need to create a new asset to name the labels. In the Project panel,
    create a new ID Label Config asset, as shown in [Figure 14-10](#fig:shop10). We
    named ours “SyntheticShoppingLabels.”
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要创建一个新的资产来命名这些标签。在 Project 面板中创建一个新的 ID Label Config 资产，如 [图 14-10](#fig:shop10)
    所示。我们命名为“SyntheticShoppingLabels”。
- en: '![psml 1410](assets/psml_1410.png)'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1410](assets/psml_1410.png)'
- en: Figure 14-10\. Creating the ID Label Config asset
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-10\. 创建 ID Label Config 资产
- en: Select the new asset in the Project pane, and find the Add All Labels to Config
    button (shown in [Figure 14-11](#fig:shop11)) in the Inspector to add the labels
    from the sample data you imported earlier.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Project 窗格中选择新资产，并在 Inspector 中找到添加所有标签到配置按钮（显示在 [图 14-11](#fig:shop11)）以将之前导入的样本数据中的标签添加到配置。
- en: '![psml 1411](assets/psml_1411.png)'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1411](assets/psml_1411.png)'
- en: Figure 14-11\. The labels and the Add All Labels to Config button
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-11\. 标签和添加所有标签到配置按钮
- en: Note
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: The labels we just added come from the Label components that were on the assets
    we imported. Because the assets had labels, but we did not have an ID Label Config
    asset acknowledging and containing those labels, we needed to make one and add
    them.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们刚刚添加的标签来自导入资产上的标签组件。因为资产有标签，但我们没有一个 ID Label Config 资产来确认和包含这些标签，所以我们需要创建一个并将它们添加进去。
- en: Verify that the labels have moved into the Added Labels section, as shown in
    [Figure 14-12](#fig:shop12).
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认标签已移动到已添加标签部分，如 [图 14-12](#fig:shop12) 所示。
- en: '![psml 1412](assets/psml_1412.png)'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1412](assets/psml_1412.png)'
- en: Figure 14-12\. The labels are added
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-12\. 标签已添加
- en: Select the Main Camera in the Hierarchy again, and go back to the Perception
    Camera component. Drag the SyntheticShoppingLabels asset into the Id Label Config
    field (or use the button, shown in [Figure 14-13](#fig:shop13)).
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次在 Hierarchy 中选择 Main Camera，回到 Perception Camera 组件。将 SyntheticShoppingLabels
    资产拖放到 Id Label Config 字段中（或使用按钮，如 [图 14-13](#fig:shop13) 所示）。
- en: Tip
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: Be sure the Enabled checkbox is ticked in the BoundBox2DLabeler section.
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确保在 BoundBox2DLabeler 部分选中 Enabled 复选框。
- en: '![psml 1413](assets/psml_1413.png)'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1413](assets/psml_1413.png)'
- en: Figure 14-13\. Assigning the ID Label Config asset
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-13\. 指定 ID Label Config 资产
- en: That’s everything. Next, we need to test the labels.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止。接下来，我们需要测试标签。
- en: Testing the labeler
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试标签器
- en: 'To test that the labeler is working before we continue:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试标签器在继续之前是否正常工作：
- en: Locate the foreground object prefabs that were imported as part of the sample
    assets, as shown in [Figure 14-14](#fig:shop14).
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到作为示例资产的一部分导入的前景对象预制件，如[图 14-14](#fig:shop14)所示。
- en: '![psml 1414](assets/psml_1414.png)'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1414](assets/psml_1414.png)'
- en: Figure 14-14\. The prefabs for the foreground
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-14\. 前景预制件
- en: Drag one of the prefabs (it does not matter which one) from the Project pane
    into the Hierarchy.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将项目窗格中的任意一个预制件拖动到层次结构中。
- en: Select the newly added prefab, and with the Scene view active, press the F key
    on your keyboard to focus the view on it, as shown in [Figure 14-15](#fig:shop15).
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择新添加的预制件，并在场景视图处于活动状态时，按键盘上的F键将视图聚焦在它上面，如[图 14-15](#fig:shop15)所示。
- en: '![psml 1415](assets/psml_1415.png)'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1415](assets/psml_1415.png)'
- en: Figure 14-15\. Focusing on some pasta
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-15\. 聚焦在一些意大利面上
- en: Move the Main Camera, in the Scene view, until it’s showing the newly added
    prefab nicely in the Game view.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 移动主摄像机，在场景视图中，直到在游戏视图中很好地显示新添加的预制件为止。
- en: Tip
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: Instead of manually aligning the camera, you can select the prefab, focus it
    in the Scene view, then ask the Main Camera to duplicate the Scene view’s perspective
    by right-clicking on it in the Hierarchy and choosing Align with View.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 而不是手动对齐摄像机，您可以选择预制件，在场景视图中聚焦它，然后通过右键单击层次结构中的预制件并选择“与视图对齐”来要求主摄像机复制场景视图的透视图。
- en: Run the scene, using the Play button. You should see a bounding box displayed
    appropriately around the item represented by the prefab, as shown in [Figure 14-16](#fig:shop16).
    If you do, this means everything is working so far!
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用播放按钮运行场景。您应该看到一个围绕预制件所代表的物品适当显示的边界框，如[图 14-16](#fig:shop16)所示。如果是这样，这意味着到目前为止一切正常！
- en: '![psml 1416](assets/psml_1416.png)'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1416](assets/psml_1416.png)'
- en: Figure 14-16\. Testing the labeler
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-16\. 测试标签
- en: If everything works as expected, delete the prefab object from the scene.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切正常工作，请从场景中删除预制对象。
- en: Adding randomizers
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加随机化器
- en: Next, we need to add some randomizers to the environment. The randomizers will
    randomly position the foreground (and eventually the background) objects to generate
    a range of different images.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要向环境中添加一些随机化器。随机化器将随机放置前景（以及最终的背景）对象，以生成一系列不同的图像。
- en: Tip
  id: totrans-78
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: By creating images that randomly position (and randomly do other things, too)
    the objects we want to train it to detect in images, we’re helping the machine
    learning model that we might ultimately train using data like this to be more
    effective at finding the objects in images that we want it to find.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 通过创建随机放置图像的图像（还可以随机做其他事情），我们正在帮助可能最终使用这些数据训练的机器学习模型更有效地找到我们希望它找到的图像中的对象。
- en: 'As we’ve discussed before, Unity Perception supplies a bunch of different randomizers,
    as well as allowing you to create your own as needed. For our synthetic shop,
    we want to randomize a lot of different things:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前讨论的，Unity Perception提供了许多不同的随机化器，并允许根据需要创建自己的随机化器。对于我们的合成商店，我们希望随机化许多不同的事物：
- en: The texture of things
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事物的质地
- en: The objects behind the things we’re interested in (background objects)
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们感兴趣的事物背后的对象（背景对象）
- en: The colors of the background objects
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 背景对象的颜色
- en: The placement of the objects (foreground and background)
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象的放置（前景和背景）
- en: The rotation of the objects (foreground and background)
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象（前景和背景）的旋转
- en: 'Follow these steps to add the randomizers:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤添加随机化器：
- en: Create an empty Game object in the Hierarchy, and name it “Scenario” or something
    similar.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在层次结构中创建一个空的游戏对象，并命名为“场景”或类似的名称。
- en: With the Scenario object selected, use its Inspector to add a Fixed Length Scenario
    component via the Add Component button, as shown in [Figure 14-17](#fig:shop17).
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择场景对象，并使用其检视器通过“添加组件”按钮添加Fixed Length Scenario组件，如[图 14-17](#fig:shop17)所示。
- en: '![psml 1417](assets/psml_1417.png)'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1417](assets/psml_1417.png)'
- en: Figure 14-17\. Adding a Fixed Length Scenario component
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-17\. 添加固定长度场景组件
- en: Add a BackgroundObjectPlacementRandomizer using the Add Randomizer button.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用“添加随机化器”按钮添加BackgroundObjectPlacementRandomizer。
- en: In the new BackgroundObjectPlacementRandomizer, click the Add Folder button,
    then navigate to the Prefabs folder in the Background Objects folder of the Tutorial
    Assets, as shown in [Figure 14-18](#fig:shop18).
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新的BackgroundObjectPlacementRandomizer中，点击“添加文件夹”按钮，然后导航到教程资产的Background Objects文件夹中的Prefabs文件夹，如[图 14-18](#fig:shop18)所示。
- en: '![psml 1418](assets/psml_1418.png)'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1418](assets/psml_1418.png)'
- en: Figure 14-18\. Adding a BackgroundObjectPlacementRandomizer
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-18\. 添加一个BackgroundObjectPlacementRandomizer
- en: 'With the folder of background objects added, you may want to tweak the Depth,
    Layer Count, Separation Distance, and Placement Area settings: ours are shown
    in [Figure 14-19](#fig:shop19).'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加了背景对象文件夹后，您可能需要调整深度、层计数、分离距离和放置区域设置：我们的设置如[图 14-19](#fig:shop19)所示。
- en: '![psml 1419](assets/psml_1419.png)'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1419](assets/psml_1419.png)'
- en: Figure 14-19\. Settings for the BackgroundObjectPlacementRandomizer
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-19\. 背景对象放置随机器设置
- en: Tip
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: You could run the simulation again now, and you’d find a bunch of random shapes
    (of the same color) in front of the camera. There’d be no foreground objects yet,
    though.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在可以再次运行模拟，你会发现相机前方出现了一堆随机形状（颜色相同）。尽管如此，前景对象还没有出现。
- en: Next, add a TextureRandomizer (using the same Add Randomizer button in the Fixed
    Length Scenario component in the Scenario object).
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，添加一个TextureRandomizer（在场景对象中的Fixed Length Scenario组件的“添加随机器”按钮中使用）。
- en: With the TextureRadomizer added, choose the Add Folder button, and find the
    Background Textures folder from the Tutorial Assets, as shown in [Figure 14-20](#fig:shop20).
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加TextureRadomizer后，选择“添加文件夹”按钮，并从教程资产中找到背景纹理文件夹，如[图 14-20](#fig:shop20)所示。
- en: '![psml 1420](assets/psml_1420.png)'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1420](assets/psml_1420.png)'
- en: Figure 14-20\. TextureRandomizer settings
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-20\. TextureRandomizer设置
- en: Next we’ll add a HueOffsetRandomizer, as shown in [Figure 14-21](#fig:shop21).
    We’ll use its default settings.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来我们将添加一个HueOffsetRandomizer，如[图 14-21](#fig:shop21)所示。我们将使用其默认设置。
- en: '![psml 1421](assets/psml_1421.png)'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1421](assets/psml_1421.png)'
- en: Figure 14-21\. Adding a HueOffsetRandomizer
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-21\. 添加一个HueOffsetRandomizer
- en: Now we need to add a ForegroundObjectPlacementRandomizer, and use the Add Folder
    button to point to the folder of foreground object prefabs (the groceries). Our
    settings are shown in [Figure 14-22](#fig:shop22).
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要添加一个ForegroundObjectPlacementRandomizer，并使用“添加文件夹”按钮指向前景对象预制件文件夹（杂货）。我们的设置如[图 14-22](#fig:shop22)所示。
- en: '![psml 1422](assets/psml_1422.png)'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1422](assets/psml_1422.png)'
- en: Figure 14-22\. The ForegroundObjectPlacementRandomizer
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-22\. 前景对象放置随机器
- en: For the final randomizer, we need a RotationRandomizer, as shown in [Figure 14-23](#fig:shop23).
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于最后的随机器，我们需要一个RotationRandomizer，如[图 14-23](#fig:shop23)所示。
- en: '![psml 1423](assets/psml_1423.png)'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1423](assets/psml_1423.png)'
- en: Figure 14-23\. The RotationRandomizer
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-23\. RotationRandomizer
- en: 'That’s all the randomizers. To set which objects the randomizers affect, we
    need to give those objects some additional components:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是所有的随机器。为了确定随机器影响的对象，我们需要给这些对象添加一些额外的组件：
- en: Open the Background Objects Prefabs folder in the Project pane, and select all
    the prefabs (still in the Project pane), as shown in [Figure 14-24](#fig:shop24).
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目面板中打开背景对象预制件文件夹，并选择所有预制件（仍然在项目面板中），如[图 14-24](#fig:shop24)所示。
- en: '![psml 1424](assets/psml_1424.png)'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1424](assets/psml_1424.png)'
- en: Figure 14-24\. Selecting the background prefab assets
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-24\. 选择背景预制件资源
- en: Using the Inspector (while all the background object prefabs are selected),
    click the Add Component button and add a TextureRandomizerTag component, a HueOffsetRandomizerTag
    component, and a RotationRandomizerTag component, as shown in [Figure 14-25](#fig:shop25).
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在检查员（选择所有背景对象预制件时），点击“添加组件”按钮，依次添加一个TextureRandomizerTag组件、一个HueOffsetRandomizerTag组件和一个RotationRandomizerTag组件，如[图 14-25](#fig:shop25)所示。
- en: '![psml 1425](assets/psml_1425.png)'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![psml 1425](assets/psml_1425.png)'
- en: Figure 14-25\. Adding components to the assets
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-25\. 添加到资源的组件
- en: Navigate to the Foreground Objects Prefabs folder in the Project pane, select
    all of those prefabs, and use the Inspector to add a RotationRandomizerTag to
    all the Foreground Objects.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到项目面板中的前景对象预制件文件夹，在该面板中选择所有这些预制件，并使用检查员将RotationRandomizerTag添加到所有前景对象中。
- en: That’s it!
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样！
- en: Faking It Until You Make It
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 看起来成功即成
- en: We’re ready to generate some fake supermarket data.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们准备生成一些假超市数据。
- en: Note
  id: totrans-124
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注
- en: You might need to position your camera so that it generates nicely framed images.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要调整摄像机的位置，以便生成良好框架的图像。
- en: Run the environment, and Unity will repeatedly run the randomizers that we’ve
    set up, and save an image each time. The Unity console will show you where they’ve
    been saved to, as shown in [Figure 14-26](#fig:shop26).
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 运行环境，Unity将重复运行我们设置的随机器，并在每次保存图像时显示其保存位置。Unity控制台会显示这些位置，如[图 14-26](#fig:shop26)所示。
- en: '![psml 1426](assets/psml_1426.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![psml 1426](assets/psml_1426.png)'
- en: Figure 14-26\. The path to the image output
  id: totrans-128
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-26\. 图像输出的路径
- en: If you navigate to this folder on your system, you’ll find a whole bunch of
    images, as well as some Unity Perception JSON files that describe the labels for
    the objects, as shown in [Figure 14-27](#fig:shop27).
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在系统上导航到此文件夹，您会发现大量图像，以及一些 Unity Perception JSON 文件，描述物体的标签，如图 [14-27](#fig:shop27)
    所示。
- en: '![psml 1427](assets/psml_1427.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![psml 1427](assets/psml_1427.png)'
- en: Figure 14-27\. An example of one of the randomized images
  id: totrans-131
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-27。随机图像示例
- en: You can use this collection of data to train a machine learning system outside
    of Unity. To train a machine learning system with that data, you could use any
    one of many approaches.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用这一组数据来训练 Unity 之外的机器学习系统。要使用这些数据训练机器学习系统，你可以采用许多方法之一。
- en: If you’re curious, we’d recommend starting with the Faster R-CNN model, using
    a ResNet50 backbone pretrained on ImageNet. You can find implementations of all
    of these things in the PyTorch package, `torchvision`.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感兴趣，我们建议首先使用 Faster R-CNN 模型，并使用在 ImageNet 上预训练的 ResNet50 骨干。你可以在 PyTorch
    的 `torchvision` 包中找到所有这些内容的实现。
- en: Tip
  id: totrans-134
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 小贴士
- en: We recommend finding a good book on PyTorch or TensorFlow if you want to learn
    more about this. In the meantime, a good starting point is Unity’s [datasetinsights
    repository on GitHub](https://oreil.ly/4FT3j).
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议如果您想进一步了解，请找一本关于 PyTorch 或 TensorFlow 的好书。与此同时，Unity 的 [GitHub 上的 datasetinsights
    仓库](https://oreil.ly/4FT3j) 是一个很好的起点。
- en: Using Synthesized Data
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用合成数据
- en: The synthesis chapters in this book focused on the use of a simulated *environment*
    to produce synthetic *data*, which is a growing trend in the broader machine learning
    space. This is because creating the kind of detection or classification model
    that is popular in hot ML areas like computer vision—where a computer can detect,
    recognize, and ideally make intelligent decisions about an object’s presence in
    a photograph or video feed—requires an enormous amount of data representing the
    kinds of objects you want the model to be able to recognize or distinguish between.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的合成章节专注于使用模拟*环境*生成合成*数据*，这是机器学习领域日益流行的趋势。这是因为创建流行的热门机器学习领域如计算机视觉中所需的检测或分类模型，需要大量代表您希望模型能够识别或区分的对象类型的数据。
- en: Usually this means a dataset made up of millions of photographs, each individually
    labeled with the objects present within them. Sometimes it even requires labeling
    the *regions* in each image where a specific object occurs. And this is an unfeasible
    amount of work to do if such a dataset doesn’t exist already for the problem you
    are trying to solve.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 通常这意味着由数百万张照片组成的数据集，每张照片都单独标记了其中出现的对象。有时甚至需要标记每张图像中特定对象出现的*区域*。如果针对您尝试解决的问题不存在这样的数据集，这将是一个不可行的工作量。
- en: This has led to the popularization of *sharing* datasets, which is a nice thing
    to do, but given how opaque machine learning models can be about how they arrive
    at critical decisions, knowing little about the data it was based on only contributes
    to the existing problem of lack of accountability and understanding in the ML
    space. So, if you’re training a model for something important, or as a learning
    exercise, it can still be desirable to create your own training datasets.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了*数据集共享*的流行，这是一个很好的做法，但由于机器学习模型在如何做出关键决策方面可能会显得不透明，了解其基于的数据很少，这只会加剧机器学习领域中责任和理解不足的问题。因此，如果您为重要事项或学习练习训练模型，仍然希望创建自己的训练数据集。
- en: 'Data synthesis can reduce the amount of work needed to create a dataset by
    allowing someone to define rules for what should be present in the data and how
    aspects of it may vary. A simulated environment can then be used to generate any
    number of random variations within the given specifications, and output each in
    a specified form—such as labeled images. This can be used to create a dataset
    for:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 数据合成可以通过允许某人定义数据中应该出现的规则及其各个方面的变化方式，来减少创建数据集所需的工作量。然后可以使用模拟环境在给定规格内生成任意数量的随机变化，并以指定形式输出，如标记图像。这可用于创建以下数据集：
- en: Recognition of a particular object—by generating pictures of the object in a
    virtual scene from different angles, among different objects, partially occluded,
    and shown in different lighting conditions
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在虚拟场景中从不同角度生成对象的图片，与其他对象混合显示，部分遮挡，并在不同光照条件下展示，来识别特定对象。
- en: Predicting distances or depth in a 2D image—by producing visual images and a
    corresponding depth map populated by the simulation (which knows the distances
    between objects and the camera)
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预测2D图像中的距离或深度 —— 通过生成视觉图像和相应的深度地图，这些图像和地图由仿真生成（仿真了解物体与摄像机之间的距离）
- en: Partitioning regions in a scene—produced similarly to predicting depth in 2D
    images but where the output could allow something like a self-driving car to recognize
    objects relevant to its driving, such as signs or pedestrians (as shown in [Figure 14-28](#fig:ch00_depth))
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 场景中的分区 —— 类似于预测2D图像中的深度，但输出可以允许像自动驾驶汽车这样的设备识别与其驾驶相关的物体，如标志或行人（如图[14-28](#fig:ch00_depth)所示）
- en: Anything else you can generate with random variations within a virtual scene
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以在虚拟场景中生成任何其他具有随机变化的内容
- en: '![psml 1428](assets/psml_1428.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![psml 1428](assets/psml_1428.png)'
- en: Figure 14-28\. Example of visual images (left) and a corresponding map that
    signifies the category of objects recognized in the scene (right)
  id: totrans-146
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图14-28\. 视觉图像示例（左）及表示场景中识别的物体类别的对应地图（右）
- en: What you do with data once it’s synthesized is up to you, as the kind of general-purpose
    machine learning required to ingest and learn from an image dataset is beyond
    the scope of this book. Here we focus on the simulation parts and how a simulation
    engine can enable unique kinds of machine learning.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据合成完成，您可以根据需要处理数据。从图像数据集中摄取并学习所需的通用机器学习超出了本书的范围。这里我们关注仿真部分以及仿真引擎如何实现独特类型的机器学习。
- en: For machine learning beyond simulation, you may wish to check out another of
    O’Reilly Media’s books on the topic, such as [*Practical Artificial Intelligence
    with Swift*](https://www.oreilly.com/library/view/practical-artificial-intelligence/9781492044802)
    by the same authors as this book or [*Hands-On Machine Learning with Scikit-Learn,
    Keras, and TensorFlow*](https://www.oreilly.com/library/view/hands-on-machine-learning/9781492032632)
    by Aurélien Géron.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 对于超出仿真的机器学习，您可能希望查看O'Reilly Media的另一本书，如[*使用Swift实现实用人工智能*](https://www.oreilly.com/library/view/practical-artificial-intelligence/9781492044802)，该书的作者与本书相同，或者[*使用Scikit-Learn、Keras和TensorFlow进行实战机器学习*](https://www.oreilly.com/library/view/hands-on-machine-learning/9781492032632)，该书由Aurélien
    Géron撰写。

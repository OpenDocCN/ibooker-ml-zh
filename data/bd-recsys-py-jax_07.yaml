- en: Part II. Retrieval
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二部分：检索
- en: '*How do we get all the data in the right place to train a recommendation system?
    How do we build and deploy systems for real-time inference?*'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*我们如何将所有数据放到正确位置来训练推荐系统？如何构建和部署用于实时推断的系统？*'
- en: Reading research papers about recommendation systems will often give the impression
    that they’re built via a bunch of math equations, and all the really hard work
    of using recommendation systems is in connecting these equations to the features
    of your problem. More realistically, the first several steps of building a production
    recommendation system fall under systems engineering. Understanding how your data
    will make it into your system, be manipulated into the correct structure, and
    then be available in each of the relevant steps of the training flow often constitutes
    the bulk of the initial recommendation system’s work. But even beyond this initial
    phase, ensuring that all the necessary components are fast enough and robust enough
    for production environments requires yet another significant investment in platform
    infrastructure.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读关于推荐系统的研究论文经常会给人一种印象，即它们是通过一堆数学方程构建的，而真正困难的工作是将这些方程与您问题的特征连接起来。更现实地说，构建生产推荐系统的前几个步骤通常属于系统工程。了解您的数据如何进入系统，如何被操作成正确的结构，以及如何在训练流程的每个相关步骤中可用，通常构成了初始推荐系统工作的大部分内容。但即使在这个初始阶段之后，确保所有必要的组件在生产环境中足够快速和稳健，仍然需要对平台基础设施进行另一项重大投资。
- en: Often you’ll build a component responsible for processing the various types
    of data and storing them in a convenient format. Next, you’ll construct a model
    that takes that data and encodes it in a latent space or other representation
    model. Finally, you’ll need to transform an input request into the representation
    as a query in this space. These steps usually take the form of jobs in a workflow
    management platform or services deployed as endpoints. The next few chapters will
    walk you through the relevant technologies and concepts necessary to build and
    deploy these systems—and the awareness of important aspects of reliability, scalability,
    and efficiency.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，您将构建一个负责处理各种类型数据并以方便的格式存储它们的组件。接下来，您将构建一个模型，该模型将获取这些数据并将其编码为潜在空间或其他表示模型中。最后，您需要将输入请求转换为此空间中的查询表示。这些步骤通常采用工作流管理平台中的作业形式或部署为端点的服务。接下来的几章将带您了解构建和部署这些系统所需的相关技术和概念，以及可靠性、可扩展性和效率等重要方面的认识。
- en: 'You might be thinking, “I’m a data scientist! I don’t need to know all this!”
    But you should know that RecSys has an inconvenient duality: model architecture
    changes often affect the systems architecture. Interested in trying out those
    fancy transformers? Your deployment strategy is going to need a new design. Maybe
    your clever feature embeddings can solve the cold-start problem! Those feature
    embeddings will need to serve your encoding layers and integrate with your new
    NoSQL feature store. Don’t panic! This part of the book is a walk through the
    Big Data Zoo.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会想：“我是一名数据科学家！我不需要了解所有这些！”但您应该知道，推荐系统有一个不方便的双重性：模型架构的变化经常影响系统架构。有兴趣尝试那些花俏的变压器吗？您的部署策略将需要新的设计。也许您聪明的特征嵌入可以解决冷启动问题！这些特征嵌入将需要为您的编码层提供服务，并与您的新NoSQL特征存储集成。不要惊慌！本书的这一部分将带您穿越大数据动物园。

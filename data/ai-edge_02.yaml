- en: Chapter 1\. A Brief Introduction to Edge AI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 简介边缘人工智能
- en: 'Welcome on board! In this chapter, we’ll be taking a comprehensive tour of
    the edge AI world. We’ll define the key terms, learn what makes “edge AI” different
    from other AI, and explore some of the most important use cases. Our goal for
    this chapter is to answer these two important questions:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎登上我们的列车！在本章中，我们将全面了解边缘人工智能的世界。我们将定义关键术语，了解“边缘人工智能”与其他人工智能的不同之处，并探讨一些最重要的应用案例。本章的目标是回答以下两个重要问题：
- en: What is edge AI, anyway?
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 那么，边缘人工智能究竟是什么？
- en: Why would I ever need it?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我为什么需要它？
- en: Defining Key Terms
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义关键术语
- en: Each area of technology has its own taxonomy of buzzwords, and edge AI is no
    different. In fact, the term *edge AI* is a union of two buzzwords, fused together
    into one mighty term. It’s often heard alongside its siblings, *embedded machine
    learning* and *TinyML*.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 每个技术领域都有其自己的术语，边缘人工智能也不例外。事实上，术语*边缘人工智能*就是两个流行术语的结合，融合成一个强大的术语。它经常与其兄弟姐妹*嵌入式机器学习*和*TinyML*一同听到。
- en: Before we move on, we better spend some time defining these terms and understanding
    what they mean. Since we’re dealing with compound buzzwords, let’s deal with the
    most fundamental parts first.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，我们最好花点时间来定义这些术语，并理解它们的含义。因为我们在处理复合术语，让我们首先处理最基本的部分。
- en: Embedded
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 嵌入式
- en: What is “embedded”? Depending on your background, this may be the most familiar
    of all the terms we’re trying to describe. *Embedded systems* are the computers
    that control the electronics of all sorts of physical devices, from Bluetooth
    headphones to the engine control unit of a modern car. *Embedded software* is
    software that runs on them. [Figure 1-1](#embedded_systems_image) shows a few
    places where embedded systems can be found.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: “嵌入式”是什么？根据您的背景，这可能是我们试图描述的所有术语中最为熟悉的。*嵌入式系统*是控制各种物理设备电子元件的计算机，从蓝牙耳机到现代汽车的发动机控制单元。*嵌入式软件*是在这些系统上运行的软件。[图 1-1](#embedded_systems_image)展示了嵌入式系统的一些应用场景。
- en: '![An illustration with examples of various embedded systems: audio-visual equipment,
    manufacturing equipment, gaming consoles, motion sensors, domestic appliances,
    medical devices, telecommunication equipment, and cars and vehicles.](assets/aiae_0101.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![一个插图，展示各种嵌入式系统的示例：音视频设备、制造设备、游戏机、运动传感器、家用电器、医疗设备、通信设备以及汽车和车辆。](assets/aiae_0101.png)'
- en: Figure 1-1\. Embedded systems are present in every part of our world, including
    the home and the workplace
  id: totrans-10
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-1。嵌入式系统存在于我们世界的每一个角落，包括家庭和工作场所。
- en: Embedded systems can be tiny and simple, like the microcontroller that controls
    a digital watch, or large and sophisticated, like the embedded Linux computer
    inside a smart TV. In contrast to general-purpose computers, like a laptop or
    smartphone, embedded systems are usually meant to perform one specific, dedicated
    task.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式系统可以是微小且简单的，比如控制数字手表的微控制器，也可以是庞大而复杂的，比如智能电视内部的嵌入式Linux计算机。与笔记本电脑或智能手机等通用计算机不同，嵌入式系统通常用于执行一个特定的、专用的任务。
- en: Since they power much of our modern technology, embedded systems are extraordinarily
    widespread. In fact, there were over 28 billion microcontrollers shipped in the
    year 2020^([1](ch01.html#idm45988806857632))—just one type of embedded processor.
    They’re in our homes, our vehicles, our factories, and our city streets. It’s
    likely you are never more than a few feet from an embedded system.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它们驱动了我们大部分现代技术，嵌入式系统非常普及。事实上，仅在2020年就有超过280亿个微控制器出货^([1](ch01.html#idm45988806857632))——这只是嵌入式处理器的一种类型。它们存在于我们的家中、车辆、工厂和城市街道。您可能离嵌入式系统只有几英尺远。
- en: It’s common for embedded systems to reflect the constraints of the environments
    into which they are deployed. For example, many embedded systems are required
    to run on battery power, so they’re designed with energy efficiency in mind—perhaps
    with limited memory or an extremely slow clock rate.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式系统通常反映其部署环境的限制。例如，许多嵌入式系统需要在电池供电下运行，因此它们设计时考虑了能源效率——可能具有有限的内存或极慢的时钟速率。
- en: Programming embedded systems is the art of navigating these constraints, writing
    software that performs the task required while making the most out of limited
    resources. This can be incredibly difficult. Embedded systems engineers are the
    unsung heroes of the modern world. If you happen to be one, thank you for your
    hard work!
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式系统编程是航行在这些限制中的艺术，编写软件以执行所需的任务，同时充分利用有限的资源。这可能非常困难。嵌入式系统工程师是现代世界的默默无闻的英雄。如果你碰巧是其中一位，感谢你的辛勤工作！
- en: The Edge (and the Internet of Things)
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 边缘（以及物联网）
- en: The history of computer networks has been a gigantic tug of war. In the first
    systems—individual computers the size of a room—computation was inherently centralized.
    There was one machine, and that one machine did all the work.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机网络的历史是一场巨大的拉锯战。在最初的系统中——房间大小的个人计算机——计算本质上是集中的。有一台机器，那台机器完成所有的工作。
- en: Eventually, however, computers were connected to terminals (as shown in [Figure 1-2](#mainframe_image))
    that took over some of their responsibilities. Most of the computation was happening
    in the central mainframe, but some simple tasks—like figuring out how to render
    letters onto a cathode-ray tube screen—were done by the terminal’s electronics.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，然而，计算机连接到终端设备（如[图1-2](#mainframe_image)所示），这些设备接管了它们的一些责任。大部分计算是在中央主机中进行的，但一些简单的任务——比如如何在阴极射线管屏幕上渲染字母——是由终端设备的电子部件完成的。
- en: '![An illustration of a mainframe computer with a cathode-ray tube terminal.](assets/aiae_0102.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![一台带阴极射线管终端的主机计算机的插图。](assets/aiae_0102.png)'
- en: Figure 1-2\. Mainframe computers performed the bulk of the computation, while
    simple terminals processed input, printed output, and rendered basic graphics
  id: totrans-19
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-2\. 主机计算机执行大部分计算，而简单的终端设备处理输入，打印输出并呈现基本图形
- en: Over time, terminals became more and more sophisticated, taking over more and
    more functions that were previously the job of the central computer. The tug-of-war
    had begun! Once the personal computer was invented, small computers could do useful
    work without even being connected to another machine. The rope had been pulled
    to the opposite extreme—from the center of the network to the *edge*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，终端设备变得越来越复杂，接管了以前由中央计算机负责的越来越多的功能。拉锯战开始了！一旦个人电脑发明出来，小型计算机甚至可以在不连接到其他机器的情况下完成有用的工作。绳索已经被拉到了相反的极端——从网络中心到*边缘*。
- en: The growth of the internet, along with web applications and services, made it
    possible to do some really cool stuff—from streaming video to social networking.
    All of this depends on computers being connected to servers, which have gradually
    taken over more and more of the work. Over the past decade, most of our computing
    has become centralized again—this time in the “cloud.” When the internet goes
    down, our modern computers aren’t much use!
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网的增长，以及Web应用程序和服务，使得一些真正酷炫的事情成为可能——从流媒体视频到社交网络。所有这些都依赖于计算机连接到逐渐接管越来越多工作的服务器上。在过去的十年中，我们的大部分计算再次变得集中化——这一次在“云”中。当互联网断开连接时，我们现代的计算机并没有太多用处！
- en: 'But the computers we use for work and play are not our only connected devices.
    In fact, it is estimated that in 2021 there were 12.2 billion assorted items connected
    to the internet,^([2](ch01.html#idm45988807774752)) creating and consuming data.
    This vast network of objects is called the Internet of Things (IoT), and it includes
    everything you can think of: industrial sensors, smart refrigerators, internet-connected
    security cameras, personal automobiles, shipping containers, fitness trackers,
    and coffee machines.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们用于工作和娱乐的计算机不是我们唯一连接的设备。事实上，据估计，到2021年，有122亿个各种各样的物品连接到互联网，^([2](ch01.html#idm45988807774752))创造和消费数据。这个庞大的物体网络被称为物联网（IoT），包括你能想到的一切：工业传感器、智能冰箱、互联网连接的安全摄像头、个人汽车、运输集装箱、健身追踪器和咖啡机。
- en: Tip
  id: totrans-23
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: Tip
- en: The first ever IoT device was created in 1982\. Students at Carnegie Mellon
    University [connected a Coke vending machine to the ARPANET](https://oreil.ly/B510Z)—an
    early precursor to the internet—so they could check whether it was empty without
    leaving their lab.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 第一台物联网设备于1982年被创造出来。卡内基梅隆大学的学生们 [将一台可口可乐自动售货机连接到ARPANET](https://oreil.ly/B510Z)——互联网的早期先驱——以便他们能在不离开实验室的情况下检查它是否空了。
- en: All of these devices are embedded systems containing microprocessors that run
    software written by embedded software engineers. Since they’re at the edge of
    the network, we can also call them *edge devices*. Performing computation on edge
    devices is known as *edge computing*.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些设备都是包含由嵌入式软件工程师编写的软件运行的嵌入式系统。因为它们位于网络边缘，我们也可以称它们为*边缘设备*。在边缘设备上执行计算称为*边缘计算*。
- en: The edge isn’t a single place; it’s more like a broad region. Devices at the
    edge of the network can communicate with each other, and they can communicate
    with remote servers, too. There are even servers that live at the edge of the
    network. [Figure 1-3](#edge_network_diagram) shows how this looks.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘不是一个单一的地方；它更像是一个广阔的区域。位于网络边缘的设备可以彼此通信，它们也可以与远程服务器通信。甚至有些服务器就位于网络边缘。[图 1-3](#edge_network_diagram)展示了这种情况。
- en: '![A diagram showing the relationship between the cloud and various devices
    on the edge.](assets/aiae_0103.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![显示云与边缘各种设备之间关系的图表。](assets/aiae_0103.png)'
- en: Figure 1-3\. Devices at the edge of the network can communicate with the cloud,
    with edge infrastructure, and with each other; edge applications generally span
    multiple locations within this map (for example, data might be sent from a sensor-equipped
    IoT device to a local edge server for processing)
  id: totrans-28
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-3\. 位于网络边缘的设备可以与云、边缘基础设施以及彼此通信；边缘应用通常跨越该地图内的多个位置（例如，数据可能从装有传感器的物联网设备发送到本地边缘服务器进行处理）。
- en: There are some major benefits to being at the edge of the network. For one,
    it’s where all the data comes from! Edge devices are our link between the internet
    and the physical world. They can use sensors to collect data based on what is
    going on around them, be that the heart rate of a runner or the temperature of
    a cold drink. They can make decisions on that data locally and send it to other
    locations. Edge devices have access to data that nobody else does.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 能够位于网络边缘有一些重要好处。首先，那里是所有数据的来源！边缘设备是我们与互联网和物理世界之间的链接。它们可以使用传感器根据周围发生的情况收集数据，无论是跑步者的心率还是冷饮的温度。它们可以在本地基于这些数据做出决策并将其发送到其他位置。边缘设备可以访问其他人无法接触的数据。
- en: Are Mobile Phones and Tablets Edge Devices?
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动电话和平板电脑是边缘设备吗？
- en: 'As portable computers that live at the edge of the network, mobile phones,
    tablets, and even personal computers are all edge devices. Mobile phones were
    one of the first platforms to feature edge AI: modern mobile phones use it for
    many purposes, from voice activation to smart photography.^([3](ch01.html#idm45988807355312))'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 作为位于网络边缘的便携式计算机，移动电话、平板电脑甚至个人电脑都是边缘设备。移动电话是最早采用边缘AI的平台之一：现代移动电话在许多用途上使用它，从语音激活到智能摄影^([3](ch01.html#idm45988807355312))。
- en: We’ll come back to edge devices later (since they’re the focus of this book).
    Until then, let’s continue to define some terms.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们稍后再回到边缘设备（因为它们是本书的焦点）。在此之前，让我们继续定义一些术语。
- en: Artificial Intelligence
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 人工智能
- en: 'Phew! This is a big one. Artificial intelligence (AI) is a very big idea, and
    it’s terribly hard to define. Since the dawn of time, humans have dreamed of creating
    intelligent entities that can help us in our struggle to survive. In the modern
    world we dream of robot sidekicks who assist with our adventures: hyperintelligent,
    synthetic minds that will solve all of our problems, and miraculous enterprise
    products that will optimize our business processes and guarantee us rapid promotion.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！这是一个大问题。人工智能（AI）是一个非常伟大的理念，定义起来非常困难。自从人类存在以来，我们就梦想着创造能帮助我们在生存斗争中的智能实体。在现代社会，我们梦想着机器人助手，他们可以协助我们的冒险：超智能的合成思维体将解决我们所有的问题，奇迹般的企业产品将优化我们的业务流程并保证我们迅速晋升。
- en: But to define AI, we have to define intelligence—which turns out to be particularly
    tough. What does it mean to be intelligent? Does it mean that we can talk, or
    think? Clearly not—just ask the slime mold (see [Figure 1-4](#slime_molds)), a
    simple organism with no central nervous system that is capable of solving a maze.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 但要定义AI，我们必须定义智能——这事实证明特别困难。什么是智能？是指我们能够说话或思考吗？显然不是——只要问问粘菌（参见[图 1-4](#slime_molds)），这是一种没有中枢神经系统的简单生物体，却能解决迷宫问题。
- en: '![A photograph of a slime mold in a petri dish.](assets/aiae_0104.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![显示培养皿中粘菌的照片。](assets/aiae_0104.png)'
- en: Figure 1-4\. Slime molds are single-celled organisms that have been documented
    as being able to solve mazes in order to locate food, via a process of biological
    computation—as shown in [“Slime Mould Solves Maze in One Pass Assisted by Gradient
    of Chemo-Attractants”](https://oreil.ly/Ecrq9) (Andrew Adamatzky, arXiv, 2011)
  id: totrans-37
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-4。粘菌是单细胞生物，据记录能够通过生物计算过程解迷宫，以寻找食物，如[“粘菌通过梯度化学引诱剂一次通过迷宫”](https://oreil.ly/Ecrq9)（Andrew
    Adamatzky，arXiv，2011）
- en: 'Since this isn’t a philosophy book, we don’t have the time to fully explore
    the topic of intelligence. Instead, we want to suggest a quick-and-dirty definition:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这不是一本哲学书籍，我们没有时间充分探讨智能的话题。相反，我们想提出一个简单粗暴的定义：
- en: Intelligence means knowing the right thing to do at the right time.
  id: totrans-39
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 智能意味着在正确的时间知道该做什么。
- en: 'This probably doesn’t stand up to academic debate, but that’s fine with us.
    It gives us a tool to explore the subject. Here are some tasks that require intelligence,
    according to our definition:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能经不起学术辩论，但这对我们来说没问题。它给了我们一个探索这个主题的工具。以下是一些根据我们的定义需要智能的任务：
- en: Taking a photo when an animal is in the frame
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当动物出现在画面中时拍照
- en: Applying the brakes when a driver is about to crash
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当司机即将撞车时刹车
- en: Informing an operator when a machine sounds broken
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当机器发出异常声音时通知操作员
- en: Answering a question with relevant information
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用相关信息回答问题
- en: Creating an accompaniment to a musical performance
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创作音乐表演的伴奏
- en: Turning on a faucet when someone wants to wash their hands
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当有人想洗手时打开水龙头
- en: Each of these problems involves both an action (turning on a faucet) and a precondition
    (when someone wants to wash their hands). Within their own context, most of these
    problems sound relatively simple—but, as anyone who has used an airport restroom
    knows, they are not always straightforward to solve.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 每一个问题都涉及一个动作（打开水龙头）和一个前提条件（当有人想洗手时）。在它们自己的背景下，大多数这些问题听起来相当简单——但正如任何使用过机场洗手间的人知道的那样，它们并不总是易于解决。
- en: It’s pretty easy for most humans to perform most of these tasks. We’re highly
    capable creatures with *general* intelligence. But it’s possible for smaller systems
    with more *narrow* intelligence to perform the tasks, too. Take our slime mold—it
    may not understand why it is solving a maze, but it’s certainly able to do it.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 对大多数人来说，执行大多数这些任务相当容易。我们是高度有能力的生物，具有*通用*智能。但较小系统具有*狭窄*智能也能执行这些任务。拿我们的粘菌来说，它可能不明白为什么要解迷宫，但它肯定能做到。
- en: That said, the slime mold is unlikely to also know the right moment to turn
    on a faucet. Generally speaking, it’s a lot easier to perform a single, tightly
    scoped task (like turning on a faucet) than to be able to perform a diverse set
    of entirely different tasks.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，粘菌不太可能也知道什么时候打开水龙头。一般来说，执行一个单一而紧密范围的任务（比如打开水龙头）要比执行完全不同任务集合要容易得多。
- en: 'Creating an artificial *general* intelligence, equivalent to a human being,
    would be super difficult—as decades of unsuccessful attempts have shown. But creating
    something that operates at slime mold level can be much easier. For example, preventing
    a driver from crashing is, in theory, quite a simple task. If you have access
    to both their current speed and their distance from a wall, you can do it with
    simple conditional logic:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 创造一种人工*通用*智能，相当于人类，将非常困难——正如几十年来不成功的尝试所示。但创建一个像粘菌水平的东西可能要容易得多。例如，理论上防止司机撞车是相当简单的任务。如果你能访问他们当前的速度和离墙的距离，你可以用简单的条件逻辑做到：
- en: '[PRE0]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Clearly, this simplified example doesn’t account for a lot of factors. But with
    a little more complexity, a modern car with a driver assistance system based on
    this conditional logic could arguably be marketed as AI.^([4](ch01.html#idm45988807647248))
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，这个简化的例子并未考虑很多因素。但稍微复杂一点，基于这种条件逻辑的现代汽车驾驶辅助系统可以被认为是AI的营销策略。^([4](ch01.html#idm45988807647248))
- en: 'There are two points we are trying to make here: the first is that intelligence
    is quite hard to define, and many rather simple problems require a degree of intelligence
    to solve. The second is that the programs that implement this intelligence do
    not necessarily need to be particularly complex. Sometimes, a slime mold will
    do.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有两个要点我们想要表达：第一是智能相当难以定义，许多相当简单的问题需要一定的智能才能解决。第二是实施这种智能的程序不一定需要特别复杂。有时候，粘菌就足够了。
- en: So, what is AI? In simple terms, it’s an artificial system that makes intelligent
    decisions based on some kind of input. And one way to create AI is with machine
    learning.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能是什么？简单来说，它是一种基于某种输入做出智能决策的人造系统。创建人工智能的一种方式是利用机器学习。
- en: Machine Learning
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 机器学习
- en: At its heart, machine learning (ML) is a pretty simple concept. It’s a way to
    discover patterns in how the world works—but automatically, by running data through
    algorithms.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习（ML）的核心概念其实很简单。它是一种通过运行数据通过算法来自动发现世界运作模式的方法。
- en: We often hear AI and machine learning used interchangeably, as if they are the
    same thing—but this isn’t the case. AI doesn’t always involve machine learning,
    and machine learning doesn’t always involve AI. That said, they pair together
    very nicely!
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们经常听到人工智能和机器学习被互换使用，好像它们是同一回事——但实际上并非如此。人工智能并不总是涉及机器学习，机器学习也不总是涉及人工智能。尽管如此，它们可以很好地配合使用！
- en: The best way to introduce machine learning is through an example. Imagine you’re
    building a fitness tracker—it’s a little wristband that an athlete can wear. It
    contains an accelerometer, which tells you how much acceleration is happening
    on each axis (x, y, and z) at a given moment in time—as shown in [Figure 1-5](#accelerometer_output).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍机器学习的最佳方式是通过一个例子。想象一下，你正在开发一个健身追踪器——这是一个运动员可以佩戴的小手腕带。它包含一个加速度计，告诉你在某一时刻每个轴（x、y和z）上发生了多少加速度——如[图1-5](#accelerometer_output)所示。
- en: '![A chart showing three axes of accelerometer data.](assets/aiae_0105.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![显示三轴加速度计数据的图表。](assets/aiae_0105.png)'
- en: Figure 1-5\. The output of a three-axis accelerometer sampled at 6.25 Hz
  id: totrans-60
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-5\. 以6.25赫兹采样的三轴加速度计输出
- en: To help your athletes, you want to keep an automatic log of the activities they
    are doing. For example, an athlete might spend an hour running on Monday and then
    an hour swimming on Tuesday.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助你的运动员，你想要自动记录他们正在做的活动。例如，一个运动员可能周一跑步一个小时，周二游泳一个小时。
- en: Since our movements while swimming are quite different from our movements while
    running, you theorize that you might be able to tell these activities apart based
    on the output of the accelerometer in your wristband. To collect some data, you
    give prototype wristbands to a dozen athletes and have them perform specific activities—either
    swimming, running, or doing nothing—while the wristbands log data (see [Figure 1-6](#accelerometer_output_2)).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们游泳时的动作与跑步时的动作非常不同，你推测可以根据手腕带加速计的输出区分这些活动。为了收集数据，你向十几名运动员提供了原型手腕带，并让他们执行特定活动——游泳、跑步或什么也不做——同时手腕带记录数据（见[图1-6](#accelerometer_output_2)）。
- en: 'Now that you have a dataset, you want to try to determine some rules that will
    help you understand whether a particular athlete is swimming, running, or just
    chilling out. One way to do this is by hand: analyzing and inspecting the data
    to see if anything stands out to you. Perhaps you notice that running involves
    more rapid acceleration on a particular axis than swimming. You can use this information
    to write some conditional logic that determines the activity based on the reading
    from that axis.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你有了一个数据集，你想要尝试确定一些规则，帮助你理解特定运动员是在游泳、跑步还是放松。一种方法是手动分析和检查数据，看看是否有什么显著特征。也许你注意到跑步涉及某个轴上更快的加速度。你可以利用这些信息编写一些条件逻辑，根据该轴的读数确定活动。
- en: Analyzing data by hand can be tricky, and it generally requires expert knowledge
    about the domain (such as human movements during sport). An alternative to manual
    analysis might be to use machine learning.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 手动分析数据可能会很棘手，通常需要对领域（例如运动过程中的人类运动）有专业知识。与手动分析的替代方法可能是使用机器学习。
- en: '![A chart showing three axes of accelerometer data.](assets/aiae_0106.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![显示三轴加速度计数据的图表。](assets/aiae_0106.png)'
- en: Figure 1-6\. The output of a three-axis accelerometer showing a different activity
    than in [Figure 1-5](#accelerometer_output); each activity can be characterized
    by a pattern of changes in acceleration on each axis over time
  id: totrans-66
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-6\. 三轴加速度计输出，显示与[图1-5](#accelerometer_output)不同的活动；每种活动可以通过加速度在每个轴上随时间变化的模式来表征。
- en: With an ML approach, you feed all of your athletes’ data into a training algorithm.
    When provided with both the accelerometer data and information about which activity
    the athlete is currently performing, the algorithm does its best to learn a mapping
    between the two. This mapping is called a *model*.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 通过机器学习方法，您将所有运动员的数据输入训练算法。当提供加速计数据和运动员当前执行的活动信息时，算法尽力学习两者之间的映射关系。这种映射称为*模型*。
- en: Hopefully, if the training was successful, your new machine learning model can
    take a brand new, never-seen-before input—a sample of accelerometer data from
    a particular window in time—and tell you which activity an athlete is performing.
    This process is known as *inference*.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 希望，如果训练成功，您的新机器学习模型可以接受一个全新的、从未见过的输入——来自特定时间窗口的加速计数据样本——并告诉您运动员正在执行的活动。这个过程被称为*推断*。
- en: This ability to understand *new* inputs is called *generalization*. During training,
    the model has learned the characteristics that distinguish running from swimming.
    You can then use the model in your fitness tracker to understand fresh data, in
    the same way that you might use the conditional logic we mentioned earlier.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 理解*新*输入的能力被称为*泛化*。在训练期间，模型已经学习了区分跑步和游泳的特征。然后，您可以在您的健身追踪器中使用该模型来理解新鲜的数据，就像您可能会使用我们之前提到的条件逻辑一样。
- en: There are lots of different machine learning algorithms, each with their own
    strengths and drawbacks—and ML isn’t always the best tool for the job. Later in
    this chapter we’ll discuss the scenarios where machine learning is the most helpful.
    But a nice rule of thumb is that machine learning really shines when our data
    is really complex.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 存在许多不同的机器学习算法，每种都有其自身的优势和缺点——而机器学习并不总是最适合的工具。本章后面我们将讨论机器学习最有帮助的场景。但一个不错的经验法则是，当我们的数据非常复杂时，机器学习真正发挥作用。
- en: Edge AI
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 边缘人工智能
- en: Congratulations, we’ve made it to our first compound buzzword! Edge AI is, unsurprisingly,
    the combination of edge devices and artificial intelligence.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜，我们终于谈到了我们的第一个复合流行语！边缘人工智能，不出意外地，是边缘设备和人工智能的结合。
- en: As we discussed earlier, edge devices are the embedded systems that provide
    the link between our digital and physical worlds. They typically feature sensors
    that feed them information about the environment they are close to. This gives
    them access to a metaphorical fire hose of high-frequency data.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前讨论过的，边缘设备是提供我们数字和物理世界之间连接的嵌入式系统。它们通常配备传感器，向它们提供周围环境的信息。这使它们可以访问高频率数据的象征性“消防水龙带”。
- en: We’re often told that data is the lifeblood of our modern economy, flowing throughout
    our infrastructure and enabling organizations to function. That’s definitely true—but
    all data is not created equally. The data obtained from sensors tends to have
    a very high volume but a relatively low informational content.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们经常被告知数据是我们现代经济的生命线，贯穿我们的基础设施并使组织能够运转。这确实如此，但并非所有数据都是平等的。从传感器获取的数据往往具有非常高的容量，但信息内容相对较低。
- en: Imagine the accelerometer-based wristband sensor we described in the previous
    section. The accelerometer is capable of taking a reading many hundreds of times
    per second. Each individual reading tells us very little about the activity currently
    taking place—it’s only in aggregate, over thousands of readings, that we can begin
    to understand what is going on.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下我们在前一节中描述的基于加速计的手腕传感器。加速计能够每秒进行多次读数。每个单独的读数对当前发生的活动告诉我们很少——只有在成千上万次读数的聚合中，我们才能开始理解正在发生的情况。
- en: Typically, IoT devices have been viewed as simple nodes that collect data from
    sensors and then transmit it to a central location for processing. The problem
    with this approach is that sending such large volumes of low-value information
    is extraordinarily costly. Not only is connectivity expensive, but transmitting
    data uses a ton of energy—which is a big problem for battery-powered IoT devices.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，物联网设备被视为简单的节点，这些节点从传感器收集数据，然后将其传输到中央位置进行处理。这种方法的问题在于，发送如此大量的低价值信息成本极高。连接费用昂贵，而传输数据则消耗大量能量——这对于使用电池供电的物联网设备来说是一个大问题。
- en: Because of this problem, the vast majority of data collected by IoT sensors
    has usually been discarded. We’re collecting a ton of sensor data, but we’re unable
    to do anything with it.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个问题，大多数由物联网传感器收集的数据通常被丢弃了。我们收集了大量的传感器数据，但我们无法对其进行任何处理。
- en: Edge AI is the solution to this problem. Instead of having to send data off
    to some distant location for processing, what if we do it directly on-device,
    where the data is being generated? Now, instead of relying on a central server,
    we can make decisions locally—no connectivity required.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI是解决这个问题的方法。与其将数据发送到远处的某个位置进行处理，不如直接在生成数据的设备上进行处理？现在，我们不再依赖于中央服务器，可以在本地做出决策——无需连接。
- en: And if we still want to report information back to upstream servers, or the
    cloud, we can transmit just the important information instead of having to send
    every single sensor reading. That should save a lot of cost and energy.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们仍然希望向上游服务器或云端报告信息，我们可以传输只有重要信息，而不必发送每个传感器读数。这应该会节省大量成本和能量。
- en: There are many different ways to deploy intelligence to the edge. [Figure 1-7](#edge_ai_continuum)
    shows the continuum from cloud AI to fully on-device intelligence. As we’ll see
    later in this book, edge AI can be spread across entire distributed computing
    architectures—including some nodes at the very edge, and others in local gateways
    or the cloud.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同的方式可以将智能部署到边缘。[图 1-7](#edge_ai_continuum) 显示了从云AI到完全设备上的智能的连续体。正如我们将在本书后面看到的那样，边缘AI可以分布在整个分布式计算架构中——包括一些节点在边缘，其他节点在本地网关或云中。
- en: 'As we’ve seen, artificial intelligence can mean many different things. It can
    be super simple: a touch of human insight encoded in a little simple conditional
    logic. It can also be super sophisticated, based on the latest developments in
    deep learning.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，人工智能可以意味着许多不同的东西。它可以非常简单：一点人类洞察力编码在一点简单的条件逻辑中。它也可以非常复杂，基于深度学习的最新发展。
- en: Edge AI is exactly the same. At its most basic, edge AI is about making some
    decisions on the edge of the network, close to where the data is made. But it
    can also take advantage of some really cool stuff. And that brings us nicely to
    the next section!
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI完全相同。在其最基本的层面上，边缘AI是关于在网络边缘，靠近数据生成的地方做出一些决策。但它也可以利用一些非常酷的东西。这使我们很好地过渡到下一节！
- en: '![A graphic showing the continuum between cloud intelligence and fully on-device
    intelligence.](assets/aiae_0107.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![显示云智能和完全设备智能之间连续体的图形。](assets/aiae_0107.png)'
- en: 'Figure 1-7\. The continuum between cloud intelligence and fully on-device intelligence;
    these six levels were described by [“Edge Intelligence: Paving the Last Mile of
    Artificial Intelligence with Edge Computing”](https://oreil.ly/8uWK-) (Zhou et.
    al., Proceedings of the IEEE, 2019)'
  id: totrans-84
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 1-7\. 云智能和完全设备智能之间的连续体；这六个级别由[《边缘智能：利用边缘计算铺设人工智能的最后一英里》](https://oreil.ly/8uWK-)（周等人，《IEEE会议记录》，2019年）描述。
- en: Embedded Machine Learning and Tiny Machine Learning
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 嵌入式机器学习和微型机器学习
- en: Embedded ML is the art and science of running machine learning models on embedded
    systems. Tiny machine learning, or TinyML,^([5](ch01.html#idm45988807272448))
    is the concept of doing this on the most constrained embedded hardware available—think
    microcontrollers, digital signal processors, and small field programmable gate
    arrays (FPGAs).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式ML是在嵌入式系统上运行机器学习模型的艺术和科学。微型机器学习，或TinyML，^([5](ch01.html#idm45988807272448))
    是在最受限制的嵌入式硬件上执行这一概念——如微控制器、数字信号处理器和小型可编程逻辑器件（FPGA）。
- en: When we talk about embedded ML, we’re usually referring to machine learning
    inference—the process of taking an input and coming up with a prediction (like
    guessing a physical activity based on accelerometer data). The training part usually
    still takes place on a conventional computer.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论嵌入式ML时，通常指的是机器学习推断——即根据加速度计数据猜测物理活动等过程。训练部分通常仍然在传统计算机上进行。
- en: Embedded systems often have limited memory. This raises a challenge for running
    many types of machine learning models, which often have high requirements for
    both read-only memory (ROM) (to store the model) and RAM (to handle the intermediate
    results generated during inference).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式系统通常具有有限的内存。这对于运行许多类型的机器学习模型提出了挑战，这些模型通常对只读存储器（ROM）（用于存储模型）和RAM（用于处理推断期间生成的中间结果）都有很高的要求。
- en: They are often also limited in terms of computation power. Since many types
    of machine learning models are quite computationally intensive, this can also
    raise problems.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 它们在计算能力方面也经常受到限制。由于许多类型的机器学习模型具有相当高的计算密集型，这也可能会引发问题。
- en: Luckily, over the past few years there have been many advances in optimization
    that have made it possible to run quite large and sophisticated machine learning
    models on some very small, low-power embedded systems. We’ll learn about some
    of those techniques over the next few chapters!
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，在过去几年中，优化方面取得了许多进展，使得在一些非常小型、低功耗的嵌入式系统上运行相当大型和复杂的机器学习模型成为可能。在接下来的几章中，我们将学习一些这些技术！
- en: Embedded machine learning is often deployed alongside its trusty companion,
    *digital signal processing*. Before we move on, let’s define that term, too.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式机器学习通常与其值得信赖的伴侣*数字信号处理*一起部署。在我们继续之前，让我们也来定义这个术语。
- en: Digital Signal Processing
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数字信号处理
- en: In the embedded world we often work with the digital representations of signals.
    For example, an accelerometer gives us a stream of digital values that correspond
    to acceleration on three axes, and a digital microphone gives us a stream of values
    that correspond to sound levels at a particular moment in time.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在嵌入式世界中，我们经常处理信号的数字表示。例如，加速度计提供了三个轴上加速度的数字值流，数字麦克风则提供了特定时间声音级别的值流。
- en: 'Digital signal processing (DSP) is the practice of using algorithms to manipulate
    these streams of data. When paired with embedded machine learning, we often use
    DSP to modify signals before feeding them into machine learning models. There
    are a few reasons why we might want to do this:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 数字信号处理（DSP）是使用算法来操作这些数据流的实践。当与嵌入式机器学习配对时，我们经常使用DSP来在馈送到机器学习模型之前修改信号。有几个原因我们可能想要这样做：
- en: Cleaning up a noisy signal
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清理噪声信号
- en: Removing spikes or outlying values that might be caused by hardware issues
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除由硬件问题引起的尖峰或异常值
- en: Extracting the most important information from a signal
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从信号中提取最重要的信息
- en: Transforming the data from the time domain to the frequency domain^([6](ch01.html#idm45988814923552))
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据从时域转换到频率域^([6](ch01.html#idm45988814923552))
- en: DSP is so common for embedded systems that often embedded chips have super fast
    hardware implementations of common DSP algorithms, just in case you need them.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: DSP在嵌入式系统中非常常见，以至于嵌入式芯片通常具有常见DSP算法的超快硬件实现，以备不时之需。
- en: We now share a solid understanding of the most important terms in this book.
    [Figure 1-8](#all_the_parts) shows how they fit together in context.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对本书中最重要的术语有了扎实的理解。[图1-8](#all_the_parts)展示了它们在上下文中的关系。
- en: '![A diagram showing the relationships between AI, edge computing, ML, edge
    AI, embedded ML, and tinyML.](assets/aiae_0108.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![展示人工智能、边缘计算、机器学习、边缘人工智能、嵌入式机器学习和TinyML之间关系的图表。](assets/aiae_0108.png)'
- en: Figure 1-8\. This diagram shows some of the most important concepts in edge
    AI in context with each other—from most general at the top to most specific at
    the bottom
  id: totrans-102
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-8。这个图示显示了边缘人工智能中一些最重要的概念，从最一般的概念到最具体的概念。
- en: In the next section, we’ll dive deep into the topic of edge AI and start to
    break down what makes it such an important technology.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将深入探讨边缘人工智能的主题，并开始分析其成为如此重要技术的原因。
- en: Why Do We Need Edge AI?
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么我们需要边缘人工智能？
- en: Imagine that this morning you went on a trail run through Joshua Tree National
    Park, a vast expanse of wilderness in the Southern California desert. You listened
    to music the whole time, streamed to your phone via an uninterrupted cellular
    connection. At a particularly beautiful spot, deep in the mountains, you snapped
    a photograph and sent it to your partner. A few minutes later you received their
    reply.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，今天早晨你在南加州沙漠中的乔舒亚树国家公园进行了一次越野跑步。你一路上一直听着音乐，通过不间断的手机蜂窝连接进行流媒体传输。在山间特别美丽的地方，你拍下了一张照片并发送给你的伴侣。几分钟后，你收到了他们的回复。
- en: In a world where even the most remote places have some form of data connection,
    why do we need edge AI? What is the point of tiny devices that can make their
    own decisions if the internet’s beefy servers are only a radio burst away? With
    all of the added complication, aren’t we just making life more difficult for ourselves?
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个即使是最偏远的地方也有某种形式数据连接的世界中，为什么我们需要边缘人工智能？如果互联网强大的服务器只隔着一段无线电信号，那么这些能够自主做出决策的小型设备有何意义呢？考虑到增加了所有这些复杂性，我们难道不是让生活变得更加困难吗？
- en: 'As you may have guessed, the answer is no! Edge AI solves some very real problems
    that otherwise stand in the way of making our technology work better for human
    beings. Our favorite framework for explaining the benefits of edge AI is a rude-sounding
    mnemonic: BLERP.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可能猜到的那样，答案是否定的！边缘人工智能解决了一些真实存在的问题，这些问题否则会阻碍我们的技术更好地服务于人类。我们用来解释边缘人工智能好处的最喜欢的框架是一个听起来不礼貌的记忆法：BLERP。
- en: To Understand the Benefits of Edge AI, Just BLERP
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 要了解边缘人工智能的好处，只需用BLERP记住即可
- en: 'BLERP? Jeff Bier, founder of the Edge AI and Vision Alliance, [created this
    excellent tool](https://oreil.ly/UY-DG) for expressing the benefits of edge AI.
    It consists of five words:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: BLERP？边缘人工智能和视觉联盟的创始人Jeff Bier，[创建了这个优秀的工具](https://oreil.ly/UY-DG)来表达边缘人工智能的好处。它由五个词组成：
- en: Bandwidth
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 带宽
- en: Latency
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 延迟
- en: Economics
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经济学
- en: Reliability
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可靠性
- en: Privacy
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隐私
- en: Armed with BLERP, anyone can easily remember and explain the benefits of edge
    AI. It’s also useful as a filter to help decide whether edge AI is well suited
    for a particular application.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有了BLERP，任何人都可以轻松记住和解释边缘人工智能的好处。它也很有用，可以作为一个过滤器，帮助决定边缘人工智能是否适合特定应用。
- en: Let’s go through it, word by word.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐字逐句地分析一下。
- en: Bandwidth
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 带宽
- en: IoT devices often capture more data than they have bandwidth to transmit. This
    means the vast majority of sensor data they capture is not even used—it’s just
    thrown away! Imagine a smart sensor that monitors the vibration of an industrial
    machine to determine if it is operating correctly. It might use a simple thresholding
    algorithm to understand when the machine is vibrating too much, or not enough,
    and then communicate this information via a low bandwidth radio connection.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网设备通常捕获比它们能传输的带宽还要多的数据。这意味着它们捕获的绝大部分传感器数据甚至都没有被使用——它们只是被丢弃了！想象一下，一个智能传感器监控工业机器的振动，以确定它是否正常运行。它可能使用简单的阈值算法来理解机器何时振动过多或过少，然后通过低带宽无线连接传达这些信息。
- en: This already sounds useful. But what if you could identify patterns in the data
    that give you a clue that the machine might be about to fail? If we had a lot
    of bandwidth, we could send the sensor data up to the cloud and do some kind of
    analysis to understand whether a failure is imminent.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 这听起来已经很有用了。但是如果你能识别数据中的模式，这些模式能够提示机器可能即将故障呢？如果我们有大量带宽，我们可以将传感器数据发送到云端，并进行某种分析，以了解故障是否即将发生。
- en: In many cases, though, there isn’t enough bandwidth or energy budget available
    to send a constant stream of data to the cloud. That means that we’ll be forced
    to discard most of our sensor data, even though it contains useful signals.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在许多情况下，没有足够的带宽或能量预算来发送持续的数据流到云端。这意味着我们将被迫丢弃大部分传感器数据，尽管这些数据包含有用的信号。
- en: Bandwidth limitations are very common. It’s not just about available connectivity—it’s
    also about power. Networked communication is often the most energy-intensive task
    an embedded system can perform, meaning that battery life is often the limiting
    function. Some machine learning models can be quite compute intensive, but they
    tend to still use less energy than transmitting a signal.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 带宽限制非常普遍。这不仅仅涉及到可用的连接性，还涉及到电力问题。网络通信通常是嵌入式系统执行的能量消耗最大的任务，这意味着电池寿命往往是限制性的因素。一些机器学习模型可能需要相当大的计算量，但它们往往比传输信号消耗的能量要少。
- en: This is where edge AI comes in. What if we could run the data analysis on the
    IoT device itself, without having to upload the data? In that case, if the analysis
    showed that the machine was about to fail, we could send a notification using
    our limited bandwidth. This is much more feasible than trying to stream all of
    the data.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是边缘人工智能的用武之地。如果我们能在物联网设备本身上运行数据分析，而不必上传数据，那么如果分析显示机器即将故障，我们可以使用有限的带宽发送通知。这比试图传输所有数据要可行得多。
- en: Of course, it’s also quite common for devices to have no network connection
    at all! In this case, edge AI enables a whole galaxy of use cases that were previously
    impossible. We’ll hear more about this later.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，设备没有任何网络连接也是非常常见的！在这种情况下，边缘人工智能使得许多之前不可能的用例成为现实。我们稍后会详细讨论这一点。
- en: Latency
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 延迟
- en: Transmitting data takes time. Even if you have a lot of available bandwidth
    it can take tens or hundreds of milliseconds for a round-trip from a device to
    an internet server. In some cases, latency can be measured in minutes, hours,
    or days—think satellite communications, or store-and-forward messaging.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 数据传输需要时间。即使有大量可用带宽，从设备到互联网服务器的往返时间可能需要数十到数百毫秒。在某些情况下，延迟可以达到分钟、小时或天数——想想卫星通信或存储转发消息。
- en: Some applications demand a faster response. For example, it might be impractical
    for a moving vehicle to be controlled by a remote server. Controlling a vehicle
    as it navigates an environment requires constant feedback between steering adjustments
    and the vehicle’s position. Under significant latency, steering becomes a major
    challenge!
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 有些应用程序需要更快的响应。例如，由远程服务器控制移动车辆可能是不切实际的。在车辆导航环境中控制车辆需要方向调整和车辆位置之间的持续反馈。在显著的延迟下，方向调整成为一项主要挑战！
- en: Edge AI solves this problem by removing the round-trip time altogether. A great
    example of this is a self-driving car. The car’s AI systems run on onboard computers.
    This allows it to react nearly instantly to changing conditions, like the driver
    in front slamming on their brakes.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘人工智能通过完全消除往返时间来解决这个问题。一个很好的例子是自动驾驶汽车。车辆的人工智能系统在车载计算机上运行。这使得它能够几乎即时地对变化的条件作出反应，比如前方的驾驶员突然刹车。
- en: One of the most compelling examples of edge AI as a weapon against latency is
    in robotic space exploration. Mars is so distant from Earth that it takes *minutes*
    for a radio transmission to reach it at the speed of light. Even worse, direct
    communication is often impossible due to the arrangement of the planets. This
    makes controlling a Mars rover very hard. NASA solved this problem by using edge
    AI—their rovers use [sophisticated artificial intelligence systems](https://oreil.ly/iQr8t)
    to plan their tasks, navigate their environments, and search for life on the surface
    of another world. If you have some spare time, you can even [help future Mars
    rovers navigate](https://oreil.ly/RATTg) by labeling data to improve their algorithms!
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘人工智能作为解决延迟问题的有力工具的一个最具说服力的例子是在机器人空间探索中。火星与地球相距遥远，以光速传播的无线电信号需要*数分钟*才能到达。更糟糕的是，由于行星的排列方式，直接通信通常是不可能的。这使得控制火星探测器非常困难。NASA通过使用边缘人工智能来解决这个问题——他们的探测器利用复杂的人工智能系统规划任务、导航环境，并在另一个世界的表面搜索生命。如果你有空，甚至可以通过标记数据来帮助未来的火星探测器导航！
- en: Economics
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 经济学
- en: Connectivity costs a lot of money. Connected products are more expensive to
    use, and the infrastructure they rely on costs their manufacturers money. The
    more bandwidth required, the steeper the cost. Things get especially bad for devices
    deployed on remote locations that require long-range connectivity via satellite.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 连通性成本很高。连接的产品使用起来更昂贵，它们依赖的基础设施也会给制造商带来成本压力。所需带宽越大，成本就越高。对于部署在需要通过卫星进行远程长距离连接的偏远地区的设备来说，情况尤为严峻。
- en: By processing data on-device, edge AI systems reduce or avoid the costs of transmitting
    data over a network and processing it in the cloud. This can unlock a lot of use
    cases that would have previously been out of reach.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在设备上处理数据，边缘人工智能系统减少或避免了通过网络传输和在云中处理数据的成本。这可以解锁许多以前无法实现的用例。
- en: In some cases, the only “connectivity” that works is sending out a human being
    to perform some manual task. For example, it’s common for conservation researchers
    to use camera traps to monitor wildlife in remote locations. These devices take
    photos when they detect motion and store them to an SD card. It’s too expensive
    to upload every photo via satellite internet, so researchers have to travel out
    to their camera traps to collect the images and clear the storage.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，唯一有效的“连接”方式是派遣人员执行某些手动任务。例如，保护研究人员经常使用摄像机陷阱监测偏远地区的野生动物。这些设备在检测到运动时拍摄照片并将其存储到SD卡中。通过卫星互联网上传每张照片成本太高，因此研究人员必须前往他们的摄像机陷阱收集图像并清空存储空间。
- en: Because traditional camera traps are motion activated, they take a lot of unnecessary
    photos—they might be triggered by branches moving in the wind, hikers walking
    past, and creatures the researchers aren’t interested in. But some teams are now
    using edge AI to identify only the animals they care about, so they can discard
    the other images. This means they don’t have to fly out to the middle of nowhere
    to change an SD card *quite* so often.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 由于传统的摄像机陷阱是由动作触发的，它们拍摄了许多不必要的照片——可能是由于风中的树枝、路过的徒步者和研究者不感兴趣的生物而触发。但现在一些团队正在使用边缘AI仅识别他们关心的动物，这样他们可以丢弃其他图像。这意味着他们不必频繁飞往荒无人烟之地更换SD卡。
- en: In other cases, the cost of connectivity might not be a concern. However, for
    products that depend on server-side AI, the cost of maintaining server-side infrastructure
    can complicate your business model. If you have to support a fleet of devices
    that need to “phone home” to make decisions, you may be forced into a subscription
    model. You’ll also have to commit to maintaining servers for a long period of
    time—at the risk of your customers finding themselves with “bricked” devices if
    you decide to pull the plug.^([7](ch01.html#idm45988807612560))
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在其他情况下，连接成本可能并不是一个问题。但是，对于依赖服务器端AI的产品来说，维护服务器端基础设施的成本可能会使您的商业模式变得复杂化。如果您必须支持一大批需要“联系家里”的设备来做决策，您可能会被迫采用订阅模式。您还必须承诺长时间维护服务器，有可能导致您的客户在您决定停止服务时拥有“砖头”设备的风险。^([7](ch01.html#idm45988807612560))
- en: Don’t underestimate the impact of economics. By reducing the cost of long-term
    support, edge AI enables a vast number of use cases that would otherwise be infeasible.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 不要低估经济影响。通过减少长期支持成本，边缘AI使得许多原本不可行的用例成为可能。
- en: Reliability
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 可靠性
- en: Systems controlled by on-device AI are potentially more reliable than those
    that depend on a connection to the cloud. When you add wireless connectivity to
    a device, you’re adding a vast, overwhelmingly complex web of dependencies, from
    link-layer communications technologies to the internet servers that may run your
    application.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 由设备端AI控制的系统比依赖云连接的系统潜在更可靠。当您为设备添加无线连接时，您将增加一个庞大且极其复杂的依赖网络，从链路层通信技术到可能运行应用程序的互联网服务器。
- en: Many pieces of this puzzle are outside of your control, so even if you make
    all the right decisions you will still be exposed to the reliability risk associated
    with technologies that make up your distributed computing stack.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这个谜题的许多部分都超出了您的控制范围，因此即使您做出了所有正确的决定，仍然会面临与构成您分布式计算堆栈的技术相关的可靠性风险。
- en: For some applications, this might be tolerable. If you’re building a smart speaker
    that responds to voice commands, your users might understand if it stops recognizing
    their commands when their home internet connection goes down. That said, it can
    still be a frustrating experience!
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 对于某些应用来说，这可能是可以容忍的。如果您正在构建一个响应语音命令的智能音箱，当用户的家庭互联网连接断开时停止识别命令，用户可能会理解。尽管如此，这仍然可能是一种令人沮丧的体验！
- en: But in other cases, safety is paramount. Imagine an AI-based system that monitors
    an industrial machine to make sure that it is being operated within safe parameters.
    If it stops working when the internet goes down, it could endanger human lives.
    It would be much safer if the AI is based entirely on-device, so it still operates
    in the event of a connectivity problem.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 但在其他情况下，安全至关重要。想象一个基于AI的系统，监视工业机器以确保其在安全参数内操作。如果互联网断开连接时停止工作，可能会危及人类生命。如果AI完全基于设备端，则在连接问题发生时仍然能够正常运行，这样会更安全。
- en: Reliability is often a compromise, and the required level of reliability varies
    depending on use case. Edge AI can be a powerful tool in improving the reliability
    of your products. While AI is inherently complex, it represents a different type
    of complexity than global connectivity, and its risk is easier to manage in many
    situations.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性往往是一种妥协，所需的可靠性水平因用例而异。边缘AI可以成为改善产品可靠性的强大工具。虽然AI本质上复杂，但它代表了一种不同类型的复杂性，其风险在许多情况下更易于管理。
- en: Privacy
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 隐私
- en: Over the past few years, many people have begrudgingly resigned themselves to
    a trade-off between convenience and privacy. The theory is that if we want our
    technology products to be smarter and more helpful, we have to give up our data.
    Because smart products traditionally make decisions on remote servers, they very
    often end up sending streams of sensor data to the cloud.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去几年中，许多人不情愿地接受了便利与隐私之间的折衷。理论上来说，如果我们希望我们的技术产品更智能、更有帮助，我们就必须放弃我们的数据。因为智能产品传统上是在远程服务器上做出决策，它们往往会向云端发送大量的传感器数据流。
- en: This may be fine for some applications—for example, we might not worry that
    an IoT thermostat is reporting temperature data to a remote server.^([8](ch01.html#idm45988806639536))
    But for other applications, privacy is a huge concern. For example, many people
    would hesitate to install an internet-connected security camera inside their home.
    It might provide some reassuring security, but the trade-off—that a live video
    and audio feed of their most private spaces is being broadcast to the internet—does
    not seem worth it. Even if the camera’s manufacturer is entirely trustworthy,
    there’s always a chance of the data being exposed through security vulnerabilities.^([9](ch01.html#idm45988806638848))
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 对于某些应用来说可能是合适的，例如我们可能不担心物联网恒温器将温度数据报告给远程服务器。^([8](ch01.html#idm45988806639536))
    但对于其他应用来说，隐私是一个巨大的问题。例如，许多人可能会犹豫安装一个能连接到互联网的安全摄像头在他们家中。它可能提供一些令人安心的安全性，但是这种交换——让他们最私密空间的实时视频和音频流被广播到互联网上——似乎不值得。即使摄像头的制造商是完全值得信赖的，数据通过安全漏洞暴露的可能性也总是存在。^([9](ch01.html#idm45988806638848))
- en: Edge AI provides an alternative. Rather than streaming live video and audio
    to a remote server, a security camera could use some onboard intelligence to identify
    that an intruder is present when the owners are out at work. It could then alert
    the owners in an appropriate way. When data is processed on an embedded system
    and is never transmitted to the cloud, user privacy is protected and there is
    less chance of abuse.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘人工智能提供了一种替代方案。安全摄像头可以利用一些内置智能在主人不在家时识别到入侵者的存在，并以适当的方式通知主人。当数据在嵌入式系统上处理并且从未传输到云端时，用户的隐私得到了保护，滥用的可能性也降低了。
- en: The ability of edge AI to enable privacy unlocks a huge number of exciting use
    cases. It’s an especially important factor for applications in security, industry,
    childcare, education, and healthcare. In fact, since some of these fields involve
    tight regulations (or customer expectations) around data security, the product
    with the best privacy is one that *avoids* collecting data altogether.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘人工智能能够实现隐私，解锁大量令人兴奋的用例。对于安全、工业、儿童保育、教育和医疗应用来说，这是一个特别重要的因素。事实上，由于这些领域涉及到数据安全的严格法规（或客户期望），最好的隐私产品是那些*完全避免*收集数据的产品。
- en: Using BLERP
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用BLERP
- en: 'As we’ll start to see in [Chapter 2](ch02.html#chapter_edge_ai_real_world),
    BLERP can be a handy tool for understanding whether a particular problem is well
    suited for edge AI. There doesn’t have to be a strong argument for every word
    of the acronym: even meeting just one or two criteria, if compelling enough, can
    give merit to a use case.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们将在[第2章](ch02.html#chapter_edge_ai_real_world)中看到的，BLERP可以是理解某个问题是否适合边缘人工智能的便捷工具。并不是每个首字母缩略词的每个字都必须有一个强有力的论证：即使只符合一个或两个标准，如果足够有说服力，也可以证明其用例的合理性。
- en: Edge AI for Good
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 边缘人工智能的益处
- en: 'The unique benefits of edge AI provide a new set of tools that can be applied
    to some of our world’s biggest problems. Technologists in areas like conservation,
    healthcare, and education are already using edge AI to make a big impact. Here
    are just a few examples we’re personally excited about:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘人工智能的独特优势提供了一套新工具，可以应用于全球一些最大的问题。保护、医疗和教育领域的技术人员已经开始利用边缘人工智能产生重大影响。以下是一些我们个人特别激动的例子：
- en: '[Smart Parks](https://www.smartparks.org) is using [collars running machine
    learning models](https://oreil.ly/nyVIm) to better understand elephant behavior
    in wildlife parks around the world.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[智慧公园](https://www.smartparks.org)正在利用[运行机器学习模型的项圈](https://oreil.ly/nyVIm)更好地理解全球野生动物公园中大象的行为。'
- en: Izoelektro’s [RAM-1](https://oreil.ly/hR-US) helps prevent forest fires caused
    by power transmission hardware by using embedded machine learning to detect upcoming
    faults.
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Izoelektro的[RAM-1](https://oreil.ly/hR-US)利用嵌入式机器学习检测即将发生的电力传输硬件故障，从而帮助防止森林火灾。
- en: Researchers like Dr. Mohammed Zubair Shamim from King Khalid University in Saudi
    Arabia are training models that can [screen patients for life-threatening medical
    conditions such as oral cancer](https://oreil.ly/ktZq_) using low-cost devices.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自沙特阿拉伯哈利德国王大学的Mohammed Zubair Shamim博士正在训练模型，可以利用低成本设备[筛选出患有口腔癌等生命威胁性疾病的患者](https://oreil.ly/ktZq_)。
- en: Students across the world are developing solutions for their local industries.
    João Vitor Yukio Bordin Yamashita, from UNIFEI in Brazil, created a system for
    [identifying diseases that affect coffee plants](https://oreil.ly/gSv-J) using
    embedded hardware.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全球各地的学生正在为其本地产业开发解决方案。来自巴西联邦大学工程学院（UNIFEI）的João Vitor Yukio Bordin Yamashita，利用嵌入式硬件创建了一个系统，用于[识别影响咖啡植物的疾病](https://oreil.ly/gSv-J)。
- en: The properties of edge AI make it especially well-suited for application to
    global problems. Since reliable connectivity is expensive and not universally
    available, many current generation smart technologies only benefit people living
    in industrialized, wealthy, and well-connected regions. By removing the need for
    a reliable internet connection, edge AI increases access to technologies that
    can benefit people and the planet.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI的特性使其特别适合应用于全球性问题。由于可靠的连接成本高昂且并非普遍可用，许多当前的智能技术只有在工业化、富裕和良好连接的地区才有利用的价值。通过消除对可靠互联网连接的需求，边缘AI增加了访问能力，使得能够受益于这些技术的人群更广泛。
- en: When machine learning is part of the mix, edge AI generally involves small models—which
    are often quick and cheap to train. Since there’s also no need to maintain expensive
    backend server infrastructure, edge AI makes it possible for developers with limited
    resources to build cutting-edge solutions for the local markets that they know
    better than anyone. To learn more about these opportunities, we recommend watching
    [“TinyML and the Developing World”](https://oreil.ly/csz6p), an excellent talk
    given by Pete Warden at the TinyML Kenya meetup.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 当机器学习成为混合中的一部分时，边缘AI通常涉及小型模型，这些模型通常快速且廉价地训练。由于也无需维护昂贵的后端服务器基础设施，边缘AI使得资源有限的开发者能够为他们更了解的本地市场构建尖端解决方案。想要了解更多这些机会，请观看[“TinyML和发展中国家”](https://oreil.ly/csz6p)，这是Pete
    Warden在TinyML Kenya会议上的精彩演讲。
- en: As we saw in [“Privacy”](#privacy_blerp), edge AI also creates an opportunity
    to improve privacy for users. In our networked world, many companies treat user
    data as a valuable resource to be extracted and mined. Consumers and business
    owners are often required to barter away their privacy in order to use AI products,
    putting their data in the hands of unknown third parties.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[“隐私”](#privacy_blerp)中所看到的，边缘AI还为用户提供了改善隐私的机会。在我们网络化的世界中，许多公司将用户数据视为可被提取和挖掘的宝贵资源。消费者和业主通常需要在使用AI产品时牺牲他们的隐私，将他们的数据交给未知的第三方。
- en: With edge AI, data does not need to leave the device. This enables a more trusting
    relationship between user and product, giving users ownership of their own data.
    This is especially important for products designed to serve vulnerable people,
    who may feel skeptical of services that seem to be harvesting their data.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 使用边缘AI，数据无需离开设备。这使得用户与产品之间能够建立更加信任的关系，让用户拥有对自己数据的所有权。对于设计服务弱势群体的产品，这一点尤为重要，这些群体可能对看似在收集他们数据的服务持怀疑态度。
- en: As we’ll see in later sections, there are many potential pitfalls that must
    be navigated in order to build ethical AI systems. That said, the technology provides
    a tremendous opportunity to make the world a better place.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们将在后面的部分中看到的，要构建道德AI系统必须避免许多潜在的陷阱。尽管如此，这项技术为使世界变得更美好提供了巨大的机会。
- en: Note
  id: totrans-160
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: If you’re thinking about using edge AI to solve problems for your local community,
    the authors would love to hear from you. We’ve provided support for a number of
    impactful projects and would love to identify more. Send an email to the authors
    at [*hello@edgeaibook.com*](mailto:hello@edgeaibook.com).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您考虑使用边缘AI来解决您社区的问题，作者们很乐意听取您的想法。我们已经支持了许多有影响力的项目，并希望能够找到更多。请发送电子邮件至[*hello@edgeaibook.com*](mailto:hello@edgeaibook.com)联系作者。
- en: Key Differences Between Edge AI and Regular AI
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Edge AI与普通AI的关键区别
- en: Edge AI is a subset of regular AI, so a lot of the same principles apply. That
    said, there are some special things to consider when thinking about artificial
    intelligence on edge devices. Here are our top points.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI是普通AI的一个子集，因此许多相同的原则也适用。尽管如此，在考虑边缘设备上的人工智能时，有一些特别需要考虑的事情。以下是我们的主要观点。
- en: Training on the edge is rare
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在边缘进行训练是罕见的。
- en: 'A lot of AI applications are powered by machine learning. Most of the time,
    machine learning involves *training* a model to make predictions based on a set
    of labeled data. Once the model has been trained, it can be used for *inference*:
    making new predictions on data it has not seen before.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 许多AI应用程序由机器学习驱动。大多数情况下，机器学习涉及对模型进行*训练*，以基于一组标记数据进行预测。一旦模型被训练好，就可以用于*推理*：对未曾见过的数据进行新的预测。
- en: When we talk about edge AI and machine learning, we are usually talking about
    *inference*. Training models requires a lot more computation and memory than inference
    does, and it often requires a labeled dataset. All of these things are hard to
    come by on the edge, where devices are resource-constrained and data is raw and
    unfiltered.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论边缘AI和机器学习时，通常是在谈论*推理*。训练模型需要比推理更多的计算和内存，通常需要一个带标签的数据集。在边缘设备上这些东西很难获得，因为设备资源有限，数据原始且未经过滤。
- en: For this reason, the models used in edge AI are often trained before they are
    deployed to devices, using relatively powerful compute and datasets that have
    been cleaned and labeled—often by hand. It’s technically possible to train machine
    learning models on the edge devices themselves, but it’s quite rare—mostly due
    to the lack of labeled data, which is required for training and evaluation.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，边缘AI中使用的模型通常在部署到设备之前进行训练，使用相对强大的计算和经过清洗和标记的数据集——通常是手动完成的。技术上训练机器学习模型在边缘设备上是可能的，但很少见——主要是由于缺乏需要用于训练和评估的带标签数据。
- en: There are two subtypes of on-device training that are more widespread. One of
    these is used commonly in tasks such as facial or fingerprint verification on
    mobile phones, to map a set of biometrics to a particular user. The second is
    used in predictive maintenance, where an on-device algorithm learns a machine’s
    “normal” state so that it can act if the state becomes abnormal. There’ll be more
    detail on the topic of on-device learning in [“On-Device Training”](ch04.html#on_device_training).
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在设备上训练的两种常见的子类型用于任务如在移动电话上的面部或指纹验证，将一组生物特征映射到特定用户。第二种用于预测维护，在这种情况下，设备上的算法学习机器的“正常”状态，以便在状态异常时采取行动。在[“设备上训练”](ch04.html#on_device_training)主题中将有更多详细信息。
- en: The focus of edge AI is on sensor data
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 边缘AI的重点在于传感器数据
- en: The exciting thing about edge devices is that they live close to where the data
    is made. Often, edge devices are equipped with sensors that give them an immediate
    connection to their environments. The goal of an edge AI deployment is to make
    sense of this data, identifying patterns and using them to make decisions.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘设备的激动人心之处在于它们靠近数据生成的地方。通常，边缘设备配备有传感器，使它们与环境直接连接。边缘AI部署的目标是理解这些数据，识别模式，并利用它们做出决策。
- en: By its nature, sensor data tends to be big, noisy, and difficult to manage.
    It arrives at a high frequency—potentially many thousands of times per second.
    An embedded device running an edge AI application has a limited time frame in
    which to collect this data, process it, feed it into some kind of AI algorithm,
    and act on the results. This is a major challenge, especially given that most
    embedded devices are resource-constrained and don’t have the RAM to store large
    amounts of data.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其特性，传感器数据往往庞大、嘈杂且难以管理。它以高频率到达——潜在地每秒多次。运行边缘AI应用程序的嵌入式设备在有限的时间内必须收集这些数据、处理它们、将其馈送到某种AI算法中，并根据结果采取行动。这是一个重大挑战，尤其是考虑到大多数嵌入式设备资源有限，无法存储大量数据。
- en: The need to tame raw sensor data makes digital signal processing a critical
    part of most edge AI deployments. In any efficient and effective implementation,
    the signal processing and AI components must be designed together as a single
    system, balancing trade-offs between performance and accuracy.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 需要处理原始传感器数据的需求使得数字信号处理成为大多数边缘AI部署的关键组成部分。在任何有效和高效的实现中，信号处理和AI组件必须作为单一系统设计，平衡性能和准确性之间的权衡。
- en: A lot of traditional machine learning and data science tools are focused on
    tabular data—things like company financials or consumer product reviews. In contrast,
    edge AI tools are built to handle constant streams of sensor data. This means
    that a whole different set of skills and techniques is required for building edge
    AI applications.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 许多传统的机器学习和数据科学工具专注于表格数据，比如公司财务或消费者产品评论。相比之下，边缘AI工具专门设计用于处理传感器数据的连续流。这意味着构建边缘AI应用程序需要一套全新的技能和技术。
- en: ML models can get very small
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ML 模型可以变得非常小
- en: Edge devices are often designed to limit cost and power consumption. This means
    that, generally, they have much slower processors and smaller amounts of memory
    than personal computers or web servers.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘设备通常设计成成本和功耗限制较高。这意味着它们通常具有比个人电脑或网络服务器慢得多的处理器和较少的内存。
- en: The constraints of the target devices mean that, when machine learning is used
    to implement edge AI, the machine learning models must be quite small. On a midrange
    microcontroller, there may only be a hundred kilobytes or so of ROM available
    to store a model, and some devices have far smaller amounts. Since larger models
    take more time to execute, the slow processors of devices can also push developers
    toward deploying smaller models.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 目标设备的约束意味着，在使用机器学习实现边缘 AI 时，机器学习模型必须相当小。在中端微控制器上，可能只有一百千字节左右的 ROM 可用于存储模型，而一些设备则具有更少的内存。由于较大的模型执行时间更长，设备的慢处理器也会推动开发人员部署较小的模型。
- en: Making models smaller involves some trade-offs. To begin with, larger models
    have more capacity to learn. When you make a model smaller, it starts to lose
    some of its ability to represent its training dataset and may not be as accurate.
    Because of this, developers creating embedded machine learning applications have
    to balance the size of their model against the accuracy they require.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 缩小模型涉及一些权衡。首先，较大的模型具有更大的学习能力。当你将模型缩小时，它开始失去一些表示其训练数据集的能力，可能不那么准确。因此，开发嵌入式机器学习应用程序的开发人员必须在模型大小和所需精度之间取得平衡。
- en: Various technologies exist for compressing models, reducing their size so that
    they fit on smaller hardware and take less time to compute. These compression
    technologies can be very useful, but they also impact models’ accuracy—sometimes
    in subtle but risky ways. [“Compression and optimization”](ch04.html#compression_and_optimization)
    will talk about these techniques in detail.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 存在各种技术用于压缩模型，减小其大小以适应更小的硬件，并减少计算时间。这些压缩技术非常有用，但也会影响模型的准确性——有时是以微妙但风险较大的方式。["压缩与优化"](ch04.html#compression_and_optimization)将详细讨论这些技术。
- en: That said, not all applications require big, complex models. The ones that do
    tend to be around things like image processing, since interpreting visual information
    involves a lot of nuance. Often, for simpler data, a few kilobytes (or less) of
    model is all you need.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，并非所有应用程序都需要大而复杂的模型。那些需要的通常是像图像处理这样的内容，因为解释视觉信息涉及很多细微差别。通常，对于简单的数据，几千字节（甚至更少）的模型就足够了。
- en: Learning from feedback is limited
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从反馈中学习是有限的
- en: As we’ll see later, AI applications are built through a series of iterative
    feedback loops. We do some work, measure how it performs, and then figure out
    what’s needed to improve it.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们将在后面看到的那样，AI 应用是通过一系列迭代的反馈循环构建的。我们做一些工作，测量其表现，然后找出需要改进的地方。
- en: For example, imagine we build a fitness monitor that can estimate your 10K running
    time based on data collected from onboard sensors. To test whether it’s working
    well, we can wait until you run an actual 10K and see whether the prediction was
    correct. If it’s not, we can add your data to our training dataset and try to
    train a better model.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，想象一下我们构建了一个健身监控器，可以根据从板载传感器收集的数据估计您的10K跑步时间。为了测试它是否工作良好，我们可以等到您真正跑10K，并查看预测是否正确。如果不正确，我们可以将您的数据添加到我们的训练数据集中，尝试训练一个更好的模型。
- en: If we have a reliable internet connection, this shouldn’t be too hard—we can
    just upload the data to our servers. But part of the magic of edge AI is that
    we can deploy intelligence to devices that have limited connectivity. In this
    case, we might not have the bandwidth to upload new training data. In many cases,
    we might not be able to upload anything at all.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有可靠的互联网连接，这应该不难——我们可以直接将数据上传到我们的服务器上。但边缘 AI 的魔力部分在于我们可以部署智能到连接性有限的设备上。在这种情况下，我们可能没有足够的带宽来上传新的训练数据。在许多情况下，我们甚至可能根本无法上传任何内容。
- en: This presents a big challenge for our application development workflow. How
    do we make sure our system is performing well in the real world when we have limited
    access to it? And how can we improve our system when it’s so difficult to collect
    more data? This is a core topic of edge AI development and something we’ll be
    covering heavily throughout this book.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这对我们的应用程序开发工作流程提出了很大的挑战。当我们在现实世界中的访问有限时，如何确保我们的系统表现良好？当我们几乎无法收集更多数据时，如何改进我们的系统？这是边缘
    AI 开发的核心主题，我们将在本书中广泛探讨。
- en: Compute is diverse and heterogeneous
  id: totrans-185
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 计算是多样化和异构的。
- en: The majority of server-side AI applications run on plain old x86 processors,
    with some graphics processing units (GPUs) thrown in to help with any deep learning
    inference. There’s a small amount of diversity thanks to Arm’s recent server CPUs,
    and exotic deep learning accelerators such as Google’s TPUs (tensor processing
    units), but most workloads run on fairly ordinary hardware.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数服务器端AI应用运行在普通的x86处理器上，有些还加入了图形处理单元（GPU）来帮助进行深度学习推理。由于Arm最近推出了服务器CPU和Google的TPUs（张量处理单元）等异类深度学习加速器的存在，多样性稍有增加，但大部分工作负载仍在相当普通的硬件上运行。
- en: 'In contrast, the embedded world includes a dizzying array of device types:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，嵌入式领域包括令人眼花缭乱的设备类型：
- en: Microcontrollers, including tiny 8-bit chips and fancy 32-bit processors
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括微小的8位芯片和高级的32位处理器在内的微控制器。
- en: System-on-chip (SoC) devices running embedded Linux
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行嵌入式Linux的片上系统（SoC）设备。
- en: General-purpose accelerators based on GPU technology
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于GPU技术的通用加速器。
- en: Field programmable gate arrays (FPGAs)
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现场可编程门阵列（FPGA）。
- en: Fixed architecture accelerators that run a single model architecture blazing
    fast
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 固定架构的加速器，可以高速运行单一模型架构。
- en: Each category includes countless devices from many different manufacturers,
    each with a unique set of build tools, programming environments, and interface
    options. It can be quite overwhelming.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 每个类别都包括来自许多不同制造商的无数设备，每种设备都有独特的构建工具、编程环境和接口选项。这可能会让人感到非常不知所措。
- en: The diversity of hardware means there are likely to be multiple suitable systems
    for any given use case. The hard part is choosing one! We’ll cover this challenge
    over the course of the book.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件的多样性意味着可能有多个适合任何给定用例的系统。难点在于选择一个！我们将在本书的过程中解决这个挑战。
- en: “Good enough” is often the goal
  id: totrans-195
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: “足够好”通常是目标。
- en: With traditional AI, the goal is often to get the best possible performance—no
    matter the cost. Production deep learning models used in server-side applications
    can potentially be *gigabytes* in size, and they lean on powerful GPU compute
    to be able to run in a timely manner. When compute is not an obstacle, the most
    accurate model is often the best choice.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 对于传统AI来说，通常的目标是获取最佳的性能，不管成本如何。在服务器端应用中使用的生产深度学习模型可能达到*几千兆字节*的大小，并依赖强大的GPU计算能力能够及时运行。当计算不是问题时，最准确的模型通常是最佳选择。
- en: The benefits of edge AI come with some serious constraints. Edge devices have
    less capable compute, and there are often tricky choices involved with trading
    off between on-device performance and accuracy.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI的优势伴随着一些严重的限制。边缘设备的计算能力较弱，通常需要在设备性能和准确性之间进行艰难的选择。
- en: This is certainly a challenge—but it’s not a barrier. There are huge benefits
    to running AI at the edge, and for a vast number of use cases they easily outweigh
    the penalty of a little reduced accuracy. Even a small amount of on-device intelligence
    can be infinitely better than none at all.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 这无疑是一个挑战，但并非障碍。在边缘运行AI有着巨大的好处，对于大量使用案例来说，即使牺牲一些准确性，仍然能带来显著优势。甚至一点点设备上的智能也比没有要好得多。
- en: The goal is to build applications that make the most of this “good enough” performance—an
    approach described elegantly by Alasdair Allan as [Capable Computing](https://oreil.ly/W4gDl).
    The key to doing this successfully is using tools that help us understand the
    performance of our applications in the real world, once any performance penalties
    have been factored in. We’ll be covering this topic at length.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是构建能充分利用这种“足够好”性能的应用程序——这是Alasdair Allan优雅描述的[Capable Computing](https://oreil.ly/W4gDl)方法。成功做到这一点的关键是使用工具，帮助我们理解应用程序在现实世界中的性能，考虑到任何性能惩罚后。我们将会详细讨论这个主题。
- en: Tools and best practices are still evolving
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 工具和最佳实践仍在不断发展。
- en: As a brand-new technology that has only begun to reach mass adoption, edge AI
    still depends on tools and approaches that were developed for large-scale, server-side
    AI. In fact, the majority of AI research is still focused on building large models
    on giant datasets. This has a couple of implications.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一种刚刚开始大规模采用的全新技术，边缘AI仍依赖于为大规模服务器端AI开发的工具和方法。事实上，大多数AI研究仍集中在构建大模型和巨大数据集上。这有几个影响。
- en: First, as we’ll see in [Chapter 5](ch05.html#tools_and_expertise), we’ll often
    find ourselves using existing development tools from the fields of data science
    and machine learning. On the positive side, this means we can draw from a rich
    ecosystem of libraries and frameworks that is proven to work well. However, few
    of the existing tools prioritize things that are important on the edge—like small
    model sizes, computational efficiency, and the ability to train on small amounts
    of data. We often have to do some extra work to make these the focus.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，正如我们将在[第5章](ch05.html#tools_and_expertise)中看到的那样，我们经常会使用来自数据科学和机器学习领域的现有开发工具。积极的一面是，这意味着我们可以借鉴一个丰富的已被证明有效的库和框架生态系统。然而，少数现有工具并未优先考虑边缘上重要的事项——如小型模型尺寸、计算效率以及在少量数据上进行训练的能力。我们通常需要额外的工作来实现这些重点。
- en: Second, since edge AI research is fairly new we’re likely to see extremely rapid
    evolution. As the field grows, and more researchers and engineers turn to focus
    on it, new approaches for improving efficiency are emerging—along with best practices
    and techniques for building effective applications. This promise of rapid change
    makes edge AI a very exciting field to work in.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，由于边缘人工智能（edge AI）研究相对较新，我们可能会看到其非常快速的发展。随着这一领域的扩展，越来越多的研究人员和工程师开始关注它，新的提高效率的方法也随之出现——还有构建有效应用程序的最佳实践和技术。这种快速变化的前景使得边缘人工智能成为一个非常令人兴奋的领域。
- en: Summary
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we’ve explored the terminology that defines edge AI, learned
    a handy tool for reasoning about its benefits, explored how moving compute to
    the edge can increase access to technology, and outlined the factors that make
    edge AI different from traditional AI.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了定义边缘人工智能的术语，学习了一种用于推理其好处的便捷工具，探讨了将计算移动到边缘如何增加对技术的访问，并概述了使边缘人工智能不同于传统人工智能的因素。
- en: From the next chapter onward, we’ll be dealing with specifics. Get ready to
    learn about the use cases, devices, and algorithms that power edge AI today.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 从下一章开始，我们将处理具体内容。准备好学习今天支持边缘人工智能的用例、设备和算法。
- en: ^([1](ch01.html#idm45988806857632-marker)) As reported by [Business Wire](https://oreil.ly/xa0o-).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch01.html#idm45988806857632-marker)) 据[Business Wire](https://oreil.ly/xa0o-)报道。
- en: ^([2](ch01.html#idm45988807774752-marker)) Expected to grow to 27 billion by
    2025, according to [IoT Analytics](https://oreil.ly/yMRAF).
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch01.html#idm45988807774752-marker)) 预计到2025年将增长到270亿，根据[IoT Analytics](https://oreil.ly/yMRAF)的数据。
- en: ^([3](ch01.html#idm45988807355312-marker)) Embedded engineering and mobile development
    are typically separate disciplines. Even within a mobile device, the embedded
    firmware and operating system are distinct from mobile applications. This book
    focuses on embedded engineering, so we won’t talk much about building mobile apps—but
    we will cover techniques that are relevant in both cases.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch01.html#idm45988807355312-marker)) 嵌入式工程和移动开发通常是独立的学科。即使在移动设备内部，嵌入式固件和操作系统也与移动应用程序不同。本书侧重于嵌入式工程，因此我们不会过多讨论构建移动应用程序，但我们将涵盖在两种情况下都相关的技术。
- en: ^([4](ch01.html#idm45988807647248-marker)) For many years it was hoped that
    artificial general intelligence could be achieved by complex conditional logic,
    hand-tuned by engineers. It has turned out to be a lot more complicated than that!
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch01.html#idm45988807647248-marker)) 多年来，人们希望通过工程师手工调整的复杂条件逻辑来实现人工通用智能。结果证明，这比预期的要复杂得多！
- en: ^([5](ch01.html#idm45988807272448-marker)) The term *TinyML* is a registered
    trademark of the TinyML Foundation.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: ^([5](ch01.html#idm45988807272448-marker)) “TinyML”这个术语是TinyML基金会的注册商标。
- en: ^([6](ch01.html#idm45988814923552-marker)) This will be explained in [“Spectral
    analysis”](ch04.html#spectral_analysis).
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: ^([6](ch01.html#idm45988814923552-marker)) 这将在[“频谱分析”](ch04.html#spectral_analysis)中解释。
- en: ^([7](ch01.html#idm45988807612560-marker)) Not all edge AI applications are
    immune to this since it’s often necessary to monitor devices and push updates
    to algorithms. That said, there are certainly many cases where edge AI can reduce
    the burden of maintenance.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: ^([7](ch01.html#idm45988807612560-marker)) 并非所有的边缘人工智能应用都能免受影响，因为通常需要监控设备并对算法进行更新。尽管如此，在许多情况下，边缘人工智能确实可以减轻维护的负担。
- en: ^([8](ch01.html#idm45988806639536-marker)) Even in this innocuous example, a
    malicious person accessing your thermostat data could use it to recognize when
    you’re on vacation so they can break into your house.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: ^([8](ch01.html#idm45988806639536-marker)) 即使在这个无伤大雅的例子中，恶意访问你的恒温器数据的人也可以利用它来识别你何时度假，以便闯入你的房子。
- en: ^([9](ch01.html#idm45988806638848-marker)) This exact scenario unfolded in 2022
    with the Ring home security system, which was found to be vulnerable to an attack
    ([“Amazon’s Ring Quietly Fixed Security Flaw That Put Users’ Camera Recordings
    at Risk of Exposure”](https://oreil.ly/Mf2LH), TechCrunch, 2022).
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: ^([9](ch01.html#idm45988806638848-marker)) 这种确切的情况在2022年曾发生在Ring家庭安全系统身上，该系统被发现容易受到攻击（来源于《TechCrunch》，2022年，《亚马逊的Ring悄悄修复了一个使用户摄像头录像面临曝露风险的安全漏洞》）。

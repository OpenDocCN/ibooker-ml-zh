- en: Chapter 9\. Developing Edge AI Applications
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 9 章 开发边缘 AI 应用
- en: Developing an edge AI application is a big task. In this chapter, we’ll get
    familiar with the iterative development model that helps deliver successful edge
    AI deployments in real-world projects.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 开发边缘 AI 应用是一项重大任务。在本章中，我们将熟悉这个迭代开发模型，该模型有助于在真实项目中成功部署边缘 AI。
- en: An Iterative Workflow for Edge AI Development
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 边缘 AI 开发的迭代工作流程
- en: 'The process of developing a successful application is fundamentally simple:
    start small, make incremental changes, measure your progress, and quit when you
    meet your goals. The complexity comes when you introduce the vast number of moving
    parts that make up the technology of edge AI. This section of the book aims to
    provide a concrete process you can walk through to maximize your chances of success.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 开发成功应用的过程基本上是简单的：从小处开始，进行增量变更，测量您的进展，并在达到目标时停止。当您引入组成边缘 AI 技术的大量移动部件时，复杂性就会出现。本书的本节旨在提供一个具体的过程，您可以通过该过程最大化成功的机会。
- en: As we heard back in [“The Edge AI Workflow”](ch06.html#edge_ai_workflow), the
    core idea behind this workflow is the power of feedback loops. Our goal is to
    create feedback loops between the various stages of the process, leading to an
    ever-improving understanding of the problem, our solution, and the best ways to
    fit them together (as shown in [Figure 9-1](#edge_ai_figure)).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[“边缘 AI 工作流”](ch06.html#edge_ai_workflow)中听到的，该工作流背后的核心理念是反馈环的力量。我们的目标是在过程的各个阶段之间创建反馈循环，从而不断改进对问题、解决方案以及最佳匹配方法的理解（如图[9-1](#edge_ai_figure)所示）。
- en: 'While it’s an iterative process, some parts are more iterative than others.
    The steps we tackle earliest—exploration, goal setting, and bootstrapping—are
    the parts where we’re figuring what we want to do and how we may be able to go
    about doing it. They feature first in up-front planning and then during periodic
    reappraisal, as new information comes in: perhaps after an initial deployment,
    or when a significant amount of new data has come to light.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这是一个迭代过程，但其中某些部分比其他部分更具迭代性。我们最早处理的步骤——探索、目标设定和引导启动——是我们在进行前期规划时要弄清楚我们想要做什么以及如何可能去做的部分。它们首先在前期规划中出现，然后在定期重新评估中出现，随着新信息的到来：也许是在初始部署之后，或者是当大量新数据显现出来时。
- en: '![A diagram showing the stages of the edge AI workflow.](assets/aiae_0901.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![展示边缘 AI 工作流各阶段的图表。](assets/aiae_0901.png)'
- en: Figure 9-1\. Feedback loops are central to the edge AI workflow, first introduced
    in [“The Edge AI Workflow”](ch06.html#edge_ai_workflow)
  id: totrans-7
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-1\. 反馈环是边缘 AI 工作流的核心，最初在[“边缘 AI 工作流”](ch06.html#edge_ai_workflow)中介绍。
- en: The middle parts of the workflow, in the *test and iterate* section, are more
    radically iterative. They’re part of a tight spiral of development, testing, and
    improvement that is intended to home in toward whatever goals you have set. You
    can think of them more as four parallel tracks of development that inform one
    another as they evolve toward satisfying your requirements.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 工作流程的中间部分，在*测试和迭代*部分，更加彻底地进行迭代。它们是开发、测试和改进的紧密螺旋的一部分，旨在朝着您设定的任何目标逐步靠近。您可以将它们看作是四个相互影响、朝向满足您需求的并行开发轨道。
- en: 'The deploy and support sections are also iterative, but again at a slower pace
    than the core section. This is part of their nature: once deployed and in the
    hands of users, the development of a system is destined to slow down. However,
    this is the stage at which the most vital feedback will start to arrive, and where
    your system will have to begin adapting to the evolving environment of the real
    world. The earlier you can deploy and tap into this vein of insight, the better.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 部署和支持部分也是迭代的，但与核心部分相比速度较慢。这是它们自身的特性：一旦部署并交付给用户使用，系统的开发注定会放缓。然而，这是最关键的反馈开始到来的阶段，也是你的系统必须开始适应不断变化的现实世界环境的阶段。你越早部署并获取到这些洞察力，效果就会越好。
- en: The next section of the chapter will walk through each topic in the workflow
    and lay out some of the key activities and concepts.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的下一节将详细讲解工作流中的每个主题，并概述一些关键活动和概念。
- en: Exploration
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索
- en: 'Exploration is the way we begin to understand what we are trying to do. It
    includes much of the type of work we learned about in [Chapter 6](ch06.html#understanding_and_framing_problems)
    and consists of the following major tasks:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 探索是我们开始理解我们试图做什么的方式。它包括我们在[第 6 章](ch06.html#understanding_and_framing_problems)中学到的许多工作类型，并包括以下主要任务：
- en: Describing the problem you are trying to solve (see [“Describing a Problem”](ch06.html#describing_a_problem))
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述你试图解决的问题（参见[“描述问题”](ch06.html#describing_a_problem)）
- en: Determining whether you need edge AI (see [“Do I Need to Deploy to the Edge?”](ch06.html#do_i_need_to_deploy_to_the_edge)
    and [“Do I Need Machine Learning?”](ch06.html#do_i_need_machine_learning))
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定是否需要边缘AI（参见[“我需要部署到边缘吗？”](ch06.html#do_i_need_to_deploy_to_the_edge)和[“我需要机器学习吗？”](ch06.html#do_i_need_machine_learning)）
- en: Figuring out whether the project is feasible (see [“Determining Feasibility”](ch06.html#determining_feasibility))
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 弄清项目是否可行（参见[“确定可行性”](ch06.html#determining_feasibility)）
- en: Framing a problem, by mapping it onto known methodologies (see [“Framing problems”](ch06.html#framing_problems))
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将问题映射到已知方法来定义问题（参见[“定义问题”](ch06.html#framing_problems)）
- en: Analyzing your proposed solution for potential risks, harms, and unintended
    consequences (see [“Moral Feasibility”](ch06.html#ethical_feasibility))
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析你提出的解决方案可能存在的风险、危害和意外后果（参见[“道德可行性”](ch06.html#ethical_feasibility)）
- en: Mapping out stakeholders and understanding what they want and need (see [“Stakeholders”](ch05.html#stakeholders))
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绘制利益相关者并了解他们的需求和期望（参见[“利益相关者”](ch05.html#stakeholders)）
- en: Performing some initial data exploration
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行初步数据探索
- en: 'The final step depends a lot on whether you have the means to collect a dataset
    at this point, even if it’s a small and limited one. It’s strongly recommended
    that you have some data on hand while attempting to determine feasibility: data
    represents so much of the risk of an AI project that it’s critical to start understanding
    it as soon as possible.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步在很大程度上取决于你是否有能力此时收集数据集，即使是一个小型和有限的数据集。强烈建议在尝试确定可行性时手头有一些数据：数据在AI项目中代表了很大的风险，尽早开始理解它非常关键。
- en: You should at the very least get a sense for how difficult it will be to collect
    an adequate dataset. It’s likely to be one of your major challenges, and it’s
    disastrous to invest a lot of work before discovering that data is impossible
    to obtain.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 至少应该了解到收集足够数据的难度有多大。这可能是你面临的主要挑战之一，在发现无法获取数据之前进行大量工作是灾难性的。
- en: If you can’t begin to conduct data exploration at this stage, you should do
    so at the earliest available opportunity.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果目前无法开始数据探索，应尽早进行。
- en: Goal Setting
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 目标设定
- en: Goal setting is where we attempt to describe what we’re aiming for. We’ve seen
    various goal-setting activities throughout Chapters [6](ch06.html#understanding_and_framing_problems)
    and [8](ch08.html#designing_edge_ai_applications).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 目标设定是我们试图描述我们的目标所在的地方。在第[6](ch06.html#understanding_and_framing_problems)和第[8](ch08.html#designing_edge_ai_applications)章中我们看到了各种目标设定活动。
- en: 'The process includes these key components:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这一过程包括以下关键组成部分：
- en: Determining the evaluation metrics you will use, before and after deployment
    (see [“Setting Design Goals”](ch08.html#setting_design_goals))
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定在部署前后将使用的评估指标（参见[“设定设计目标”](ch08.html#setting_design_goals)）
- en: Setting the systemic goals for your design (see [“Systemic goals”](ch08.html#setting_systemic_goals))
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为你的设计设定系统性目标（参见[“系统性目标”](ch08.html#setting_systemic_goals)）
- en: Setting the technical goals for your implementation (see [“Technical goals”](ch08.html#setting_technical_goals))
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为你的实施设定技术目标（参见[“技术目标”](ch08.html#setting_technical_goals)）
- en: Agreeing on values with stakeholders (see [“Stakeholders”](ch05.html#stakeholders))
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与利益相关者达成价值共识（参见[“利益相关者”](ch05.html#stakeholders)）
- en: Creating a values-based framework for interpreting progress (see [“Values-based
    design goals”](ch08.html#values_design_goals))
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建基于价值观的框架来解释进展（参见[“基于价值观的设计目标”](ch08.html#values_design_goals)）
- en: Setting up a review board to evaluate the ongoing project (see [“Diversity”](ch05.html#diversity_in_teams))
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置评估项目的审查委员会（参见[“多样性”](ch05.html#diversity_in_teams)）
- en: Designing a scheme for testing your algorithms and your application
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计测试算法和应用程序的方案
- en: Scoping out your long-term support goals
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规划长期支持目标
- en: Deciding how you will make the decision to abort a project
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 决定如何决定是否中止项目
- en: Goals must be measurable to be meaningful, so many of these items depend on
    having an effective process for testing and evaluating your system. This will
    be covered in depth in [Chapter 10](ch10.html#deploying_evaluating_and_supporting_edge_ai_applications).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 目标必须是可衡量的才有意义，因此其中许多项目依赖于具有有效测试和评估系统的过程。这将在[第10章](ch10.html#deploying_evaluating_and_supporting_edge_ai_applications)中深入讨论。
- en: Calling it quits
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 停止项目
- en: Edge AI is a risky business, and a large proportion of projects do not make
    it into production. This is only natural, since a big part of the development
    process is devoted to understanding whether it’s actually possible to solve the
    problem using the resources that are available.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘人工智能（Edge AI）是一项风险较高的业务，很大一部分项目无法投入生产。这是很自然的，因为开发过程的重要部分是要了解是否真的可以利用现有资源来解决问题。
- en: 'However, when we’re invested in a project—personally, financially, and organizationally—it
    can be difficult to know when to quit. That’s why it’s so important to have a
    solid idea of your minimum viable performance characteristics right at the start
    of a project. You’ll need to decide these minimum standards for every type of
    goal: systemic, technical, and ethical. For example, it’s no good if you have
    a high-performing algorithm (according to your technical metrics) if your system,
    once deployed, does not have the business impact you were looking for.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当我们对一个项目投入了个人、财务和组织资源时，很难判断何时退出。这就是为什么在项目开始时就确立您的最低可行性能特征至关重要的原因。您需要为每种类型的目标（系统性的、技术性的和伦理性的）确定这些最低标准。例如，如果您的系统一旦部署就没有您期望的业务影响，那么拥有高性能算法（按照技术指标）也是无济于事的。
- en: 'Failure is a key part of the iterative process of discovery and innovation,
    especially where artificial intelligence is concerned. The important thing is
    to identify when a direction of development is not working out before too many
    resources have been burned in its pursuit: fail early, fail fast. If you can identify
    an unproductive effort early on, you can quickly change targets and avoid spending
    too much time.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 失败是发现和创新迭代过程中的关键部分，特别是涉及人工智能时。重要的是，在投入过多资源之前，识别出开发方向不起作用的时机：尽早失败，快速失败。如果您能早期识别出一个无效的努力，您可以迅速改变目标，避免花费过多时间。
- en: For this reason, it’s crucial to set milestones and go/no-go criteria for your
    project. At each stage during design and development, you should be prepared to
    measure your current status and make a call as to whether the current approach
    is working or whether it’s time to try something else. Writing these milestones
    down during the early goal-setting phase is a good idea because it will force
    you to think critically about the project early on. You can always reappraise
    your goals as you make progress.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，为您的项目设定里程碑和“继续/中止”标准至关重要。在设计和开发的每个阶段，您都应该准备好衡量当前状态，并决定当前方法是否有效，或者是时候尝试其他方法。在早期设定目标阶段写下这些里程碑是个好主意，因为这将迫使您从早期就对项目进行批判性思考。随着进展，您可以随时重新评估您的目标。
- en: Some problems are simply intractable, especially when adequate data is hard
    to come by. In these cases, you may have to make the difficult call to abort a
    project entirely. To avoid being surprised by this, you should understand your
    budget in time and money before you begin and come up with limits in terms of
    what you are willing to spend to attain a certain amount of progress. If you don’t
    seem to be close enough, you can make the decision to stop. It may be better to
    stop an unfruitful project midway and go back to the drawing board rather than
    spend your entire budget and end up with nothing.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 有些问题是棘手的，特别是在数据不足时。在这些情况下，您可能不得不做出终止项目的艰难决定。为了避免被这种情况出其不意地打击，您应该在开始之前就了解时间和金钱预算，并制定达到一定进展所愿意投入的限制。如果您看起来还不够接近，您可以做出停止的决定。与其花费整个预算最后一无所获，还不如在半途中停止一个无果的项目并重新规划。
- en: Bootstrapping
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动引导
- en: 'Bootstrapping is how we get from an understanding of our problem to our first
    iteration of a solution. It involves getting our hands dirty with data and starting
    the process of building—topics we cover in [Chapter 7](ch07.html#how_to_build_a_dataset)
    and in the chapter you are reading now. The key tasks are:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 启动引导（Bootstrapping）是我们从理解问题到第一次迭代解决方案的过程。它涉及到与数据亲密接触并开始构建的过程，这些主题我们在[第7章](ch07.html#how_to_build_a_dataset)和您正在阅读的本章中都有涉及。关键任务包括：
- en: Collecting a minimal dataset (see [“Estimating Data Requirements”](ch07.html#estimating_data_requirements))
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集最小数据集（见[“估计数据需求”](ch07.html#estimating_data_requirements)）
- en: Making an initial attempt at determining hardware requirements (see [“Device
    capabilities and solution choice”](ch06.html#device_capabilities_and_solution_choice))
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初步尝试确定硬件要求（见[“设备能力与解决方案选择”](ch06.html#device_capabilities_and_solution_choice)）
- en: Developing the simplest possible initial algorithm
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发最简单可能的初始算法
- en: Building the simplest possible end-to-end application (see [Figure 8-1](ch08.html#basic_application_architecture))
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建最简单可能的端到端应用程序（见[图8-1](ch08.html#basic_application_architecture)）
- en: Doing some initial real-world testing and evaluation (see [Chapter 10](ch10.html#deploying_evaluating_and_supporting_edge_ai_applications))
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进行一些初步的实地测试和评估（见[第10章](ch10.html#deploying_evaluating_and_supporting_edge_ai_applications)）
- en: Performing a responsible AI review of your early prototype
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对早期原型进行负责任的人工智能审查
- en: We’ve encountered a couple of these concepts before, but this is the first time
    we’re bringing together all of the components of an entire working application.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前遇到过一些这些概念，但这是我们第一次将整个工作应用程序的所有组件集成在一起。
- en: Why bootstrapping is helpful
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为何引导启动有益
- en: The goal of bootstrapping is to quickly arrive at something that at least somewhat
    resembles a prototype—even if it’s extremely limited, incomplete, and makes some
    faulty assumptions. But why waste time on a low-quality prototype if you can just
    develop the components separately and bring them together at the end?
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 引导启动的目标是快速获得至少有些类似原型的东西，即使它非常有限、不完整并且做出了一些错误的假设。但是，如果可以单独开发组件并在最后将它们集成在一起，为什么要浪费时间在低质量的原型上呢？
- en: There’s a huge difference between reasoning about something on paper and experiencing
    a tangible piece of technology, especially when the technology is designed to
    interact with the physical world. By rapidly getting to an end-to-end prototype,
    you’ll give yourself, your team, and your stakeholders the opportunity to try
    it out, understand the way it fits the problem you are trying to solve, and identify
    many potential issues far ahead of time.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 纸上谈兵和体验一个实际的技术产品之间存在巨大差异，尤其是当技术设计用于与物理世界互动时。通过迅速实现一个端到端的原型，你将为自己、团队和利益相关者提供机会，让他们尝试并理解它如何解决你试图解决的问题，并在很早之前识别出许多潜在问题。
- en: 'Iterative development is all about testing your assumptions: trying to quickly
    determine whether a given decision is the right one so that you have time to course-correct
    if it is not. You can (and must) do this with the individual components of a system,
    but for something as complex as an edge AI product you really need to see it all
    working together. There are emergent phenomena and feedback loops within any complex
    system, and you can’t truly understand how something works until you have seen
    it interact with the real world.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代开发的核心是测试你的假设：迅速确定某个决策是否正确，以便有时间进行调整。你可以（并且必须）在系统的各个组件上进行这样的操作，但对于像边缘人工智能产品这样复杂的东西，你确实需要看到所有部分一起运作。在任何复杂系统中都存在新兴现象和反馈循环，只有在看到它与现实世界互动之后，你才能真正理解它的工作方式。
- en: In addition to the massive benefits of early testing, there’s a huge amount
    of power in being able to demo your product early on. Even before it’s ready,
    an end-to-end demo can be highly convincing to stakeholders, potential customers,
    and to your own team. This might be essential to unlocking the support and resourcing
    that you need to complete the project. On the flip side, if you find that your
    early demos *aren’t* convincing anybody, it’s a good signal that you might need
    to revisit your design.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 早期测试的巨大好处不言而喻，能够在产品尚未完全准备好之前进行全面演示也具有巨大的说服力，无论是对利益相关者、潜在客户还是你自己的团队。这可能是解锁完成项目所需的支持和资源的关键。另一方面，如果你发现早期演示并没有说服任何人，这是一个很好的信号，表明你可能需要重新审视设计。
- en: 'You can’t always create an entire end-to-end flow at an early stage. That’s
    OK: you can still benefit from integrating whichever components of the system
    that you can. That said, if a project is by nature difficult to integrate until
    the very end, it carries a much higher degree of risk.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你并不总能在早期阶段创建完整的端到端流程。没关系：你仍然可以从集成系统的任何组件中获益。不过，如果一个项目本质上在最后阶段才能整合，那么它带来的风险程度就要高得多。
- en: Developing a baseline algorithm
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开发基准算法
- en: In [“Systemic goals”](ch08.html#setting_systemic_goals) we learned about the
    need to take an evaluation-first approach, where the performance of our system
    is continually measured and compared to a baseline. In many cases, there’s an
    existing non-AI system whose performance we can measure and compare to. Either
    way, once we start developing our algorithm we should aim to immediately establish
    a baseline for algorithmic performance that we can try to beat.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在[“系统目标”](ch08.html#setting_systemic_goals)中，我们了解到需要采用评估为先的方法，不断测量我们系统的性能，并与基线进行比较。在许多情况下，有一个现有的非人工智能系统，我们可以测量和比较其性能。无论哪种方式，一旦我们开始开发我们的算法，我们应该立即建立算法性能的基线，以便努力超越它。
- en: To help illustrate this concept, let’s imagine we are building a system to help
    reduce the time taken for quality inspections of chocolates being made on a production
    line. Our grand idea is that we could train a deep learning vision model to identify
    specific flaws in individual chocolates and provide real-time feedback to workers
    on the production line.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要帮助说明这一概念，让我们想象我们正在建立一个系统，以减少生产线上巧克力质量检查所需的时间。我们的宏伟想法是，我们可以训练一个深度学习视觉模型，识别个别巧克力中的特定缺陷，并实时向生产线上的工人提供反馈。
- en: The first thing to do is establish our current baseline for performance. It
    may be that quality control is currently done manually by employees, and it takes
    30 seconds per box of chocolates. With our stakeholders, we may decide that our
    goal is to reduce the time taken to at most 10 seconds.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 首先要做的是建立我们当前的性能基线。也许质量控制目前是由员工手动完成的，每盒巧克力需要30秒。与相关利益相关者一起，我们可能决定我们的目标是将时间缩短到最多10秒。
- en: Our first algorithm—and the hardware and software supporting it—should attempt
    to make progress toward this goal in the simplest manner possible. For example,
    rather than training a sophisticated deep learning model (which would require
    a large dataset, costing time and money to collect) to identify many different
    types of faults, perhaps we can use some simpler computer vision techniques (as
    in [“Image feature detection”](ch04.html#image_feature_detection)) to spot the
    characteristics of a single type of fault.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一个算法——以及支持它的硬件和软件——应该尽可能简单地朝着这个目标前进。例如，与其训练一个复杂的深度学习模型（这将需要收集大量数据集，耗费时间和金钱）来识别许多不同类型的故障，也许我们可以使用一些更简单的计算机视觉技术（如在[“图像特征检测”](ch04.html#image_feature_detection)中）来识别单一类型的故障的特征。
- en: This simpler algorithm will be much easier to implement as a basic prototype.
    We can then try it out on the production line. For example, we might set up the
    system to alert the employee working on quality control when a box of chocolates
    has a very specific flaw. Although limited, this extra information might still
    make the employee’s life easier and save a few seconds of time.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这种更简单的算法将更容易作为基本原型实现。然后，我们可以在生产线上尝试它。例如，我们可以设置系统，在质量控制工作的员工发现一个巧克力盒有非常具体的缺陷时发出警报。虽然信息有限，但这些额外的信息可能仍然会让员工的生活更轻松，并节省几秒钟的时间。
- en: 'Now that we have an algorithmic baseline using a simple implementation, we
    know what we have to beat. In some cases, the simple baseline may prove effective
    enough that it changes our view on what is necessary. For example, if sufficient
    time is saved, it may make sense to forgo the expense of collecting the large
    dataset necessary to train a deep learning model: our stakeholders may be perfectly
    happy with the performance of the simple baseline, or at least a more polished
    version of it.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经使用简单实现的算法基线，我们知道我们必须超越它。在某些情况下，简单的基线可能证明足够有效，这可能会改变我们对必要性的看法。例如，如果节省了足够的时间，放弃收集训练深度学习模型所需的大数据集的开支可能是合理的：我们的利益相关者可能对简单基线的性能非常满意，或者至少是其更精细化的版本。
- en: The approach of establishing a simple baseline algorithm helps protect us from
    overengineering, where we invest a lot of resources in developing a complex solution
    to a problem that is not proven to be necessary. It also provides a solid start
    to our evaluation-based approach, forcing us to set up the processes required
    to conduct realistic evaluation and allowing us to measure the rate of improvement
    over the existing system.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 建立一个简单基线算法的方法有助于防止我们过度设计，即投入大量资源开发复杂解决方案来解决尚未被证明为必要的问题。它还为我们的基于评估的方法提供了坚实的起点，迫使我们建立进行现实评估所需的流程，并允许我们测量相对于现有系统的改进速度。
- en: A baseline can also help inform the required architecture. For example, if the
    baseline can handle a large percentage of inputs, the best overall solution may
    be a simple algorithm that covers most inputs, combined with a cascade to a sophisticated
    ML model that can handle more challenging inputs.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 一个基线还可以帮助确定所需的架构。例如，如果基线能处理大部分输入，最佳整体解决方案可能是一个简单的算法来覆盖大多数输入，再结合一个能够处理更具挑战性输入的复杂ML模型级联。
- en: Our first hardware
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我们的第一台硬件
- en: Being able to evaluate our baseline algorithm often implies that we have also
    arrived at an initial iteration of our hardware design. It should be the goal
    at this point to create something deployable so that we can test it in the field.
    However, this doesn’t mean it has to meet the same requirements as our finished
    product.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 能够评估我们基线算法通常意味着我们已经得到了硬件设计的初始迭代。此时的目标应该是创建一个可部署的东西，这样我们就可以在实地测试它。然而，这并不意味着它必须满足与我们最终产品相同的要求。
- en: Computer hardware runs the spectrum from general purpose to application specific.
    At one extreme, a modern personal computer is designed to be capable of running
    nearly any software and integrating with any hardware you can imagine. At the
    other end, a custom microcontroller-based board may be designed for a single function
    inside a specific product.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机硬件的种类可以从通用型到特定应用型。在一个极端，现代个人电脑设计成能够运行几乎任何软件，并且可以与你能想象到的任何硬件集成。在另一个极端，一个基于定制微控制器的板子可能被设计成用于特定产品内的单一功能。
- en: The more general purpose and capable a piece of hardware, the easier it is to
    develop for. This principle means that it’s often much quicker to prototype something
    on a more powerful system, such as an SoC-based development board (see [“System-on-Chip”](ch03.html#system_on_chip))
    running Linux, than on a tiny, low-power, application-specific device that your
    team has designed in-house.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 越是通用和功能强大的硬件，开发起来就越容易。这个原则意味着在更强大的系统上（如运行Linux的SoC开发板（见[“片上系统”](ch03.html#system_on_chip)））原型化通常比在你的团队自行设计的小型、低功耗、特定应用的设备上要快得多。
- en: With this in mind, it’s often a good idea to implement the first iteration of
    your product on a more general, capable piece of hardware—even if this compromises
    some of your design goals. For example, it could be quite easy to implement the
    first iteration of our chocolate quality control system on a Linux SoC board using
    some quick and dirty Python scripts.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个想法，通常最好在更通用、功能更强大的硬件上实现产品的第一次迭代，即使这可能会牺牲一些设计目标。例如，可以很容易地在一个Linux SoC板上使用一些快速而简陋的Python脚本实现我们的巧克力质量控制系统的第一次迭代。
- en: The board may be far more expensive and power hungry than we can afford in our
    long-term solution, but for an initial prototype it still gets the job done—with
    a fraction of the development time. Once the concept is proven out on more general
    hardware, you’ll have enough confidence to invest in the lengthy and expensive
    process of designing a smaller, more efficient device, and adapting your algorithms
    to fit.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 该板子可能比我们长期解决方案中负担得起的要昂贵和耗电，但对于初始原型来说，仍能完成任务——并且开发时间只需一小部分。一旦在更通用的硬件上验证了概念，你将有足够的信心投资于设计一个更小、更高效设备以及调整算法以适应。
- en: Responsible AI review
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 负责任的AI审查
- en: Deploying and testing the first end-to-end prototype of our application allows
    us to begin measuring performance, and also to better imagine how the finished
    version might work in the field. It also requires us to do some initial algorithm
    development, which often involves further understanding of our dataset and its
    limitations.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 部署和测试我们应用程序的第一个端到端原型，使我们能够开始衡量性能，并更好地想象最终版本在实地的工作方式。这还需要我们进行一些初步的算法开发，通常涉及进一步理解我们的数据集及其限制。
- en: All this additional information that has come to light can help us test some
    of the assumptions we made while determining moral feasibility (as in [“Moral
    Feasibility”](ch06.html#ethical_feasibility)) and stating our values-based design
    goals (see [“Values-based design goals”](ch08.html#values_design_goals)). You
    should take a systematic approach to probing all of these assumptions using the
    results of your initial testing.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些新发现的额外信息可以帮助我们测试我们在确定道德可行性（如在[“道德可行性”](ch06.html#ethical_feasibility)中）和陈述基于价值的设计目标（见[“基于价值的设计目标”](ch08.html#values_design_goals)）时所做的一些假设。你应该采取系统化的方法来利用初步测试结果来探索所有这些假设。
- en: 'For example, in the case of our quality-control system for a chocolate factory,
    we may have assumed that our system would reduce the burden on employees by allowing
    them to get more done in the same amount of time. However, on exploring feedback
    on our prototype system we may discover that the system increases employees’ stress
    by overloading them with information, leading to burnout. This discovery may inform
    the design of our product: we might decide to explore ways we can inform workers
    without creating an overwhelming experience.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在我们为巧克力工厂的质量控制系统设计的情况下，我们可能假设我们的系统能够通过允许员工在相同的时间内完成更多工作来减轻员工的负担。然而，通过探索原型系统的反馈，我们可能会发现系统通过提供信息而不是创建压倒性体验增加了员工的压力，导致了疲劳。这一发现可能会影响我们产品的设计：我们可能决定探索在不造成员工过度负担的情况下如何为他们提供信息的方法。
- en: With an evaluation-first approach, we’re able to gather key metrics about the
    performance of the system and analyze them in terms of our goals and values. For
    instance, it’s very important from a fairness perspective that our system works
    well for all employees. By evaluating metrics, we may find that the system performs
    better for some employees than others (for example, perhaps it provides visual
    feedback that is difficult for some people to see). In order to capture this type
    of insight, it’s important to measure and collect relevant data from the beginning.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 采用评估优先方法，我们能够收集关于系统性能的关键指标，并根据我们的目标和价值观进行分析。例如，从公平性的角度来看，我们的系统能够对所有员工都运行良好非常重要。通过评估指标，我们可能会发现系统对某些员工的表现优于其他员工（例如，可能提供对某些人难以看清的视觉反馈）。为了捕捉这种洞察力，从一开始就测量和收集相关数据非常重要。
- en: Test and Iterate
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试与迭代
- en: 'We’re now in the core part of the workflow, where our initial implementation
    is incrementally improved over numerous iterations. There are four main areas
    of focus: application, dataset, algorithms, and hardware. These are shown in [Figure 9-2](#test_and_iterate_figure).'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们处于工作流程的核心部分，我们的初步实施通过多次迭代逐步改进。有四个主要的关注领域：应用程序、数据集、算法和硬件。这些在 [图 9-2](#test_and_iterate_figure)
    中显示。
- en: '![Diagram showing the test and iterate portions of the workflow.](assets/aiae_0902.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![显示工作流程中测试与迭代部分的图表。](assets/aiae_0902.png)'
- en: 'Figure 9-2\. The test and iterate portion of the workflow consists of four
    focus areas: application, dataset, algorithms, and hardware'
  id: totrans-80
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-2\. 工作流程中测试与迭代部分包括四个关注领域：应用程序、数据集、算法和硬件
- en: Each of these things is an essential component of the project. You can think
    of them as four siblings, growing up side by side, informing one another’s development
    as they change in response to their environment. That environment is the evaluation-driven
    feedback loop that it’s our job to deliberately create.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这些事物各自都是项目的重要组成部分。你可以把它们想象成四个并行发展的兄弟姐妹，相互影响，在环境的反馈中不断地变化。这个环境就是我们工作中有意创建的评估驱动反馈循环。
- en: These four components advance together, each at their own pace, sometimes constrained
    by the practicalities of the situation—and sometimes by each other. For example,
    dataset collection can be a painstaking process and it might take a while before
    the dataset is big enough to train a machine learning model to an acceptable level
    of performance. During the waiting period, work on the physical hardware and the
    application code may continue unabated.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这四个组成部分共同推进，各自以自己的速度前进，有时受到实际情况的限制，有时受到彼此的影响。例如，数据集收集可能是一个费时的过程，也许需要一段时间才能使数据集足够大，以便训练机器学习模型达到可接受的性能水平。在等待期间，对物理硬件和应用程序代码的工作可能会继续不停。
- en: The project’s components do not exist in any particular order or hierarchy,
    and development is not a round-robin process where work is performed on one component
    and then the next. Instead, development occurs in parallel, typically with different
    engineers—or entire teams—working on each thread. Teams must synchronize regularly
    to share their current progress and anticipate whether there are any impending
    roadblocks that need to be worked around.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 项目的各个组成部分并没有任何特定的顺序或层次，开发也不是一个轮流进行工作的过程，其中对一个组件进行工作，然后对下一个组件进行工作。相反，开发是并行进行的，通常由不同的工程师或整个团队在每个线程上工作。团队必须定期同步，分享他们当前的进展，并预测是否有任何即将出现的需要解决的障碍。
- en: The key to successful development is to establish feedback loops between each
    of the four threads, and between the stages of the project (development, deployment,
    and support).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 成功开发的关键在于在每个项目线程和阶段（开发、部署和支持）之间建立反馈循环。
- en: Feedback loops
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 反馈循环
- en: The classic view of AI development, visualized in [Figure 9-3](#simple_loop_figure),
    shows a simple, step-by-step feedback loop that starts with data collection and
    ends with deployment to device. This is a tempting idea since it provides an easily
    understandable view of the way that information flows through the system.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图 9-3](#simple_loop_figure)中可视化的AI开发经典视图展示了一个简单的逐步反馈循环，从数据收集开始，以部署到设备结束。这是一个诱人的想法，因为它提供了一个易于理解的信息流通过系统的视图。
- en: '![Diagram of a simple feedback loop.](assets/aiae_0903.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![简单反馈循环图。](assets/aiae_0903.png)'
- en: Figure 9-3\. It’s tempting to think of the AI development feedback loop as being
    a step-by-step process, the result of taking a linear workflow and making it iterative
  id: totrans-88
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-3\. 诱人的是将AI开发的反馈循环视为一个逐步过程，这是将线性工作流程变为迭代的结果。
- en: However, as we learned in [“The Edge AI Workflow”](ch06.html#edge_ai_workflow),
    the reality is that there is actually interplay between every single component
    of the system. Each of them relates to the others in a dynamic way that is not
    easily expressed in a basic diagram. [Figure 9-4](#realistic_loop_figure) shows
    the system expressed more realistically.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，正如我们在[“边缘AI工作流”](ch06.html#edge_ai_workflow)中所学到的，事实上系统的每个组件之间存在着相互作用。它们之间的动态关系不容易用基本图表来表达。[图 9-4](#realistic_loop_figure)展示了更加真实的系统表达。
- en: '![Diagram of a feedback loop where every component influences every other.](assets/aiae_0904.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![每个组件相互影响的反馈循环图。](assets/aiae_0904.png)'
- en: Figure 9-4\. In reality, AI development involves a network of components that
    feed back into one another
  id: totrans-91
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 9-4\. 实际上，AI开发涉及一个相互反馈的组件网络。
- en: 'When managing a project, it’s critical to enable feedback to flow throughout
    the process unimpeded, from any one point to any other. For example, there will
    likely be aspects of the dataset (for example, the energy contained within specific
    frequency bands of the raw data) that inform the hardware design (since the hardware
    must be capable at sampling at a high enough rate to represent that frequency).
    The inverse is also true: if the hardware is constrained to include certain sensors,
    the dataset must reflect what those sensors can capture.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在管理项目时，关键在于确保反馈在整个过程中自由流动，从任意一点到另一点。例如，数据集可能有一些方面（例如原始数据中特定频段的能量），这些方面会影响硬件设计（因为硬件必须能够以足够高的速率进行采样以表示该频率）。反之亦然：如果硬件受限于包括某些传感器，则数据集必须反映这些传感器能够捕捉到的内容。
- en: Some feedback loops are easier to establish than others. For example, a feedback
    loop between dataset and hardware can be created by having the responsible teams
    talk to each other regularly. On the other hand, depending on the application,
    it can be very expensive to deploy a device into the field and monitoring. For
    this reason, various tools exist to “close the loop” in a simulated or approximate
    way—as we will discuss in [“Performance Calibration”](ch10.html#performance_calibration).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 一些反馈循环比其他的更容易建立。例如，数据集与硬件之间的反馈循环可以通过负责的团队定期交流来创建。另一方面，根据应用程序的不同，将设备部署到现场并进行监控可能非常昂贵。因此，存在各种工具以模拟或近似地“闭合循环”，正如我们将在[“性能校准”](ch10.html#performance_calibration)中讨论的那样。
- en: 'Here are some of the most important feedback loops in the development process:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是开发过程中一些最重要的反馈循环：
- en: Algorithm and dataset
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 算法和数据集
- en: Algorithms have varying data requirements. If plentiful data is available, many
    different algorithms may be used. If little data is available, fewer algorithms
    will work well. If a certain algorithm is desired for its specific properties,
    a suitable dataset will have to be collected.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 算法对数据的要求各不相同。如果有大量数据可用，可以使用多种不同的算法。如果数据较少，则较少的算法能够很好地工作。如果希望使用特定属性的某种算法，则必须收集适当的数据集。
- en: Algorithm and hardware design
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 算法和硬件设计
- en: In a greenfield project, the algorithm selected may determine the choice of
    hardware, since certain hardware might be required to run the algorithm efficiently.
    In a brownfield project, the constraints of existing hardware will limit the choice
    of algorithm.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个全新项目中，所选算法可能会决定硬件的选择，因为某些硬件可能需要高效运行算法。在既有项目中，现有硬件的约束将限制算法的选择。
- en: Algorithm and performance in the field
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 算法和现场性能
- en: The selected algorithm will impact performance in the field—for example, a larger
    machine learning model may provide better results. Inversely, the required level
    of performance in the field may drive algorithm selection.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 所选算法将会影响现场的性能——例如，一个更大的机器学习模型可能会提供更好的结果。反过来，现场所需的性能水平可能会推动算法的选择。
- en: Dataset and hardware design
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集和硬件设计
- en: The hardware design often informs the dataset since it may dictate which sensors
    are available for which to collect data. Alternatively, if a specific dataset
    is already available, the type or origin of the data it represents may influence
    the hardware design. For example, it may be helpful to ensure the exact same model
    of sensor is used.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件设计通常会影响数据集，因为它可能决定哪些传感器可用于收集数据。或者，如果已有特定数据集，则其所代表的数据类型或来源可能会影响硬件设计。例如，确保使用完全相同型号的传感器可能会很有帮助。
- en: Dataset and performance in the field
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集和现场性能
- en: If real-world performance is bad, it may be necessary to collect more data,
    guided by the areas in which the system is falling short. If only limited data
    is available, it may force you to settle for lower real-world performance than
    otherwise.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果现实世界中的表现不佳，可能需要收集更多数据，根据系统存在不足的领域进行引导。如果只有有限的数据可用，可能会迫使您接受比其他情况下更低的现实世界性能。
- en: Inversely, if performance in the field is limited or biased, this will influence
    the data you collect and the models you train over time. For example, if most
    people using your product belong to a certain group, you may begin to overfit
    performance to their needs.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，如果现场性能受限或存在偏差，这将影响您随时间收集的数据和训练的模型。例如，如果大多数使用您产品的人属于某一特定群体，您可能会开始过度拟合其需求的性能。
- en: Iterations in practice
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 实践中的迭代
- en: 'The basic idea of an iteration is that you change something, measure its impact
    on your goals, and then decide what to do next. The canonical example of this
    technique in AI development is when training a machine learning model. A typical
    iterative process for training resembles the following:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代的基本思想是您改变某些东西，衡量其对您的目标的影响，然后决定下一步该做什么。在AI开发中，这种技术的经典示例是训练机器学习模型时的典型迭代过程。
- en: Obtain some data and split it into training, validation, and test datasets.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获得一些数据并将其分割为训练、验证和测试数据集。
- en: Train a large model on the training split, aiming to overfit the data.^([2](ch09.html#idm45988813022800))
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在训练数据集上训练一个大型模型，目标是过度拟合数据。^([2](ch09.html#idm45988813022800))
- en: Measure performance on the validation split.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在验证数据集上测量性能。
- en: 'Tweak the setup to improve validation performance: add more data, add regularization,
    or play with the type and size of the model.'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调整设置以提高验证性能：添加更多数据、添加正则化或调整模型的类型和大小。
- en: Train and measure performance again.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次训练并测量性能。
- en: Once the model performs well enough on the validation split, try it on the test
    split.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦模型在验证数据集上表现足够好，就可以在测试数据集上尝试它。
- en: If it works well, great. If it doesn’t work well, throw it out and start from
    scratch.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果工作良好，那很好。如果表现不佳，请将其丢弃并从头开始。
- en: The flow for an edge AI project is similar, but it also includes the hardware
    and application pieces of the puzzle. For example, you might come up with an effective
    algorithm using something similar to the above flow, then attempt to deploy it
    to your hardware of choice and test it in a realistic way (such as with potential
    users). If it works, great. If it doesn’t work, you’ll have to make changes.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI项目的流程类似，但还包括拼图的硬件和应用部分。例如，您可能会利用类似上述流程的有效算法，然后尝试将其部署到您选择的硬件上，并以实际的方式（例如潜在用户）进行测试。如果有效，很好。如果不起作用，则必须进行更改。
- en: The key to all of this is making sure you test and iterate rapidly. If you spend
    a long time on each iteration, the penalty for making a regression (where improvement
    gets worse or something doesn’t fit, as with a model that is too large for the
    available hardware) is much larger, since you may have wasted a lot of time going
    down an unproductive route.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 关键在于确保您进行快速测试和迭代。如果您在每次迭代中花费很长时间，那么进行回归（改进变差或某些内容不符合，就像一个太大而不适合可用硬件的模型一样）的惩罚将更大，因为您可能已经浪费了很多时间走向一个无效的路线。
- en: If you iterate rapidly, so each change is small and is tested immediately, you’ll
    never waste too much time going down a rabbit hole of development that ends up
    being incompatible with other parts of your system.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您进行快速迭代，每次变更都很小并且立即进行测试，您将永远不会浪费太多时间陷入开发的兔子洞，最终发现与系统其他部分不兼容。
- en: When you’re lucky enough to have a large dataset, training a model can take
    quite a long time (think hours, days, or even weeks—although the small models
    of edge AI don’t usually take that long). It’s a nightmare to reach the end of
    a 48-hour training run and realize you made a mistake in your code and the resulting
    model is useless.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 当您有足够大的数据集时，训练一个模型可能需要很长时间（数小时、数天，甚至数周——尽管边缘AI的小型模型通常不会花费那么长时间）。当您在一个48小时的训练过程结束时，却意识到在您的代码中犯了一个错误，导致生成的模型无用，这真是一场噩梦。
- en: To cut down the time it takes for each iteration, it’s a good idea to begin
    the process with a subset of your dataset. For example, you might begin with a
    10% stratified sample (see [Figure 7-14](ch07.html#data_split_stratified)). Once
    you start to see promising results with this subset, you can gradually add more
    data in future iterations to improve the performance of your model.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 为了缩短每次迭代所需的时间，最好从数据集的子集开始整个过程。例如，您可以从一个10%分层样本开始（参见[图 7-14](ch07.html#data_split_stratified)）。一旦您开始看到这个子集有希望的结果，您可以逐步在将来的迭代中添加更多数据以提高模型的性能。
- en: Tip
  id: totrans-120
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 小贴士
- en: Tools can help you avoid some of these problems altogether. For example, AutoML
    tools (see [“Automated machine learning (AutoML)”](ch05.html#automl_tools)) designed
    specifically for edge AI can factor in hardware constraints so that you never
    run the risk of exceeding your specifications.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 工具可以帮助您完全避免其中的一些问题。例如，专为边缘AI设计的自动ML工具（参见[“自动化机器学习（AutoML）”](ch05.html#automl_tools)）可以考虑到硬件约束，以便您永远不会超出规格的风险。
- en: 'Remember, you won’t just be iterating on your model: you’ll be changing and
    improving every part of your design, from hardware through to application code.
    To understand how your performance is changing, you’ll need to use the right metrics
    and evaluation procedures—covered later in [“Evaluating Edge AI Systems”](ch10.html#evaluating_edge_ai_systems).'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，您不仅会迭代您的模型：您会改变和改进设计的每个部分，从硬件到应用代码。为了了解您的性能如何改变，您需要使用正确的度量标准和评估程序——稍后在[“评估边缘AI系统”](ch10.html#evaluating_edge_ai_systems)中进行介绍。
- en: The goals you set during the design process (see [“Technical goals”](ch08.html#setting_technical_goals))
    will help you understand when to stop iterating, either because you are no longer
    getting closer to your goal, or because you’ve surpassed it.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计过程中设定的目标（参见[“技术目标”](ch08.html#setting_technical_goals)）将帮助您理解何时停止迭代，无论是因为您不再接近目标，还是因为您已经超越了它。
- en: 'The iterative workflow naturally generates a lot of artifacts: datasets, models,
    training scripts, and all of the dependencies they bring with them. Keeping track
    of these is extremely important, since otherwise it can be difficult to understand
    your results and reproduce your work in the future. As we learned in [“Machine
    learning operations (MLOps)”](ch05.html#mlops_tools), MLOps provides a framework
    for doing this reliably.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代工作流自然而然地会生成大量的产物：数据集、模型、训练脚本以及它们所带来的所有依赖项。跟踪这些内容非常重要，否则将难以理解您的结果并在未来重现您的工作。正如我们在[“机器学习运营（MLOps）”](ch05.html#mlops_tools)中学到的，MLOps提供了一个可靠的框架来做这件事。
- en: Updating your plans
  id: totrans-125
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 更新您的计划
- en: During the course of a project, your understanding of the problem you are trying
    to solve, and the methods you are applying to it, is likely to evolve dramatically.
    It can sometimes become apparent that a goal is unrealistic, misguided, or not
    relevant to solving the core problem. If this seems to be the case, don’t hesitate
    to bring your stakeholders together and reappraise your targets.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目进行过程中，您对所要解决的问题及应用的方法的理解可能会发生显著变化。有时候会明显感觉到一个目标是不现实的、误导的或者与解决核心问题无关。如果情况是这样的话，毋需犹豫，将您的利益相关者聚集在一起，重新评估您的目标。
- en: That said, goals shouldn’t be expected to change frequently. Instead, if you
    need to make a course correction, the requirements and specifications of your
    project can be adjusted in line with your existing goals.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，不应期望目标经常变动。相反，如果需要进行调整，您的项目的要求和规格可以根据现有的目标进行调整。
- en: For example, imagine you are designing a smart lock that uses an image sensor
    and facial recognition to control entry to a building. Your goal for the project
    is to attain a false acceptance rate of close to 0%. During development you realize
    that this is unachievable using vision alone. You work with your stakeholders
    to update the scope of the project, allowing for an additional sensor to improve
    the reliability of the system.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，想象一下，您正在设计一款智能门锁，该门锁使用图像传感器和面部识别来控制进入建筑物。项目的目标是实现接近于`0%`的误接受率。在开发过程中，您意识到仅仅使用视觉技术是无法达到这一目标的。您与利益相关者合作，更新项目范围，允许增加额外的传感器以提高系统的可靠性。
- en: You should consider this type of discovery a natural part of the iterative development
    process. If you realize you should be aiming slightly differently, don’t panic—the
    purpose of the process is to allow you to course-correct so that you end up with
    a successful product at the end.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该将这种发现视为迭代开发过程的自然组成部分。如果您意识到应该稍作调整，不要惊慌——这个过程的目的是让您能够进行调整，从而最终获得成功的产品。
- en: Of course, it’s great if you can identify some of the possible risk factors
    during your design process and come up with ready-to-go contingency plans. For
    example, you may have predicted at the design stage that there might be a risk
    that vision alone is not adequate for ensuring a low false-acceptance rate and
    come up with some potential alternative solutions.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，在设计过程中，如果您能够识别出一些可能的风险因素，并制定好应急计划，那就太好了。例如，您可能在设计阶段预测到，仅仅依靠视觉技术可能不足以确保低误接受率，因此提出了一些潜在的替代方案。
- en: Warning
  id: totrans-131
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 警告
- en: Make sure that any changes in goals and direction are agreed upon by all stakeholders,
    communicated clearly to everyone involved with the project, and documented carefully
    for future reference. Differences in expectations can lead to major drama—but
    are easy to avoid.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 确保所有目标和方向的变更都得到所有利益相关者的同意，并向参与项目的所有人清晰地传达，并仔细记录以供将来参考。期望差异可能导致重大的问题，但这是很容易避免的。
- en: Ethical AI review
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 道德人工智能审查
- en: 'As we’ve seen, projects can undergo serious changes in direction during iterative
    development. This means your iterative process needs to include regular ethical
    review of your work. Things you should investigate include:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，项目在迭代开发过程中可能会发生严重的方向变化。这意味着您的迭代过程需要定期对您的工作进行道德审查。您应该调查的事项包括：
- en: Is the project on track to meet its key performance metrics set out during the
    design process (see [“Values-based design goals”](ch08.html#values_design_goals))?
    If not, maybe a new approach is needed.
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目是否按照设计过程中设定的关键性能指标进展顺利（见[“基于价值的设计目标”](ch08.html#values_design_goals)）？如果没有，可能需要采取新的方法。
- en: Is your moral feasibility study (described in [“Moral Feasibility”](ch06.html#ethical_feasibility))
    still relevant, or has your project changed and it needs to be updated?
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的道德可行性研究（见[“道德可行性”](ch06.html#ethical_feasibility)）是否仍然相关，或者您的项目已经发生了变化，需要更新？
- en: Do you still have a sufficient dataset and domain expertise to embark on the
    project (see [“Data, Ethics, and Responsible AI”](ch07.html#data_ethics_and_responsible_ai))?
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您是否还拥有足够的数据集和领域专业知识来开始这个项目（见[“数据、伦理和负责任的人工智能”](ch07.html#data_ethics_and_responsible_ai)）？
- en: Are your stakeholders in agreement that you are making progress, or are there
    any concerns?
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的利益相关者是否同意您正在取得进展，或者是否存在任何顾虑？
- en: It’s a great idea to conduct some form of third-party ethical review at this
    stage in addition to the ethical analysis undertaken by your own team. It’s much
    better to catch a potential ethical issue during iterative development, while
    it’s still possible to change course, than once development is over or the product
    has been shipped.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段进行某种形式的第三方伦理审查是一个很好的主意，除了你自己团队进行的伦理分析。在迭代开发期间发现潜在的伦理问题要好得多，因为在这时候仍然可以改变方向，而不是在开发结束或产品已经发货后。
- en: Deployment
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 部署
- en: There are no distinct lines between iterative development, deployment, and support.
    Instead, a project evolves gradually toward satisfying its goals until at a certain
    point—hopefully, fairly early in the process—the software side of the project
    is deployed onto hardware, and the hardware is placed in the field. This gradual
    process is shown in [Figure 9-5](#deploy_support_figure) (as in Figures [6-1](ch06.html#edge_ai_workflow_diagram)
    and [9-2](#test_and_iterate_figure)).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代开发、部署和支持之间没有明确的界限。相反，项目逐渐向满足其目标发展，直到在某个特定的时刻——希望是在过程的早期——项目的软件部分部署到硬件上，并且硬件放置在现场。这个渐进的过程显示在[图9-5](#deploy_support_figure)中（如图[6-1](ch06.html#edge_ai_workflow_diagram)和[9-2](#test_and_iterate_figure)所示）。
- en: '![Diagram showing the test and iterate portions of the workflow.](assets/aiae_0905.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![显示工作流程中测试和迭代部分的图表。](assets/aiae_0905.png)'
- en: Figure 9-5\. The test and iterate portion of the workflow gradually evolves
    from pure development to a mixture of development, deployment, and support; the
    feedback loop is maintained at all times
  id: totrans-143
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图9-5。工作流程中的测试和迭代部分逐渐从纯开发发展为开发、部署和支持的混合；反馈循环始终保持
- en: 'In the context of edge AI, deployment can mean one of two things:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在边缘AI的背景下，部署可以意味着两种情况之一：
- en: Deploying a piece of software onto a hardware device
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将软件部署到硬件设备上
- en: Deploying a set of hardware devices into the real world
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 把一组硬件设备部署到现实世界中
- en: In either instance, deploying early and often is the way to go. In the first
    case, it ensures you’re always building hardware and software that work well together.
    In the second case, it guarantees that you will establish a feedback loop between
    your project’s development process and its real-world performance. Deployment
    should never be considered a “last mile” operation that happens just before launch.
    Instead, it’s a critical part of your development process.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何情况下，早期和频繁地部署是正确的做法。在第一种情况下，它确保您始终在构建良好协同工作的硬件和软件。在第二种情况下，它确保您将项目开发过程与实际性能之间建立反馈循环。部署绝不能被视为“最后一英里”操作，仅在发布前发生。相反，它是您开发过程的关键部分。
- en: The distributed nature of edge systems lends itself well to this style of approach.
    It’s often possible to perform a staged rollout of a few devices at a time, carefully
    controlling the exact places where they are deployed and who is going to be interacting
    with them. This means you can ship prototype devices running a prototype application
    and get data on real-world performance—but still keep the associated risk to a
    minimum.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘系统的分布式特性非常适合这种方法。通常可以一次性地逐步推出几台设备，仔细控制它们部署的确切位置以及谁将与它们交互。这意味着您可以运送运行原型应用程序的原型设备，并获得实际性能数据，同时将相关风险降到最低。
- en: The best way to approach deployment is with a well-thought-out deployment plan.
    The steps involved are documented in [“Deploying Edge AI Applications”](ch10.html#planning_for_deployment).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 接近部署的最佳方式是制定一个经过深思熟虑的部署计划。涉及的步骤在[“部署边缘AI应用”](ch10.html#planning_for_deployment)中有详细记录。
- en: Support
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 支持
- en: An edge AI project is never really *finished*. Instead, it gradually enters
    a different phase of life where the focus is on monitoring and maintaining its
    performance.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 边缘AI项目永远不会真正“完成”。相反，它逐渐进入生命周期的另一个阶段，重点是监控和维护其性能。
- en: 'This work is necessary due to drift, which we learned about in [“Drift and
    Shift”](ch07.html#drift_and_shift). Because the world is constantly changing,
    it’s almost inevitable that an AI-based product will begin to lose efficacy over
    time. This makes ongoing maintenance necessary: updating the software so that
    it keeps pace with the change that is happening in its environment.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这项工作是由于我们在[“漂移和变化”](ch07.html#drift_and_shift)中学到的漂移所必需的。因为世界不断变化，几乎不可避免地会导致基于AI的产品随时间失效。这使得持续维护是必要的：更新软件以使其与环境中正在发生的变化保持同步。
- en: The support of edge AI applications is covered in depth in [Chapter 10](ch10.html#deploying_evaluating_and_supporting_edge_ai_applications).
    Support is tightly coupled with evaluation, since evaluative metrics are what
    allow you to understand whether performance—or the environment—are changing.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 对边缘AI应用的支持在[第10章](ch10.html#deploying_evaluating_and_supporting_edge_ai_applications)中有详细介绍。支持与评估密切相关，因为评估指标是帮助您了解性能或环境变化的关键。
- en: Summary
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: We now have a high-level view of the entire development workflow. While it’s
    a great general road map, the specifics of the journey will differ from project
    to project.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对整个开发工作流程有了高层次的视图。虽然这是一个很好的总体路线图，但具体的旅程细节将因项目而异。
- en: However, one thing shared by every project is a need for careful deployment,
    evaluation, and support. These are the topics we’ll cover in our next chapter.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，每个项目共享的一个需求是仔细的部署、评估和支持。这些是我们将在下一章中讨论的主题。
- en: '^([1](ch09.html#idm45988813169632-marker)) A highly rated book that covers
    the topic is [*Data Science from Scratch: First Principles with Python*](https://learning.oreilly.com/library/view/data-science-from/9781492041122/)
    by Joel Grus (O’Reilly, 2019).'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch09.html#idm45988813169632-marker)) 一本评价极高的涵盖该主题的书是《*用Python从零开始的数据科学原理*》（[链接](https://learning.oreilly.com/library/view/data-science-from/9781492041122/)，作者Joel
    Grus，O’Reilly出版，2019年）。
- en: ^([2](ch09.html#idm45988813022800-marker)) By aiming to overfit the data, we
    can prove that the model has sufficient representative power to model the data,
    and that our training pipeline actually works.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](ch09.html#idm45988813022800-marker)) 通过旨在过拟合数据，我们可以证明模型具有足够的代表性来对数据进行建模，并且我们的训练流程实际上是有效的。

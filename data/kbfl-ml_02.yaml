- en: 'Chapter 1\. Kubeflow: What It Is and Who It Is For'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 Kubeflow：是什么以及谁会用它
- en: If you are a data scientist trying to get your models into production, or a
    data engineer trying to make your models scalable and reliable, Kubeflow provides
    tools to help. Kubeflow solves the problem of how to take machine learning from
    research to production. Despite common misconceptions, Kubeflow is more than just
    Kubernetes and TensorFlow—you can use it for all sorts of machine learning tasks.
    We hope Kubeflow is the right tool for you, as long as your organization is using
    Kubernetes. [“Alternatives to Kubeflow”](#brief_alternatives_to_kubeflow) introduces
    some options you may wish to explore.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是试图将模型投入生产的数据科学家，或者是试图使模型可扩展和可靠的数据工程师，Kubeflow 提供了帮助的工具。Kubeflow 解决了如何将机器学习从研究转向生产的问题。尽管有常见的误解，Kubeflow
    不仅仅是 Kubernetes 和 TensorFlow，您可以用它来处理各种机器学习任务。我们希望 Kubeflow 是适合您的正确工具，只要您的组织在使用
    Kubernetes。[“Kubeflow的替代方案”](#brief_alternatives_to_kubeflow)介绍了一些您可能希望探索的选项。
- en: This chapter aims to help you decide if Kubeflow is the right tool for your
    use case. We’ll cover the benefits you can expect from Kubeflow, some of the costs
    associated with it, and some of the alternatives. After this chapter, we’ll dive
    into setting up Kubeflow and building an end-to-end solution to familiarize you
    with the basics.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章旨在帮助您决定 Kubeflow 是否适合您的用例。我们将介绍您可以从 Kubeflow 中期待的好处，一些相关的成本，以及一些替代方案。在本章结束后，我们将深入探讨如何设置
    Kubeflow 并构建端到端的解决方案，以帮助您熟悉基础知识。
- en: Model Development Life Cycle
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型开发生命周期
- en: 'Machine learning or model development essentially follows the path: data →
    information → knowledge → insight. This path of generating insight from data can
    be graphically described with [Figure 1-1](#mdlc_figure).'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习或模型开发基本上遵循路径：数据 → 信息 → 知识 → 洞察力。从数据中生成洞察力的这一路径可以用[图 1-1](#mdlc_figure)来形象描述。
- en: '*Model development life cycle* (MDLC) is a term commonly used to describe the
    flow between training and inference. [Figure 1-1](#mdlc_figure) is a visual representation
    of this continuous interaction, where upon triggering a model update the whole
    cycle kicks off yet again.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*模型开发生命周期*（MDLC）是一个常用术语，用于描述训练和推断之间的流程。[图 1-1](#mdlc_figure) 是这种连续交互的可视化表示，当触发模型更新时，整个周期重新开始。'
- en: '![Model Development Life-Cycle](Images/kfml_0101.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![模型开发生命周期](Images/kfml_0101.png)'
- en: Figure 1-1\. Model development life cycle
  id: totrans-7
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-1\. 模型开发生命周期
- en: Where Does Kubeflow Fit In?
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubeflow 的定位在哪里？
- en: Kubeflow is a collection of cloud native tools for all of the stages of MDLC
    (data exploration, feature preparation, model training/tuning, model serving,
    model testing, and model versioning). Kubeflow also has tooling that allows these
    traditionally separate tools to work seamlessly together. An important part of
    this tooling is the pipeline system, which allows users to build integrated end-to-end
    pipelines that connect all components of their MDLC.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Kubeflow 是一套云原生工具，涵盖了MDLC的所有阶段（数据探索、特征准备、模型训练/调整、模型服务、模型测试和模型版本控制）。Kubeflow
    还具有允许这些传统上独立工具无缝协作的工具。其工具的一个重要部分是管道系统，允许用户构建集成的端到端管道，连接其MDLC的所有组件。
- en: Kubeflow is for both data scientists and data engineers looking to build production-grade
    machine learning implementations. Kubeflow can be run either locally in your development
    environment or on a production cluster. Often pipelines will be developed locally
    and migrated once the pipelines are ready. Kubeflow provides a unified system—leveraging
    Kubernetes for containerization and scalability, for the portability and repeatability
    of its pipelines.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Kubeflow 适用于既是数据科学家又是数据工程师，希望构建生产级机器学习实现的人士。Kubeflow 可以在您的开发环境中本地运行，也可以在生产集群上运行。通常在本地开发并在管道准备就绪后迁移管道。Kubeflow
    提供了一个统一的系统，利用 Kubernetes 进行容器化和可扩展性，以实现管道的可移植性和可重复性。
- en: Why Containerize?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么要容器化？
- en: The isolation provided by containers allows machine learning stages to be portable
    and reproducible. Containerized applications are isolated from the rest of your
    machine and have all their requirements included (from the operating system up).^([1](ch01.xhtml#idm45831188244232))
    Containerization means no more conversations that include “It worked on my machine”
    or “Oh yeah, we forgot about just one, you need this extra package.”
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 容器提供的隔离使得机器学习阶段具有可移植性和可重现性。容器化应用程序与您的机器其他部分隔离，并包含所有的需求（从操作系统开始）。^([1](ch01.xhtml#idm45831188244232))
    容器化意味着不再需要包含“在我的机器上可行”或“哦，是的，我们忘记了一个，你需要这个额外的包”的对话。
- en: Containers are built in composable layers, allowing you to use another container
    as a base. For example, if you have a new natural language processing (NLP) library
    you want to use, you can add it on top of the existing container—you don’t have
    to start from scratch each time. The composability allows you to reuse a common
    base; for example, the R and Python containers we use both share a base Debian
    container.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 容器是由可组合的层构建的，允许你使用另一个容器作为基础。例如，如果你想使用一个新的自然语言处理（NLP）库，你可以将其添加到现有容器之上，而不必每次从头开始。这种可组合性允许你重复使用一个通用的基础；例如，我们使用的
    R 和 Python 容器都共享一个基础 Debian 容器。
- en: A common worry about using containers is the overhead. The overhead of containers
    depends on your implementation, but a paper from IBM^([2](ch01.xhtml#idm45831190375064))
    found the overhead to be quite low, and generally faster than virtualization.
    With Kubeflow, there is some additional overhead of having operators installed
    that you may not use. This overhead is negligible on a production cluster but
    may be noticeable on a laptop.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 关于使用容器的一个普遍担忧是开销问题。容器的开销取决于你的实现方式，但 IBM 的一篇论文^([2](ch01.xhtml#idm45831190375064))
    发现容器的开销非常低，并且通常比虚拟化更快。在 Kubeflow 中，安装了一些可能不会使用的运算符会增加一些额外开销。在生产集群上这种开销可以忽略不计，但在笔记本电脑上可能会有所感觉。
- en: Tip
  id: totrans-15
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: Data scientists with Python experience can think of containers as a heavy-duty
    virtual environment. In addition to what you’re used to in a virtual environment,
    containers also include the operating system, the packages, and everything in
    between.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 具有 Python 经验的数据科学家可以将容器视为一个功能强大的虚拟环境。除了虚拟环境中常见的功能外，容器还包括操作系统、软件包等一切。
- en: Why Kubernetes?
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么选择 Kubernetes？
- en: '[Kubernetes](https://kubernetes.io) is an open source system for automating
    the deployment, scaling, and management of containerized applications. It allows
    our pipelines to be scalable without sacrificing portability, enabling us to avoid
    becoming locked into a specific cloud provider.^([3](ch01.xhtml#idm45831190368120))
    In addition to being able to switch from a single machine to a distributed cluster,
    different stages of your machine learning pipeline can request different amounts
    or types of resources. For example, your data preparation step may benefit more
    from running on multiple machines, while your model training may benefit more
    from computing on top of GPUs or tensor processing units (TPUs). This flexibility
    is especially useful in cloud environments, where you can reduce your costs by
    using expensive resources only when required.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[Kubernetes](https://kubernetes.io) 是一个用于自动化部署、扩展和管理容器化应用程序的开源系统。它允许我们的流水线在保持可移植性的同时实现可扩展性，从而避免被锁定在特定的云提供商中。^([3](ch01.xhtml#idm45831190368120))
    除了能够从单一机器切换到分布式集群外，你的机器学习流水线的不同阶段可以请求不同数量或类型的资源。例如，你的数据准备步骤可能更适合在多台机器上运行，而你的模型训练可能更适合在
    GPU 或张量处理单元（TPU）上计算。在云环境中，这种灵活性尤为重要，你可以在需要时使用昂贵的资源来降低成本。'
- en: You can, of course, build your own containerized machine learning pipelines
    on Kubernetes without using Kubeflow; however the goal of Kubeflow is to standardize
    this process and make it substantially easier and more efficient.^([4](ch01.xhtml#idm45831190364232))
    Kubeflow provides a common interface over the tools you would likely use for your
    machine learning implementations. It also makes it easier to configure your implementations
    to use hardware accelerators like TPUs without changing your code.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你可以在 Kubernetes 上构建自己的容器化机器学习流水线，而不使用 Kubeflow；然而，Kubeflow 的目标是标准化这一过程，使其变得更加简单高效。^([4](ch01.xhtml#idm45831190364232))
    Kubeflow 提供了一个通用接口，覆盖了你在机器学习实现中可能使用的工具。它还使得配置你的实现以使用像 TPU 这样的硬件加速器变得更加容易，而无需修改代码。
- en: Kubeflow’s Design and Core Components
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubeflow 的设计和核心组件
- en: In the machine learning landscape, there exists a diverse selection of libraries,
    tool sets, and frameworks. Kubeflow does not seek to reinvent the wheel or provide
    a “one size fits all” solution—instead, it allows machine learning practitioners
    to compose and customize their own stacks based on specific needs. It is designed
    to simplify the process of building and deploying machine learning systems at
    scale. This allows data scientists to focus their energies on model development
    instead of infrastructure.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习领域，存在着多样化的库、工具集和框架选择。Kubeflow不寻求重复发明轮子或提供“一刀切”的解决方案——相反，它允许机器学习从业者根据特定需求组合和定制自己的堆栈。它旨在简化规模化构建和部署机器学习系统的过程。这使得数据科学家可以将精力集中在模型开发上，而不是基础设施上。
- en: 'Kubeflow seeks to tackle the problem of simplifying machine learning through
    three features: composability, portability, and scalability.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Kubeflow致力于通过三个特性来简化机器学习的问题：可组合性、可移植性和可扩展性。
- en: Composability
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 可组合性
- en: The core components of Kubeflow come from data science tools that are already
    familiar to machine learning practitioners. They can be used independently to
    facilitate specific stages of machine learning, or composed together to form end-to-end
    pipelines.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Kubeflow的核心组件来自于数据科学工具，这些工具对于机器学习从业者已经非常熟悉。它们可以独立使用以促进机器学习的特定阶段，或者组合在一起形成端到端的流水线。
- en: Portability
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 可移植性
- en: By having a container-based design and taking advantage of Kubernetes and its
    cloud native architecture, Kubeflow does not require you to anchor to any particular
    developer environment. You can experiment and prototype on your laptop, and deploy
    to production effortlessly.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 通过基于容器的设计，并利用Kubernetes及其云原生架构，Kubeflow不要求您锚定到任何特定的开发环境。您可以在笔记本电脑上进行实验和原型设计，并轻松部署到生产环境。
- en: Scalability
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 可扩展性
- en: By using Kubernetes, Kubeflow can dynamically scale according to the demand
    on your cluster, by changing the number and size of the underlying containers
    and machines.^([5](ch01.xhtml#idm45831190348232))
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用Kubernetes，Kubeflow可以根据集群的需求动态扩展，通过更改底层容器和机器的数量和大小。^([5](ch01.xhtml#idm45831190348232))
- en: These features are critical for different parts of MDLC. Scalability is important
    as your dataset grows. Portability is important to avoid vendor lock-in. Composability
    gives you the freedom to mix and match the best tools for the job.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这些功能对于MDLC的不同部分至关重要。随着数据集的增长，可扩展性变得越来越重要。可移植性对于避免供应商锁定至关重要。可组合性使您可以自由地混合和匹配最适合工作的工具。
- en: Let’s take a quick look at some of Kubeflow’s components and how they support
    these features.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速浏览一下Kubeflow的一些组件及其如何支持这些功能。
- en: Data Exploration with Notebooks
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用笔记本进行数据探索
- en: MDLC always begins with data exploration—plotting, segmenting, and manipulating
    your data to understand where possible insight might exist. One powerful tool
    that provides the tools and environment for such data exploration is Jupyter.
    Jupyter is an open source web application that allows users to create and share
    data, code snippets, and experiments. Jupyter is popular among machine learning
    practitioners due to its simplicity and portability.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: MDLC始终从数据探索开始——绘图、分割和操作数据，以理解可能存在的见解。一个强大的工具提供了这些数据探索工具和环境，即Jupyter。Jupyter是一个开源的Web应用程序，允许用户创建和共享数据、代码片段和实验。由于其简单性和可移植性，Jupyter在机器学习从业者中很受欢迎。
- en: In Kubeflow, you can spin up instances of Jupyter that directly interact with
    your cluster and its other components, as shown in [Figure 1-2](#ch1_jupyter_notebook).
    For example, you can write snippets of TensorFlow distributed training code on
    your laptop, and bring up a training cluster with just a few clicks.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在Kubeflow中，您可以启动与集群及其其他组件直接交互的Jupyter实例，如[图 1-2](#ch1_jupyter_notebook)所示。例如，您可以在笔记本电脑上编写TensorFlow分布式训练代码片段，并仅需点击几下即可启动训练集群。
- en: '![A Jupyter notebook running in Kubeflow](Images/kfml_0102.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![在Kubeflow中运行的Jupyter笔记本](Images/kfml_0102.png)'
- en: Figure 1-2\. Jupyter notebook running in Kubeflow
  id: totrans-35
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-2\. 在Kubeflow中运行的Jupyter笔记本
- en: Data/Feature Preparation
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据/特征准备
- en: 'Machine learning algorithms require good data to be effective, and often special
    tools are needed to effectively extract, transform, and load data. One typically
    filters, normalizes, and prepares one’s input data in order to extract insightful
    features from otherwise unstructured, noisy data. Kubeflow supports a few different
    tools for this:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习算法需要良好的数据才能有效，通常需要特殊工具来有效地提取、转换和加载数据。通常情况下，人们会对输入数据进行过滤、归一化和准备，以从结构化嘈杂的数据中提取深刻的特征。Kubeflow
    支持几种不同的工具来完成这些任务：
- en: Apache Spark (one of the most popular big data tools)
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache Spark（最流行的大数据工具之一）
- en: TensorFlow Transform (integrated with TensorFlow Serving for easier inference)
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TensorFlow Transform（与 TensorFlow Serving 集成，用于更轻松的推断）
- en: These distinct data preparation components can handle a variety of formats and
    data sizes and are designed to play nicely with your data exploration environment.^([6](ch01.xhtml#idm45831189959752))
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这些独特的数据准备组件可以处理各种格式和数据大小，并设计为与您的数据探索环境兼容。^([6](ch01.xhtml#idm45831189959752))
- en: Note
  id: totrans-41
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 注意
- en: Support for Apache Beam with Apache Flink in Kubeflow Pipelines is an area of
    active development.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Kubeflow 管道中支持 Apache Beam 和 Apache Flink 是一个正在积极开发的领域。
- en: Training
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 训练
- en: 'Once your features are prepped, you are ready to build and train your model.
    Kubeflow supports a variety of distributed training frameworks. As of the time
    of writing, Kubeflow has support for:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦准备好您的特征，您就可以构建和训练您的模型了。Kubeflow 支持多种分布式训练框架。截至撰写本文时，Kubeflow 支持：
- en: '[TensorFlow](https://www.tensorflow.org)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TensorFlow](https://www.tensorflow.org)'
- en: '[PyTorch](https://pytorch.org)'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyTorch](https://pytorch.org)'
- en: '[Apache MXNet](https://mxnet.apache.org)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Apache MXNet](https://mxnet.apache.org)'
- en: '[XGBoost](https://github.com/dmlc/xgboost)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[XGBoost](https://github.com/dmlc/xgboost)'
- en: '[Chainer](https://chainer.org)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Chainer](https://chainer.org)'
- en: '[Caffe2](https://caffe2.ai)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Caffe2](https://caffe2.ai)'
- en: '[Message passing interface (MPI)](https://oreil.ly/0zln4)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[消息传递接口 (MPI)](https://oreil.ly/0zln4)'
- en: In [Chapter 7](ch07.xhtml#tf_ch) we will examine how Kubeflow trains a TensorFlow
    model in greater detail and [Chapter 9](ch09.xhtml#beyond_tf) will explore other
    options.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第 7 章](ch07.xhtml#tf_ch)中，我们将详细讨论 Kubeflow 如何训练 TensorFlow 模型，而[第 9 章](ch09.xhtml#beyond_tf)将探索其他选项。
- en: Hyperparameter Tuning
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超参数调整
- en: How do you optimize your model architecture and training? In machine learning,
    hyperparameters are variables that govern the training process. For example, what
    should the model’s learning rate be? How many hidden layers and neurons should
    be in the neural network? These parameters are not part of the training data,
    but they can have a significant effect on the performance of the training models.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如何优化您的模型架构和训练？在机器学习中，超参数是控制训练过程的变量。例如，模型的学习率应该是多少？神经网络中应该有多少隐藏层和神经元？这些参数不是训练数据的一部分，但它们对训练模型的性能有重大影响。
- en: With Kubeflow, users can begin with a training model that they are unsure about,
    define the hyperparameter search space, and Kubeflow will take care of the rest—spin
    up training jobs using different hyperparameters, collect the metrics, and save
    the results to a model database so their performance can be compared.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Kubeflow，用户可以从一个他们不确定的训练模型开始，定义超参数搜索空间，Kubeflow 将处理其余的事情——使用不同的超参数启动训练作业，收集指标，并将结果保存到模型数据库中，以便比较它们的性能。
- en: Model Validation
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型验证
- en: Before you put your model into production, it’s important to know how it’s likely
    to perform. The same tool used for hyperparameter tuning can perform cross-validation
    for model validation. When you’re updating existing models, techniques like A/B
    testing and multi-armed bandit can be used in model inference to validate your
    model online.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在将模型投入生产之前，了解其可能的性能非常重要。用于超参数调整的同一工具可以执行模型验证的交叉验证。当您更新现有模型时，像 A/B 测试和多臂赌博机可以用于模型推断，以在线验证您的模型。
- en: Inference/Prediction
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推断/预测
- en: After training your model, the next step is to serve the model in your cluster
    so it can handle prediction requests. Kubeflow makes it easy for data scientists
    to deploy machine learning models in production environments at scale. Currently
    Kubeflow provides a multiframework component for model serving (KFServing), in
    addition to existing solutions like TensorFlow Serving and Seldon Core.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 训练完模型后，下一步是在集群中部署模型以处理预测请求。Kubeflow 可以让数据科学家轻松将机器学习模型部署到生产环境中，并进行规模化部署。目前，Kubeflow
    提供了一个多框架组件用于模型服务（KFServing），除了 TensorFlow Serving 和 Seldon Core 等现有解决方案。
- en: Serving many types of models on Kubeflow is fairly straightforward. In most
    situations, there is no need to build or customize a container yourself—simply
    point Kubeflow to where your model is stored, and a server will be ready to service
    requests.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在Kubeflow上提供多种类型的模型相对比较简单。在大多数情况下，无需自行构建或定制容器——只需将Kubeflow指向存储模型的位置，服务器就可以准备好服务请求。
- en: Once the model is served, it needs to be monitored for performance and possibly
    updated. This monitoring and updating is possible via the cloud native design
    of Kubeflow and will be further expanded upon in [Chapter 8](ch08.xhtml#inference_ch).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模型提供服务，就需要监视其性能，并可能进行更新。通过Kubeflow的云原生设计，可以实现这种监控和更新，并且将在[第8章](ch08.xhtml#inference_ch)进一步扩展。
- en: Pipelines
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管道
- en: 'Now that we have completed all aspects of MDLC, we wish to enable reusability
    and governance of these experiments. To do this, Kubeflow treats MDLC as a machine
    learning pipeline and implements it as a graph, where each node is a stage in
    a workflow, as seen in [Figure 1-3](#ch1_kubeflow_pipeline). Kubeflow Pipelines
    is a component that allows users to compose reusable workflows at ease. Its features
    include:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已完成MDLC的所有方面，希望能够实现这些实验的可重复使用性和治理。为此，Kubeflow将MDLC视为机器学习管道，并将其实现为一个图形，其中每个节点是工作流程中的一个阶段，如[图1-3](#ch1_kubeflow_pipeline)所示。Kubeflow
    Pipelines是一个允许用户轻松组合可重复使用工作流程的组件。其功能包括：
- en: An orchestration engine for multistep workflows
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多步骤工作流程的编排引擎
- en: An SDK to interact with pipeline components
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个SDK用于与管道组件交互
- en: A user interface that allows users to visualize and track experiments, and to
    share results with collaborators
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用户界面，允许用户可视化和跟踪实验，并与合作者分享结果
- en: '![A Kubeflow pipeline](Images/kfml_0103.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![一个Kubeflow管道](Images/kfml_0103.png)'
- en: Figure 1-3\. A Kubeflow pipeline
  id: totrans-68
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图1-3. 一个Kubeflow管道
- en: Component Overview
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组件概览
- en: 'As you can see, Kubeflow has built-in components for all parts of MDLC: data
    preparation, feature preparation, model training, data exploration, hyperparameter
    tuning, and model inference, as well as pipelines to coordinate everything. However,
    you are not limited to just the components shipped as part of Kubeflow. You can
    build on top of the components or even replace them. This can be OK for occasional
    components, but if you find yourself wanting to replace many parts of Kubeflow,
    you may want to explore some of the alternatives available.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所见，Kubeflow内置了MDLC的所有部分的组件：数据准备、特征准备、模型训练、数据探索、超参数调整和模型推断，以及用于协调所有事务的管道。但您不仅限于作为Kubeflow一部分提供的组件。您可以在这些组件的基础上构建，甚至替换它们。对于偶尔替换组件来说，这可能没问题，但如果您发现自己想要替换Kubeflow的许多部分，您可能需要探索一些可用的替代方案。
- en: Alternatives to Kubeflow
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubeflow的替代方案
- en: Within the research community, various alternatives exist that provide uniquely
    different functionality to that of Kubeflow. Most recent research has focused
    around model development and training, with large improvements being made in infrastructure,
    theory, and systems.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在研究社区内，存在许多提供与Kubeflow功能迥然不同的替代方案。最近的研究集中在模型开发和训练方面，基础设施、理论和系统方面取得了大幅进展。
- en: Prediction and model serving, on the other hand, have received relatively less
    attention. As such, data science practitioners often end up hacking together an
    amalgam of critical systems components that are integrated to support serving
    and inference across various workloads and continuously evolving frameworks.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，预测和模型服务接收到的关注相对较少。因此，数据科学从业者通常会将一系列关键系统组件混合在一起，这些组件被集成以支持跨多种工作负载的服务和推断，并持续演进的框架。
- en: Given the demand for constant availability and horizontal scalability, solutions
    like Kubeflow and various others are gaining traction throughout the industry,
    as powerful architectural abstraction tools, and as convincing research scopes.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 针对持续可用性和水平可扩展性的需求，像Kubeflow和其他各种解决方案正在行业中获得广泛认可，作为强大的架构抽象工具和令人信服的研究范围。
- en: Clipper (RiseLabs)
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Clipper（RiseLabs）
- en: One interesting alternative to Kubeflow is Clipper, a general-purpose low-latency
    prediction serving system developed by RiseLabs. In an attempt to simplify deployment,
    optimization, and inference, Clipper has a layered architecture system. Through
    various optimizations and its modular design, Clipper, achieves low latency and
    high-throughput predictions at levels comparable to TensorFlow Serving, on three
    TensorFlow models of varying inference costs.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有趣的替代 Kubeflow 的选择是 Clipper，一个由 RiseLabs 开发的通用低延迟预测服务系统。为了简化部署、优化和推断，Clipper
    采用了分层架构系统。通过各种优化和模块化设计，Clipper 实现了与 TensorFlow Serving 相媲美的低延迟和高吞吐量预测，适用于三种不同推断成本的
    TensorFlow 模型。
- en: Clipper is divided across two abstractions, aptly named *model selection* and
    *model abstraction* layers. The model selection layer is quite sophisticated in
    that it uses an adaptive online model selection policy and various ensemble techniques.
    Since the model is continuously learning from feedback throughout the lifetime
    of the application, the model selection layer self-calibrates failed models without
    needing to interact directly with the policy layer.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Clipper 分为两个抽象层，分别命名为 *模型选择* 和 *模型抽象* 层。模型选择层非常复杂，使用自适应在线模型选择策略和各种集成技术。由于模型在应用程序生命周期内持续学习反馈，模型选择层可以在无需直接与策略层交互的情况下自我校准失败的模型。
- en: Clipper’s modular architecture and focus on containerization, similar to Kubeflow,
    enables caching and batching mechanisms to be shared across frameworks while also
    reaping the benefits of scalability, concurrency, and flexibility in adding new
    model frameworks.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Clipper 的模块化架构和与 Kubeflow 类似的容器化方法，使得可以跨框架共享缓存和批处理机制，同时获得可扩展性、并发性和灵活性增加新的模型框架的好处。
- en: Graduating from theory into a functional end-to-end system, Clipper has gained
    traction within the scientific community and has had various parts of its architectural
    designs incorporated into recently introduced machine learning systems. Nonetheless,
    we have yet to see if it will be adopted in the industry at scale.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 从理论上升级到功能端到端系统，Clipper 在科学界获得了认可，并且其架构设计的各个部分已被最近引入的机器学习系统采纳。尽管如此，我们还没有看到它是否会在工业上被大规模采用。
- en: MLflow (Databricks)
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MLflow（Databricks）
- en: MLflow was developed by Databricks as an open source machine learning development
    platform. The architecture of MLflow leverages a lot of the same architectural
    paradigms as Clipper, including its framework-agnostic nature, while focusing
    on three major components that it calls Tracking, Projects, and Models.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: MLflow 是由 Databricks 开发的开源机器学习开发平台。MLflow 的架构利用了与 Clipper 相同的架构范式，包括其与框架无关的特性，同时专注于其称为
    Tracking、Projects 和 Models 的三个主要组件。
- en: MLflow Tracking functions as an API with a complementing UI for logging parameters,
    code versions, metrics, and output files. This is quite powerful in machine learning
    as tracking parameters, metrics, and artifacts is of paramount importance.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: MLflow Tracking 作为一个 API，配合一个 UI，用于记录参数、代码版本、指标和输出文件。在机器学习中，跟踪参数、指标和工件非常重要，这一点非常强大。
- en: MLflow Projects provides a standard format for packaging reusable data science
    code, defined by a YAML file that can leverage source-controlled code and dependency
    management via Anaconda. The project format makes it easy to share reproducible
    data science code, as reproducibility is critical for machine learning practitioners.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: MLflow Projects 提供了一个标准格式，用于打包可重复使用的数据科学代码，由一个 YAML 文件定义，可以利用 Anaconda 进行源代码控制和依赖管理。项目格式使得共享可重复生成的数据科学代码变得容易，因为对于机器学习从业者来说，可重复性非常重要。
- en: MLflow Models are a convention for packaging machine learning models in multiple
    formats. Each MLflow Model is saved as a directory containing arbitrary files
    and an MLmodel descriptor file. MLflow also provides the model’s registry, showing
    lineage between deployed models and their creation metadata.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: MLflow Models 是打包多种格式的机器学习模型的约定。每个 MLflow Model 保存为一个包含任意文件和一个 MLmodel 描述文件的目录。MLflow
    还提供模型注册表，显示部署模型和其创建元数据之间的衍生关系。
- en: Like Kubeflow, MLflow is still in active development, and has an active community.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 像 Kubeflow 一样，MLflow 仍在积极开发中，并拥有一个活跃的社区。
- en: Others
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他
- en: 'Because of the challenges presented in machine learning development, many organizations
    have started to build internal platforms to manage their machine learning life
    cycle. For example: Bloomberg, Facebook, Google, Uber, and IBM have built, respectively,
    the Data Science Platform, FBLearner Flow, TensorFlow Extended, Michelangelo,
    and Watson Studio to manage data preparation, model training, and deployment.^([7](ch01.xhtml#idm45831189890584))'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 由于机器学习开发中存在的挑战，许多组织已经开始建立内部平台来管理其机器学习生命周期。例如：Bloomberg、Facebook、Google、Uber和IBM分别构建了数据科学平台、FBLearner
    Flow、TensorFlow Extended、Michelangelo和Watson Studio，以管理数据准备、模型训练和部署。^([7](ch01.xhtml#idm45831189890584))
- en: With the machine learning infrastructure landscape always evolving and maturing,
    we are excited to see how open source projects, like Kubeflow, will bring much-needed
    simplicity and abstraction to machine learning development.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习基础设施格局不断演变和成熟，我们对开源项目如Kubeflow如何为机器学习开发带来亟需的简化和抽象感到兴奋。
- en: Introducing Our Case Studies
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们的案例研究介绍
- en: Machine learning can use many different types of data, and the approaches and
    tools you use may vary. In order to showcase Kubeflow’s capabilities, we’ve chosen
    case studies with very different data and best practices. When possible, we will
    use data from these case studies to explore Kubeflow and some of its components.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习可以使用许多不同类型的数据，您使用的方法和工具可能会有所不同。为了展示Kubeflow的能力，我们选择了具有非常不同数据和最佳实践的案例研究。在可能的情况下，我们将使用这些案例研究的数据来探索Kubeflow及其某些组件。
- en: Modified National Institute of Standards and Technology
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改过的国家标准技术研究所
- en: In ML, Modified National Institute of Standards and Technology (MNIST) commonly
    refers to the dataset of handwritten digits for classification. The relatively
    small data size of digits, as well as its common use as an example, allows us
    to explore a variety of tools. In some ways, MNIST has become one of the standard
    “hello world” examples for machine learning. We use MNIST as our first example
    in [Chapter 2](ch02.xhtml#simple_training_ch) to illustrate Kubeflow end-to-end.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在机器学习中，修改过的国家标准技术研究所（MNIST）通常指用于分类的手写数字数据集。手写数字的相对较小的数据大小，以及其作为示例的常见用途，使我们可以探索各种工具。在某些方面，MNIST已成为机器学习的标准“hello
    world”示例之一。我们将MNIST作为第一个例子，以展示Kubeflow的端到端过程。
- en: Mailing List Data
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 邮件列表数据
- en: Knowing how to ask good questions is something of an art. Have you ever posted
    a message to a mailing list, asking for help, only for no one to respond? What
    are the different types of questions? We’ll look at some of the public Apache
    Software Foundation mailing list data and try to create a model that predicts
    if a message will be answered. This example is scaled up and down by choosing
    which projects and what time period we want to look at, so we can use a variety
    of tools to solve it.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 知道如何提出好问题是一种艺术。您是否曾在邮件列表上发布求助信息，却无人回应？什么是不同类型的问题？我们将查看一些公共Apache软件基金会的邮件列表数据，并尝试创建一个预测消息是否会被回复的模型。通过选择我们想要查看的项目和时间段来缩放这个示例，我们可以使用多种工具来解决它。
- en: Product Recommender
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 产品推荐
- en: Recommendation systems are one of the most common and easily understood applications
    of machine learning, with many examples from Amazon’s product recommender to Netflix’s
    movie suggestions. The majority of recommender implementations are based on collaborative
    filtering—an assumption that if person A has the same opinion as person B on a
    set of issues, A would be more likely to share B’s opinion on other issues than
    would a randomly chosen third person. This approach is built on a well-developed
    algorithm with quite a few implementations, including TensorFlow/Keras implementation.^([8](ch01.xhtml#idm45831185488440))
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统是机器学习中最常见和易于理解的应用之一，有许多例子，从亚马逊的产品推荐到Netflix的电影建议。大多数推荐实现都基于协同过滤——一种假设，即如果A和B在一组问题上有相同的观点，那么A更有可能在其他问题上与B分享相同的观点，而不是随机选择的第三人。这种方法建立在一个成熟的算法上，有相当多的实现，包括TensorFlow/Keras实现。^([8](ch01.xhtml#idm45831185488440))
- en: One of the problems with rating-based models is that they can’t be standardized
    easily for data with nonscaled target values, such as the purchase or frequency
    data. This [excellent Medium post](https://oreil.ly/LncEo) shows how to convert
    such data into a rating matrix that can be used for collaborative filtering. Our
    example leverages [data and code from Data Driven Investor](https://oreil.ly/LncEo)
    and code described on [Piyushdharkar’s GitHub](https://oreil.ly/p3TB_). We’ll
    use this example to explore how to build an initial model in Jupyter and move
    on to building a production pipeline.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 基于评分模型的问题之一是它们不能轻松地为具有非标度目标值的数据进行标准化，例如购买或频率数据。这篇[优秀的 Medium 文章](https://oreil.ly/LncEo)展示了如何将这类数据转换为可用于协同过滤的评分矩阵。我们的例子利用了[Data
    Driven Investor 的数据和代码](https://oreil.ly/LncEo)，以及[Piyushdharkar 的 GitHub](https://oreil.ly/p3TB_)上描述的代码。我们将使用这个示例来探讨如何在
    Jupyter 中构建初始模型，并继续构建生产管道。
- en: CT Scans
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CT 扫描
- en: As we were writing this book, the world was going through the COVID-19 pandemic.
    AI researchers were being called on to apply methods and techniques to assist
    medical providers with understanding the disease. Some research showed that CT
    scans were more effective at early detection than RT-PCR tests (the traditional
    COVID test). However, diagnostic CT scans use low dosages of radiation and are
    therefore “noisy”—that is to say, CT scans are more clear when more radiation
    is used.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们编写本书时，全世界正在经历 COVID-19 大流行。AI 研究人员被要求应用方法和技术帮助医疗提供者理解这种疾病。一些研究显示，CT 扫描比传统的
    RT-PCR 检测更有效进行早期检测。然而，诊断性 CT 扫描使用低剂量的辐射，因此“噪音”较多，也就是说，当使用更多辐射时，CT 扫描更加清晰。
- en: A [new paper proposes](https://oreil.ly/OXrFs) an open source solution for denoising
    CT scans with off-the-shelf methods available entirely from open source projects
    (as opposed to proprietary FDA-approved solutions). We implement this approach
    to illustrate how one might go from academic article to real-world solution, to
    show the value of Kubeflow for creating reproducible and sharable research, and
    to provide a starting off point for any reader who might want to contribute to
    the fight against COVID-19.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 一篇[新的论文提出](https://oreil.ly/OXrFs)了一种开源解决方案，用于使用完全来自开源项目的现成方法去噪 CT 扫描（而不是专利的
    FDA 批准解决方案）。我们实现这种方法来说明如何从学术文章走向实际解决方案，展示 Kubeflow 在创建可重现和可共享研究方面的价值，并为任何希望为抗击
    COVID-19 贡献力量的读者提供起点。
- en: Conclusion
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: We are so glad you’ve decided to use this book to start your adventures into
    Kubeflow. This introduction should have given you a feel for Kubeflow and its
    capabilities. However, like all adventures, there may come a point when your guidebook
    isn’t enough to carry you through. Thankfully, there is a collection of community
    resources where you can interact with others on similar paths. We encourage you
    to sign up for the [Kubeflow Slack workspace](http://kubeflow.slack.com), one
    of the more active areas of discussion. There is also a [Kubeflow discussion mailing
    list](https://oreil.ly/Ca6R3). There is a [Kubeflow project page](https://www.kubeflow.org)
    as well.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们非常高兴您决定使用本书开始您的 Kubeflow 冒险之旅。本介绍应该让您对 Kubeflow 及其功能有所了解。然而，像所有的冒险一样，可能会有时候您的指南不足以带您通行。幸运的是，有一个社区资源收集，您可以与其他走同一条路的人进行交流。我们鼓励您加入
    [Kubeflow Slack 工作区](http://kubeflow.slack.com)，这是一个比较活跃的讨论区域之一。还有一个 [Kubeflow
    讨论邮件列表](https://oreil.ly/Ca6R3)。同时也有一个 [Kubeflow 项目页面](https://www.kubeflow.org)。
- en: Tip
  id: totrans-103
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: If you want to quickly explore Kubeflow end-to-end, there are some [Google codelabs](https://oreil.ly/YRfkm)
    that can help you.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望快速了解 Kubeflow 的端到端操作，可以参考一些[Google codelabs](https://oreil.ly/YRfkm)。
- en: In [Chapter 2](ch02.xhtml#simple_training_ch), we’ll install Kubeflow and use
    it to train and serve a relatively simple machine learning model to give you an
    idea of the basics.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第二章](ch02.xhtml#simple_training_ch)，我们将安装 Kubeflow 并使用它来训练和部署一个相对简单的机器学习模型，以便让您了解基础知识。
- en: ^([1](ch01.xhtml#idm45831188244232-marker)) For more on containers, see [this
    Google cloud resource](https://oreil.ly/wqetc). In situations with GPUs or TPUs,
    the details of isolation become more complicated.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](ch01.xhtml#idm45831188244232-marker)) 更多关于容器的信息，请参阅[这个 Google 云资源](https://oreil.ly/wqetc)。在涉及
    GPU 或 TPU 的情况下，隔离细节变得更加复杂。
- en: '^([2](ch01.xhtml#idm45831190375064-marker)) W. Felter et al., “An Updated Performance
    Comparison of Virtual Machines and Linux Containers,” 2015 IEEE International
    Symposium on Performance Analysis of Systems and Software (ISPASS), March 29-31,
    2015, doi: 10.1109/ISPASS.2015.7095802.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '^([2](ch01.xhtml#idm45831190375064-marker)) W. Felter 等人在 2015 年 IEEE 国际系统与软件性能分析研讨会（ISPASS）上发表了《虚拟机和
    Linux 容器的更新性能比较》，详见 doi: 10.1109/ISPASS.2015.7095802。'
- en: ^([3](ch01.xhtml#idm45831190368120-marker)) Kubernetes does this by providing
    a container orchestration layer. For more information about Kubernetes, check
    out [its documentation](https://oreil.ly/h2ami).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](ch01.xhtml#idm45831190368120-marker)) Kubernetes 通过提供容器编排层来实现这一点。关于 Kubernetes
    的更多信息，请查看[其文档](https://oreil.ly/h2ami)。
- en: ^([4](ch01.xhtml#idm45831190364232-marker)) Spotify was able to increase the
    rate of experiments ~7x; see this [Spotify Engineering blog post](https://oreil.ly/EoxeS).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](ch01.xhtml#idm45831190364232-marker)) Spotify 能够将实验速率提高了约 7 倍；可以参考这篇[Spotify
    Engineering 的博客文章](https://oreil.ly/EoxeS)。
- en: ^([5](ch01.xhtml#idm45831190348232-marker)) Local clusters like Minikube are
    limited to one machine, but most cloud clusters can dynamically change the kind
    and number of machines as needed.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: ^([5](ch01.xhtml#idm45831190348232-marker)) 像 Minikube 这样的本地集群仅限于一台机器，但大多数云集群可以根据需要动态更改机器的种类和数量。
- en: ^([6](ch01.xhtml#idm45831189959752-marker)) There is still some setup work to
    make this function, which we cover in [Chapter 5](ch05.xhtml#data_and_feature_prep).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: ^([6](ch01.xhtml#idm45831189959752-marker)) 虽然还需要一些设置工作来使其运行，我们会在[第 5 章](ch05.xhtml#data_and_feature_prep)中详细介绍。
- en: ^([7](ch01.xhtml#idm45831189890584-marker)) If you want to explore more of these
    tools, two good overviews are [Ian Hellstrom’s 2020 blog post](https://oreil.ly/doROU)
    and [this 2019 article by Austin Kodra](https://oreil.ly/bbI3_).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: ^([7](ch01.xhtml#idm45831189890584-marker)) 如果你想了解更多这些工具，可以参考[Ian Hellstrom
    2020 年的博客文章](https://oreil.ly/doROU)和[Austin Kodra 2019 年的文章](https://oreil.ly/bbI3_)，都是很好的概述。
- en: ^([8](ch01.xhtml#idm45831185488440-marker)) For example, see the [Piyushdharkar’s
    GitHub](https://oreil.ly/LFxR9).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: ^([8](ch01.xhtml#idm45831185488440-marker)) 例如，可以查看[Piyushdharkar 的 GitHub](https://oreil.ly/LFxR9)。

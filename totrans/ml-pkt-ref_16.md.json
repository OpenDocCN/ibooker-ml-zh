["```py\n>>> import xgboost as xgb\n>>> xgr = xgb.XGBRegressor(\n...     random_state=42, base_score=0.5\n... )\n>>> xgr.fit(bos_X_train, bos_y_train)\n```", "```py\n>>> sample_idx = 5\n>>> xgr.predict(bos_X.iloc[[sample_idx]])\narray([27.269186], dtype=float32)\n```", "```py\n>>> import shap\n>>> shap.initjs()\n\n>>> exp = shap.TreeExplainer(xgr)\n>>> vals = exp.shap_values(bos_X)\n```", "```py\n>>> shap.force_plot(\n...     exp.expected_value,\n...     vals[sample_idx],\n...     bos_X.iloc[sample_idx],\n... )\n```", "```py\n>>> shap.force_plot(\n...     exp.expected_value, vals, bos_X\n... )\n```", "```py\n>>> fig, ax = plt.subplots(figsize=(6, 4))\n>>> shap.dependence_plot(\"LSTAT\", vals, bos_X)\n>>> fig.savefig(\n...     \"images/mlpr_1603.png\",\n...     bbox_inches=\"tight\",\n...     dpi=300,\n... )\n```", "```py\n>>> fig, ax = plt.subplots(figsize=(6, 4))\n>>> shap.dependence_plot(\n...     \"DIS\", vals, bos_X, interaction_index=\"RM\"\n... )\n>>> fig.savefig(\n...     \"images/mlpr_1604.png\",\n...     bbox_inches=\"tight\",\n...     dpi=300,\n... )\n```", "```py\n>>> fig, ax = plt.subplots(figsize=(6, 4))\n>>> shap.summary_plot(vals, bos_X)\n>>> fig.savefig(\n...     \"images/mlpr_1605.png\",\n...     bbox_inches=\"tight\",\n...     dpi=300,\n... )\n```"]
["```py\n>>> from sklearn.utils import resample\n>>> mask = df.survived == 1\n>>> surv_df = df[mask]\n>>> death_df = df[~mask]\n>>> df_upsample = resample(\n...     surv_df,\n...     replace=True,\n...     n_samples=len(death_df),\n...     random_state=42,\n... )\n>>> df2 = pd.concat([death_df, df_upsample])\n\n>>> df2.survived.value_counts()\n1    809\n0    809\nName: survived, dtype: int64\n```", "```py\n>>> from imblearn.over_sampling import (\n...     RandomOverSampler,\n... )\n>>> ros = RandomOverSampler(random_state=42)\n>>> X_ros, y_ros = ros.fit_sample(X, y)\n>>> pd.Series(y_ros).value_counts()\n1    809\n0    809\ndtype: int64\n```", "```py\n>>> from sklearn.utils import resample\n>>> mask = df.survived == 1\n>>> surv_df = df[mask]\n>>> death_df = df[~mask]\n>>> df_downsample = resample(\n...     death_df,\n...     replace=False,\n...     n_samples=len(surv_df),\n...     random_state=42,\n... )\n>>> df3 = pd.concat([surv_df, df_downsample])\n\n>>> df3.survived.value_counts()\n1    500\n0    500\nName: survived, dtype: int64\n```"]
["```py\nimport numpy as np\n\ndef get_warp_weights(n: int) -> np.ndarray:\n  \"\"\"Returns N weights to convert a rank to a loss weight.\"\"\"\n\n  # The alphas are defined as values that are monotonically decreasing.\n  # We take the reciprocal of the natural numbers for the alphas.\n  rank = np.arange(1.0, n + 1, 1)\n  alpha = 1.0 / rank\n  weights = alpha\n\n  # This is the L in the paper, defined as the sum of all previous alphas.\n  for i in range(1, n):\n    weights[i] = weights[i] + weights[i -1]\n\n  # Divide by the rank.\n  weights = weights / rank\n  return weights\n\nprint(get_warp_weights(5))\n[1.         0.75       0.61111111 0.52083333 0.45666667]\n```"]
["```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data as a dataframe\ndataframe = pd.read_csv(url)\n\n# Show first five rows\ndataframe.head(5)\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create a dictionary\ndictionary = {\n  \"Name\": ['Jacky Jackson', 'Steven Stevenson'],\n  \"Age\": [38, 25],\n  \"Driver\": [True, False]\n}\n\n# Create DataFrame\ndataframe = pd.DataFrame(dictionary)\n\n# Show DataFrame\ndataframe\n```", "```py\n# Add a column for eye color\ndataframe[\"Eyes\"] = [\"Brown\", \"Blue\"]\n\n# Show DataFrame\ndataframe\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Show two rows\ndataframe.head(2)\n```", "```py\n# Show dimensions\ndataframe.shape\n```", "```py\n(1313, 6)\n```", "```py\n# Show statistics\ndataframe.describe()\n```", "```py\n# Show info\ndataframe.info()\n```", "```py\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1313 entries, 0 to 1312\nData columns (total 6 columns):\n #   Column    Non-Null Count  Dtype\n---  ------    --------------  -----\n 0   Name      1313 non-null   object\n 1   PClass    1313 non-null   object\n 2   Age       756 non-null    float64\n 3   Sex       1313 non-null   object\n 4   Survived  1313 non-null   int64\n 5   SexCode   1313 non-null   int64\ndtypes: float64(1), int64(2), object(3)\nmemory usage: 61.7+ KB\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Select first row\ndataframe.iloc[0]\n```", "```py\nName        Allen, Miss Elisabeth Walton\nPClass                               1st\nAge                                   29\nSex                               female\nSurvived                               1\nSexCode                                1\nName: 0, dtype: object\n```", "```py\n# Select three rows\ndataframe.iloc[1:4]\n```", "```py\n# Select four rows\ndataframe.iloc[:4]\n```", "```py\n# Set index\ndataframe = dataframe.set_index(dataframe['Name'])\n\n# Show row\ndataframe.loc['Allen, Miss Elisabeth Walton']\n```", "```py\nName        Allen, Miss Elisabeth Walton\nPClass                               1st\nAge                                   29\nSex                               female\nSurvived                               1\nSexCode                                1\nName: Allen, Miss Elisabeth Walton, dtype: object\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Show top two rows where column 'sex' is 'female'\ndataframe[dataframe['Sex'] == 'female'].head(2)\n```", "```py\n# Filter rows\ndataframe[(dataframe['Sex'] == 'female') & (dataframe['Age'] >= 65)]\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Sort the dataframe by age, show two rows\ndataframe.sort_values(by=[\"Age\"]).head(2)\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Replace values, show two rows\ndataframe['Sex'].replace(\"female\", \"Woman\").head(2)\n```", "```py\n0    Woman\n1    Woman\nName: Sex, dtype: object\n```", "```py\n# Replace \"female\" and \"male\" with \"Woman\" and \"Man\"\ndataframe['Sex'].replace([\"female\", \"male\"], [\"Woman\", \"Man\"]).head(5)\n```", "```py\n0    Woman\n1    Woman\n2      Man\n3    Woman\n4      Man\nName: Sex, dtype: object\n```", "```py\n# Replace values, show two rows\ndataframe.replace(1, \"One\").head(2)\n```", "```py\n# Replace values, show two rows\ndataframe.replace(r\"1st\", \"First\", regex=True).head(2)\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Rename column, show two rows\ndataframe.rename(columns={'PClass': 'Passenger Class'}).head(2)\n```", "```py\n# Rename columns, show two rows\ndataframe.rename(columns={'PClass': 'Passenger Class', 'Sex': 'Gender'}).head(2)\n```", "```py\n# Load library\nimport collections\n\n# Create dictionary\ncolumn_names = collections.defaultdict(str)\n\n# Create keys\nfor name in dataframe.columns:\n    column_names[name]\n\n# Show dictionary\ncolumn_names\n```", "```py\ndefaultdict(str,\n            {'Age': '',\n             'Name': '',\n             'PClass': '',\n             'Sex': '',\n             'SexCode': '',\n             'Survived': ''})\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Calculate statistics\nprint('Maximum:', dataframe['Age'].max())\nprint('Minimum:', dataframe['Age'].min())\nprint('Mean:', dataframe['Age'].mean())\nprint('Sum:', dataframe['Age'].sum())\nprint('Count:', dataframe['Age'].count())\n```", "```py\nMaximum: 71.0\nMinimum: 0.17\nMean: 30.397989417989415\nSum: 22980.879999999997\nCount: 756\n```", "```py\n# Show counts\ndataframe.count()\n```", "```py\nName        1313\nPClass      1313\nAge          756\nSex         1313\nSurvived    1313\nSexCode     1313\ndtype: int64\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Select unique values\ndataframe['Sex'].unique()\n```", "```py\narray(['female', 'male'], dtype=object)\n```", "```py\n# Show counts\ndataframe['Sex'].value_counts()\n```", "```py\nmale      851\nfemale    462\nName: Sex, dtype: int64\n```", "```py\n# Show counts\ndataframe['PClass'].value_counts()\n```", "```py\n3rd    711\n1st    322\n2nd    279\n*        1\nName: PClass, dtype: int64\n```", "```py\n# Show number of unique values\ndataframe['PClass'].nunique()\n```", "```py\n4\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n## Select missing values, show two rows\ndataframe[dataframe['Age'].isnull()].head(2)\n```", "```py\n# Attempt to replace values with NaN\ndataframe['Sex'] = dataframe['Sex'].replace('male', NaN)\n```", "```py\n---------------------------------------------------------------------------\n\nNameError                                 Traceback (most recent call last)\n\n<ipython-input-7-5682d714f87d> in <module>()\n      1 # Attempt to replace values with NaN\n----> 2 dataframe['Sex'] = dataframe['Sex'].replace('male', NaN)\n\nNameError: name 'NaN' is not defined\n---------------------------------------------------------------------------\n\n```", "```py\n# Load library\nimport numpy as np\n\n# Replace values with NaN\ndataframe['Sex'] = dataframe['Sex'].replace('male', np.nan)\n```", "```py\n# Load data, set missing values\ndataframe = pd.read_csv(url, na_values=[np.nan, 'NONE', -999])\n```", "```py\n# Get a single null row\nnull_entry = dataframe[dataframe[\"Age\"].isna()].head(1)\n\nprint(null_entry)\n```", "```py\n# Fill all null values with the mean age of passengers\nnull_entry.fillna(dataframe[\"Age\"].mean())\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Delete column\ndataframe.drop('Age', axis=1).head(2)\n```", "```py\n# Drop columns\ndataframe.drop(['Age', 'Sex'], axis=1).head(2)\n```", "```py\n# Drop column\ndataframe.drop(dataframe.columns[1], axis=1).head(2)\n```", "```py\n# Create a new DataFrame\ndataframe_name_dropped = dataframe.drop(dataframe.columns[0], axis=1)\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Delete rows, show first three rows of output\ndataframe[dataframe['Sex'] != 'male'].head(3)\n```", "```py\n# Delete row, show first two rows of output\ndataframe[dataframe['Name'] != 'Allison, Miss Helen Loraine'].head(2)\n```", "```py\n# Delete row, show first two rows of output\ndataframe[dataframe.index != 0].head(2)\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Drop duplicates, show first two rows of output\ndataframe.drop_duplicates().head(2)\n```", "```py\n# Show number of rows\nprint(\"Number Of Rows In The Original DataFrame:\", len(dataframe))\nprint(\"Number Of Rows After Deduping:\", len(dataframe.drop_duplicates()))\n```", "```py\nNumber Of Rows In The Original DataFrame: 1313\nNumber Of Rows After Deduping: 1313\n```", "```py\n# Drop duplicates\ndataframe.drop_duplicates(subset=['Sex'])\n```", "```py\n# Drop duplicates\ndataframe.drop_duplicates(subset=['Sex'], keep='last')\n```", "```py\ndataframe.duplicated()\n```", "```py\n0       False\n1       False\n2       False\n3       False\n4       False\n        ...\n1308    False\n1309    False\n1310    False\n1311    False\n1312    False\nLength: 1313, dtype: bool\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Group rows by the values of the column 'Sex', calculate mean # of each group\ndataframe.groupby('Sex').mean(numeric_only=True)\n```", "```py\n# Group rows\ndataframe.groupby('Sex')\n```", "```py\n<pandas.core.groupby.DataFrameGroupBy object at 0x10efacf28>\n```", "```py\n# Group rows, count rows\ndataframe.groupby('Survived')['Name'].count()\n```", "```py\nSurvived\n0    863\n1    450\nName: Name, dtype: int64\n```", "```py\n# Group rows, calculate mean\ndataframe.groupby(['Sex','Survived'])['Age'].mean()\n```", "```py\nSex     Survived\nfemale  0           24.901408\n        1           30.867143\nmale    0           32.320780\n        1           25.951875\nName: Age, dtype: float64\n```", "```py\n# Load libraries\nimport pandas as pd\nimport numpy as np\n\n# Create date range\ntime_index = pd.date_range('06/06/2017', periods=100000, freq='30S')\n\n# Create DataFrame\ndataframe = pd.DataFrame(index=time_index)\n\n# Create column of random values\ndataframe['Sale_Amount'] = np.random.randint(1, 10, 100000)\n\n# Group rows by week, calculate sum per week\ndataframe.resample('W').sum()\n```", "```py\n# Show three rows\ndataframe.head(3)\n```", "```py\n# Group by two weeks, calculate mean\ndataframe.resample('2W').mean()\n```", "```py\n# Group by month, count rows\ndataframe.resample('M').count()\n```", "```py\n# Group by month, count rows\ndataframe.resample('M', label='left').count()\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Get the minimum of every column\ndataframe.agg(\"min\")\n```", "```py\nName        Abbing, Mr Anthony\nPClass                       *\nAge                       0.17\nSex                     female\nSurvived                     0\nSexCode                      0\ndtype: object\n```", "```py\n# Mean Age, min and max SexCode\ndataframe.agg({\"Age\":[\"mean\"], \"SexCode\":[\"min\", \"max\"]})\n```", "```py\n# Number of people who survived and didn't survive in each class\ndataframe.groupby(\n    [\"PClass\",\"Survived\"]).agg({\"Survived\":[\"count\"]}\n  ).reset_index()\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Print first two names uppercased\nfor name in dataframe['Name'][0:2]:\n    print(name.upper())\n```", "```py\nALLEN, MISS ELISABETH WALTON\nALLISON, MISS HELEN LORAINE\n```", "```py\n# Show first two names uppercased\n[name.upper() for name in dataframe['Name'][0:2]]\n```", "```py\n['ALLEN, MISS ELISABETH WALTON', 'ALLISON, MISS HELEN LORAINE']\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Create function\ndef uppercase(x):\n    return x.upper()\n\n# Apply function, show two rows\ndataframe['Name'].apply(uppercase)[0:2]\n```", "```py\n0    ALLEN, MISS ELISABETH WALTON\n1    ALLISON, MISS HELEN LORAINE\nName: Name, dtype: object\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create URL\nurl = 'https://raw.githubusercontent.com/chrisalbon/sim_data/master/titanic.csv'\n\n# Load data\ndataframe = pd.read_csv(url)\n\n# Group rows, apply function to groups\ndataframe.groupby('Sex').apply(lambda x: x.count())\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create DataFrame\ndata_a = {'id': ['1', '2', '3'],\n          'first': ['Alex', 'Amy', 'Allen'],\n          'last': ['Anderson', 'Ackerman', 'Ali']}\ndataframe_a = pd.DataFrame(data_a, columns = ['id', 'first', 'last'])\n\n# Create DataFrame\ndata_b = {'id': ['4', '5', '6'],\n          'first': ['Billy', 'Brian', 'Bran'],\n          'last': ['Bonder', 'Black', 'Balwner']}\ndataframe_b = pd.DataFrame(data_b, columns = ['id', 'first', 'last'])\n\n# Concatenate DataFrames by rows\npd.concat([dataframe_a, dataframe_b], axis=0)\n```", "```py\n# Concatenate DataFrames by columns\npd.concat([dataframe_a, dataframe_b], axis=1)\n```", "```py\n# Load library\nimport pandas as pd\n\n# Create DataFrame\nemployee_data = {'employee_id': ['1', '2', '3', '4'],\n                 'name': ['Amy Jones', 'Allen Keys', 'Alice Bees',\n                 'Tim Horton']}\ndataframe_employees = pd.DataFrame(employee_data, columns = ['employee_id',\n                                                              'name'])\n\n# Create DataFrame\nsales_data = {'employee_id': ['3', '4', '5', '6'],\n              'total_sales': [23456, 2512, 2345, 1455]}\ndataframe_sales = pd.DataFrame(sales_data, columns = ['employee_id',\n                                                      'total_sales'])\n\n# Merge DataFrames\npd.merge(dataframe_employees, dataframe_sales, on='employee_id')\n```", "```py\n# Merge DataFrames\npd.merge(dataframe_employees, dataframe_sales, on='employee_id', how='outer')\n```", "```py\n# Merge DataFrames\npd.merge(dataframe_employees, dataframe_sales, on='employee_id', how='left')\n```", "```py\n# Merge DataFrames\npd.merge(dataframe_employees,\n         dataframe_sales,\n         left_on='employee_id',\n         right_on='employee_id')\n```"]
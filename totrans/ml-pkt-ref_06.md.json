["```py\n>>> X.shape\n(1309, 13)\n```", "```py\n>>> X.describe().iloc[:, [0, -1]]\n pclass   embarked_S\ncount  1309.000000  1309.000000\nmean     -0.012831     0.698243\nstd       0.995822     0.459196\nmin      -1.551881     0.000000\n25%      -0.363317     0.000000\n50%       0.825248     1.000000\n75%       0.825248     1.000000\nmax       0.825248     1.000000\n```", "```py\n>>> X.iloc[[1, 4], -3:]\n sex_male  embarked_Q  embarked_S\n677       1.0           0           1\n864       0.0           0           1\n```", "```py\n>>> X.loc[[677, 864], \"sex_male\":]\n sex_male  embarked_Q  embarked_S\n677       1.0           0           1\n864       0.0           0           1\n```", "```py\n>>> fig, ax = plt.subplots(figsize=(6, 4))\n>>> X.fare.plot(kind=\"hist\", ax=ax)\n>>> fig.savefig(\"images/mlpr_0601.png\", dpi=300)\n```", "```py\nfig, ax = plt.subplots(figsize=(12, 8))\nmask = y_train == 1\nax = sns.distplot(X_train[mask].fare, label='survived')\nax = sns.distplot(X_train[~mask].fare, label='died')\nax.set_xlim(-1.5, 1.5)\nax.legend()\nfig.savefig('images/mlpr_0602.png', dpi=300, bbox_inches='tight')\n```", "```py\n>>> fig, ax = plt.subplots(figsize=(6, 4))\n>>> X.plot.scatter(\n...     x=\"age\", y=\"fare\", ax=ax, alpha=0.3\n... )\n>>> fig.savefig(\"images/mlpr_0603.png\", dpi=300)\n```", "```py\n>>> X.age.corr(X.fare)\n0.17818151568062093\n```", "```py\n>>> from yellowbrick.features import (\n...     JointPlotVisualizer,\n... )\n>>> fig, ax = plt.subplots(figsize=(6, 6))\n>>> jpv = JointPlotVisualizer(\n...     feature=\"age\", target=\"fare\"\n... )\n>>> jpv.fit(X[\"age\"], X[\"fare\"])\n>>> jpv.poof()\n>>> fig.savefig(\"images/mlpr_0604.png\", dpi=300)\n```", "```py\n>>> from seaborn import jointplot\n>>> fig, ax = plt.subplots(figsize=(6, 6))\n>>> new_df = X.copy()\n>>> new_df[\"target\"] = y\n>>> p = jointplot(\n...     \"age\", \"fare\", data=new_df, kind=\"reg\"\n... )\n>>> p.savefig(\"images/mlpr_0605.png\", dpi=300)\n```", "```py\n>>> from seaborn import pairplot\n>>> fig, ax = plt.subplots(figsize=(6, 6))\n>>> new_df = X.copy()\n>>> new_df[\"target\"] = y\n>>> vars = [\"pclass\", \"age\", \"fare\"]\n>>> p = pairplot(\n...     new_df, vars=vars, hue=\"target\", kind=\"reg\"\n... )\n>>> p.savefig(\"images/mlpr_0606.png\", dpi=300)\n```", "```py\n>>> from seaborn import box plot\n>>> fig, ax = plt.subplots(figsize=(8, 6))\n>>> new_df = X.copy()\n>>> new_df[\"target\"] = y\n>>> boxplot(x=\"target\", y=\"age\", data=new_df)\n>>> fig.savefig(\"images/mlpr_0607.png\", dpi=300)\n```", "```py\n>>> from seaborn import violinplot\n>>> fig, ax = plt.subplots(figsize=(8, 6))\n>>> new_df = X.copy()\n>>> new_df[\"target\"] = y\n>>> violinplot(\n...     x=\"target\", y=\"sex_male\", data=new_df\n... )\n>>> fig.savefig(\"images/mlpr_0608.png\", dpi=300)\n```", "```py\n>>> fig, ax = plt.subplots(figsize=(8, 6))\n>>> (\n...     X.assign(\n...         age_bin=pd.qcut(\n...             X.age, q=10, labels=False\n...         ),\n...         class_bin=pd.cut(\n...             X.pclass, bins=3, labels=False\n...         ),\n...     )\n...     .groupby([\"age_bin\", \"class_bin\"])\n...     .size()\n...     .unstack()\n...     .pipe(lambda df: df.div(df.sum(1), axis=0))\n...     .plot.bar(\n...         stacked=True,\n...         width=1,\n...         ax=ax,\n...         cmap=\"viridis\",\n...     )\n...     .legend(bbox_to_anchor=(1, 1))\n... )\n>>> fig.savefig(\n...     \"image/mlpr_0609.png\",\n...     dpi=300,\n...     bbox_inches=\"tight\",\n... )\n```", "```py\n.groupby([\"age_bin\", \"class_bin\"])\n.size()\n.unstack()\n```", "```py\n.pipe(lambda df: pd.crosstab(\n df.age_bin, df.class_bin)\n)\n```", "```py\n>>> from yellowbrick.features import Rank2D\n>>> fig, ax = plt.subplots(figsize=(6, 6))\n>>> pcv = Rank2D(\n...     features=X.columns, algorithm=\"pearson\"\n... )\n>>> pcv.fit(X, y)\n>>> pcv.transform(X)\n>>> pcv.poof()\n>>> fig.savefig(\n...     \"images/mlpr_0610.png\",\n...     dpi=300,\n...     bbox_inches=\"tight\",\n... )\n```", "```py\n>>> from seaborn import heatmap\n>>> fig, ax = plt.subplots(figsize=(8, 8))\n>>> ax = heatmap(\n...     X.corr(),\n...     fmt=\".2f\",\n...     annot=True,\n...     ax=ax,\n...     cmap=\"RdBu_r\",\n...     vmin=-1,\n...     vmax=1,\n... )\n>>> fig.savefig(\n...     \"images/mlpr_0611.png\",\n...     dpi=300,\n...     bbox_inches=\"tight\",\n... )\n```", "```py\n>>> X.corr().iloc[:, :2]\n pclass       age\npclass      1.000000 -0.440769\nage        -0.440769  1.000000\nsibsp       0.060832 -0.292051\nparch       0.018322 -0.174992\nfare       -0.558831  0.177205\nsex_male    0.124617  0.077636\nembarked_Q  0.230491 -0.061146\nembarked_S  0.096335 -0.041315\n```", "```py\n>>> def correlated_columns(df, threshold=0.95):\n...     return (\n...         df.corr()\n...         .pipe(\n...             lambda df1: pd.DataFrame(\n...                 np.tril(df1, k=-1),\n...                 columns=df.columns,\n...                 index=df.columns,\n...             )\n...         )\n...         .stack()\n...         .rename(\"pearson\")\n...         .pipe(\n...             lambda s: s[\n...                 s.abs() > threshold\n...             ].reset_index()\n...         )\n...         .query(\"level_0 not in level_1\")\n...     )\n\n>>> correlated_columns(X)\nEmpty DataFrame\nColumns: [level_0, level_1, pearson]\nIndex: []\n```", "```py\n>>> c_df = correlated_columns(agg_df)\n>>> c_df.style.format({\"pearson\": \"{:.2f}\"})\n level_0     level_1   pearson\n3   pclass_mean      pclass  1.00\n4   pclass_mean  pclass_min  1.00\n5   pclass_mean  pclass_max  1.00\n6    sibsp_mean   sibsp_max  0.97\n7    parch_mean   parch_min  0.95\n8    parch_mean   parch_max  0.96\n9     fare_mean        fare  0.95\n10    fare_mean    fare_max  0.98\n12    body_mean    body_min  1.00\n13    body_mean    body_max  1.00\n14     sex_male  sex_female -1.00\n15   embarked_S  embarked_C -0.95\n```", "```py\n>>> from yellowbrick.features import RadViz\n>>> fig, ax = plt.subplots(figsize=(6, 6))\n>>> rv = RadViz(\n...     classes=[\"died\", \"survived\"],\n...     features=X.columns,\n... )\n>>> rv.fit(X, y)\n>>> _ = rv.transform(X)\n>>> rv.poof()\n>>> fig.savefig(\"images/mlpr_0612.png\", dpi=300)\n```", "```py\n>>> from pandas.plotting import radviz\n>>> fig, ax = plt.subplots(figsize=(6, 6))\n>>> new_df = X.copy()\n>>> new_df[\"target\"] = y\n>>> radviz(\n...     new_df, \"target\", ax=ax, colormap=\"PiYG\"\n... )\n>>> fig.savefig(\"images/mlpr_0613.png\", dpi=300)\n```", "```py\n>>> from yellowbrick.features import (\n...     ParallelCoordinates,\n... )\n>>> fig, ax = plt.subplots(figsize=(6, 4))\n>>> pc = ParallelCoordinates(\n...     classes=[\"died\", \"survived\"],\n...     features=X.columns,\n... )\n>>> pc.fit(X, y)\n>>> pc.transform(X)\n>>> ax.set_xticklabels(\n...     ax.get_xticklabels(), rotation=45\n... )\n>>> pc.poof()\n>>> fig.savefig(\"images/mlpr_0614.png\", dpi=300)\n```", "```py\n>>> from pandas.plotting import (\n...     parallel_coordinates,\n... )\n>>> fig, ax = plt.subplots(figsize=(6, 4))\n>>> new_df = X.copy()\n>>> new_df[\"target\"] = y\n>>> parallel_coordinates(\n...     new_df,\n...     \"target\",\n...     ax=ax,\n...     colormap=\"viridis\",\n...     alpha=0.5,\n... )\n>>> ax.set_xticklabels(\n...     ax.get_xticklabels(), rotation=45\n... )\n>>> fig.savefig(\n...     \"images/mlpr_0615.png\",\n...     dpi=300,\n...     bbox_inches=\"tight\",\n... )\n```"]
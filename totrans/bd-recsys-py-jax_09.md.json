["```py\nimport wandb, torch\nrun = wandb.init(project=Prod_model, job_type=\"inference\")\n\nmodel_dir = run.use_artifact(\n\t\t'bryan-wandb/recsys-torch/model:latest',\n\t\ttype='model'\n).download()\n\nmodel = torch.load(model_dir)\nmodel.eval(user_id)\n```", "```py\nfrom fastapi import FastAPI # FastAPI code\n\nimport wandb, torch\n\napp = FastAPI() # FastAPI code\n\nrun = wandb.init(project=Prod_model, job_type=\"inference\")\n\nmodel_dir = run.use_artifact(\n\t'bryan-wandb/recsys-torch/model:latest',\n\ttype='model'\n).download()\n\nmodel = torch.load(model_dir)\n\n@app.get(\"/recommendations/{user_id}\") # FastAPI code\ndef make_recs_for_user(user_id: int): # FastAPI code\n\t\tendpoint_name = 'make_recs_for_user_v0'\n\t\tlogger.info(\n\t\t\t\"{'type': 'recommendation_request',\"\n\t\t\tf\"'arguments': {'user_id': {user_id}},\"\n\t\t\tf\"'response': {None}},\",\n\t\t\tf\"'endpoint_name': {endpoint_name}\"\n\t\t)\n\t\trecommendation = model.eval(user_id)\n\t\tlogger.log(\n\t\t\t\"{'type': 'model_inference',\"\n\t\t\tf\"'arguments': {'user_id': {user_id}},\"\n\t\t\tf\"'response': {recommendation}},\"\n\t\t\tf\"'endpoint_name': {endpoint_name}\"\n\t\t)\n    return { # FastAPI code\n\t\t\t\"user_id\": user_id,\n\t\t\t\"endpoint_name\": endpoint_name,\n\t\t\t\"recommendation\": recommendation\n\t\t}\n```"]
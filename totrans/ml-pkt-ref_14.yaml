- en: Chapter 14\. Regression
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章. 回归
- en: Regression is a supervised machine learning process. It is similar to classification,
    but rather than predicting a label, we try to predict a continuous value. If you
    are trying to predict a number, then use regression.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 回归是一种监督机器学习过程。它类似于分类，但不是预测标签，而是预测连续值。如果您要预测一个数字，那么使用回归。
- en: It turns out that sklearn supports many of the same classification models for
    regression problems. In fact, the API is the same, calling `.fit`, `.score`, and
    `.predict`. This is also true for the next-generation boosting libraries, XGBoost
    and LightGBM.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 结果表明，sklearn支持许多相同的分类模型用于回归问题。实际上，API是相同的，调用`.fit`、`.score`和`.predict`。对于下一代增强库XGBoost和LightGBM也是如此。
- en: Though there are similarities with the classification models and hyperparameters,
    the evaluation metrics are different for regression. This chapter will review
    many of the types of regression models. We will use the [Boston housing dataset](https://oreil.ly/b2bKQ)
    to explore them.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管分类模型和超参数有相似之处，但回归的评估指标不同。本章将回顾许多种回归模型。我们将使用[Boston房屋数据集](https://oreil.ly/b2bKQ)进行探索。
- en: 'Here we load the data, create a split version for training and testing, and
    create another split version with standardized data:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们加载数据，创建一个用于训练和测试的拆分版本，并创建另一个具有标准化数据的拆分版本：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Here are descriptions of the features of the housing dataset taken from the
    dataset:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是从数据集中提取的住房数据集特征的描述：
- en: CRIM
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 犯罪率
- en: Per capita crime rate by town
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 按城镇计算的人均犯罪率
- en: ZN
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ZN
- en: Proportion of residential land zoned for lots over 25,000 square feet
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 住宅土地超过25000平方英尺的比例
- en: INDUS
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: INDUS
- en: Proportion of nonretail business acres per town
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 每个城镇非零售业务用地比例
- en: CHAS
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: CHAS
- en: Charles River dummy variable (1 if tract bounds river; 0 otherwise)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 查尔斯河虚拟变量（如果地区与河流接壤则为1；否则为0）
- en: NOX
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: NOX
- en: Nitric oxides concentration (parts per 10 million)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一氧化氮浓度（每千万分之一）
- en: RM
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 房屋的平均房间数
- en: Average number of rooms per dwelling
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 每个住宅的平均房间数
- en: AGE
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 年龄
- en: Proportion of owner-occupied units built prior to 1940
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 业主自住单位建于1940年之前的比例
- en: DIS
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: DIS
- en: Weighted distances to five Boston employment centers
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 到波士顿五个就业中心的加权距离
- en: RAD
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: RAD
- en: Index of accessibility to radial highways
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 径向高速公路的可达性指数
- en: TAX
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 税
- en: Full-value property tax rate per $10,000
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 每10000美元的全额财产税率
- en: PTRATIO
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: PTRATIO
- en: Pupil-teacher ratio by town
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 按城镇计算的师生比
- en: B
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: B
- en: 1000(Bk - 0.63)^2, where Bk is the proportion of black people by town (this
    dataset is from 1978)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 1000(Bk - 0.63)^2，其中Bk是城镇中黑人的比例（此数据集来自1978年）
- en: LSTAT
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: LSTAT
- en: Percent lower status of the population
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 人口的较低地位百分比
- en: MEDV
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: MEDV
- en: Median value of owner-occupied homes in increments of $1000
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以每1000美元递增的业主自住房屋的中位数价值
- en: Baseline Model
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基线模型
- en: A baseline regression model will give us something to compare our other models
    to. In sklearn, the default result of the `.score` method is the *coefficient
    of determination* (r² or R²). This number explains the percent of variation of
    the input data that the prediction captures. The value is typically between 0
    and 1, but it can be negative in the case of particulary bad models.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 基线回归模型将为我们提供一个与其他模型进行比较的标准。在sklearn中，`.score`方法的默认结果是*确定系数*（r²或R²）。该数值解释了预测捕捉的输入数据变化的百分比。通常在0到1之间，但在极差模型情况下可能为负数。
- en: 'The default strategy of the `DummyRegressor` is to predict the mean value of
    the training set. We can see that this model does not perform very well:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`DummyRegressor`的默认策略是预测训练集的平均值。我们可以看到这个模型表现不佳：'
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Linear Regression
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 线性回归
- en: Simple linear regression is taught in math and beginning statistics courses.
    It tries to fit a form of the formula y = mx + b while minimizing the square of
    the errors. When solved, we have an intercept and coefficient. The intercept gives
    a base value for a prediction modified by adding the product of the coefficient
    and the input.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 简单线性回归教授数学和初级统计课程。它试图拟合形式为y = mx + b的公式，同时最小化误差的平方。求解后，我们有一个截距和系数。截距提供了一个预测的基础值，通过添加系数和输入的乘积进行修改。
- en: This form can be generalized to higher dimensions. In that case each feature
    has a coefficient. The larger the absolute value of the coefficient, the more
    impact the feature has on the target.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这种形式可以推广到更高的维度。在这种情况下，每个特征都有一个系数。系数的绝对值越大，该特征对目标的影响越大。
- en: This model assumes that the prediction is a linear combination of the inputs.
    For some datasets, this is not flexible enough. Complexity can be added by transforming
    the features (the sklearn `preprocessing.PolynomialFeatures` transformer can create
    polynomial combinations of the features). If this leads to overfitting, ridge
    and lasso regression may be used to regularize the estimator.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型假设预测是输入的线性组合。对于某些数据集，这可能不够灵活。可以通过转换特征（sklearn的`preprocessing.PolynomialFeatures`转换器可以创建特征的多项式组合）来增加复杂性。如果这导致过拟合，可以使用岭回归和Lasso回归来正则化估计器。
- en: This model is also susceptible to *heteroscedasticity*. This is the idea that
    as the input values change in size, the error of the prediction (or the residuals)
    often changes as well. If you plot the input against the residuals, you will see
    a fan or cone shape. We will see examples of that later.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型也容易受到*异方差性*的影响。这意味着随着输入值的变化，预测误差（或残差）通常也会变化。如果您绘制输入与残差的图表，您将看到一个扇形或锥形。稍后我们将看到这方面的示例。
- en: Another issue to be aware of is *multicollinearity*. If columns have high correlation,
    it can hinder interpretation of the coefficients. This usually does not impact
    the model, only coefficient meaning.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个要注意的问题是*多重共线性*。如果列之间存在高相关性，可能会影响系数的解释。这通常不会影响模型，只影响系数的含义。
- en: 'A linear regression model has the following properties:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 线性回归模型具有以下属性：
- en: Runtime efficiency
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 运行效率
- en: Use `n_jobs` to speed up performance.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`n_jobs`来加快性能。
- en: Preprocess data
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 预处理数据
- en: Standardize data before training the model.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练模型之前对数据进行标准化。
- en: Prevent overfitting
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 防止过拟合
- en: You can simplify the model by not using or adding polynomial features.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过不使用或添加多项式特征来简化模型。
- en: Interpret results
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 解释结果
- en: Can interpret results as weights for feature contribution, but assumes normality
    and independence of features. You might want to remove colinear features to improve
    interpretability. R² will tell you how much of the total variance of the outcome
    is explained by the model.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 可以解释结果作为特征贡献的权重，但是假设特征是正态分布且独立的。您可能需要移除共线特征以提高可解释性。R²将告诉您模型解释结果中总方差的百分比。
- en: 'Here is a sample run with the default data:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是使用默认数据的样本运行：
- en: '[PRE2]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Instance parameters:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 实例参数：
- en: '`n_jobs=None`'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_jobs=None`'
- en: Number of CPUs to use. `-1` is all.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的CPU数目。`-1`表示全部。
- en: 'Attributes after fitting:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 拟合后的属性：
- en: '`coef_`'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`coef_`'
- en: Linear regression coefficients
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 线性回归系数
- en: '`intercept_`'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`intercept_`'
- en: Intercept of the linear model
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 线性模型的截距
- en: 'The `.intercept_` value is the expected mean value. You can see how scaling
    the data affects the coefficients. The sign of the coefficients explains the direction
    of the relation between the feature and the target. A positive sign indicates
    that as the feature increases, the label increases. A negative sign indicates
    that as the feature increases, the label decreases. The larger the absolute value
    of the coefficient, the more impact it has:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`.intercept_`值是预期的均值。您可以看到数据缩放如何影响系数。系数的符号说明特征与目标之间的关系方向。正号表示特征增加时，标签也增加。负号表示特征增加时，标签减少。系数的绝对值越大，其影响越大：'
- en: '[PRE3]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can use Yellowbrick to visualize coefficients (see [Figure 14-1](#id45)).
    Because the scaled Boston data is a numpy array rather than a pandas DataFrame,
    we need to pass the `labels` parameter if we want to use the column names:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用Yellowbrick来可视化系数（参见[图 14-1](#id45)）。因为缩放后的波士顿数据是一个numpy数组而不是pandas DataFrame，如果我们想使用列名，我们需要传递`labels`参数：
- en: '[PRE4]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Feature importance. This indicates that RM (number of rooms) increases the
    price, age doesn''t really matter, and LSTAT (percent of low status in population)
    lowers the price.](assets/mlpr_1401.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![特征重要性。这表明RM（房间数量）增加价格，年龄并不重要，而LSTAT（低收入人口比例）降低价格。](assets/mlpr_1401.png)'
- en: Figure 14-1\. Feature importance. This indicates that RM (number of rooms) increases
    the price, age doesn’t really matter, and LSTAT (percent of low status in population)
    lowers the price.
  id: totrans-69
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-1\. 特征重要性。这表明RM（房间数量）增加价格，年龄并不重要，而LSTAT（低收入人口比例）降低价格。
- en: SVMs
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SVM
- en: Support vector machines can perform regression as well.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 支持向量机也可以执行回归任务。
- en: 'SVMs have the following properties:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: SVM具有以下属性：
- en: Runtime efficiency
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 运行效率
- en: The scikit-learn implementation is O(n⁴), so it can be hard to scale to large
    sizes. Using a linear kernel or the `LinearSVR` model can improve the runtime
    performance at perhaps the cost of accuracy. Upping the `cache_size` parameter
    can bring that down to O(n³).
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: scikit-learn 实现的时间复杂度为 O(n⁴)，因此在大规模数据集上很难扩展。使用线性核或 `LinearSVR` 模型可以提高运行时性能，可能会牺牲一些准确性。增加
    `cache_size` 参数可以将复杂度降低到 O(n³)。
- en: Preprocess data
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 预处理数据
- en: The algorithm is not scale invariant, so standardizing the data is highly recommended.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 该算法不是尺度不变的，因此强烈建议对数据进行标准化。
- en: Prevent overfitting
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 防止过拟合
- en: The `C` (penalty parameter) controls regularization. A smaller value allows
    for a smaller margin in the hyperplane. A higher value for `gamma` will tend to
    overfit the training data. The `LinearSVR` model supports a `loss` and `penalty`
    parameter for regularization. The `epsilon` parameter can be raised (with 0 you
    should expect overfitting).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`C`（惩罚参数）控制正则化。较小的值允许较小的超平面间隔。较高的 `gamma` 值会导致过拟合训练数据。`LinearSVR` 模型支持 `loss`
    和 `penalty` 参数进行正则化。`epsilon` 参数可以提高（使用 0 可能会导致过拟合）。'
- en: Interpret results
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 解释结果
- en: Inspect `.support_vectors_`, though these are hard to interpret. With linear
    kernels, you can inspect `.coef_`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 `.support_vectors_`，尽管这些很难解释。对于线性核，您可以检查 `.coef_`。
- en: 'Here is an example of using the library:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是使用库的示例：
- en: '[PRE5]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Instance parameters:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 实例参数：
- en: '`C=1.0`'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`C=1.0`'
- en: The penalty parameter. The smaller the value, the tighter the decision boundary
    (more overfitting).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 惩罚参数。值越小，决策边界越紧（更容易过拟合）。
- en: '`cache_size=200`'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '`cache_size=200`'
- en: Cache size (MB). Bumping this up can improve training time on large datasets.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 缓存大小（MB）。增加此值可以改善大数据集上的训练时间。
- en: '`coef0=0.0`'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '`coef0=0.0`'
- en: Independent term for poly and sigmoid kernels.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式和 sigmoid 核的独立项。
- en: '`epsilon=0.1`'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`epsilon=0.1`'
- en: Defines a margin of tolerance where no penalty is given to errors. Should be
    smaller for larger datasets.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 定义容错边距，不会对错误给予惩罚。对于较大的数据集，应该更小。
- en: '`degree=3`'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '`degree=3`'
- en: Degree for polynomial kernel.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 多项式核的度。
- en: '`gamma=''auto''`'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`gamma=''auto''`'
- en: Kernel coefficient. Can be a number, `'scale'` (default in 0.22, 1 / (`num features`
    * `X.std()`) ), or `'auto'` (default prior, 1 / `num_features`). A lower value
    leads to overfitting the training data.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 核系数。可以是数字，`'scale'`（0.22 版本的默认值，1 /（特征数 * `X.std()`）），或 `'auto'`（默认值，1 / 特征数）。较低的值会导致过拟合训练数据。
- en: '`kernel=''rbf''`'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`kernel=''rbf''`'
- en: 'Kernel type: `''linear''`, `''poly''`, `''rbf''` (default), `''sigmoid''`,
    `''precomputed''`, or a function.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 核类型：`'linear'`、`'poly'`、`'rbf'`（默认）、`'sigmoid'`、`'precomputed'`或函数。
- en: '`max_iter=-1`'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_iter=-1`'
- en: Maximum number of iterations for solver. -1 for no limit.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 求解器的最大迭代次数。-1 表示无限制。
- en: '`probability=False`'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`probability=False`'
- en: Enable probability estimation. Slows down training.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 启用概率估计。训练过程会变慢。
- en: '`random_state=None`'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`random_state=None`'
- en: Random seed.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 随机种子。
- en: '`shrinking=True`'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`shrinking=True`'
- en: Use shrinking heuristic.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 使用缩减启发式。
- en: '`tol=0.001`'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`tol=0.001`'
- en: Stopping tolerance.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 停止容差。
- en: '`verbose=False`'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`verbose=False`'
- en: Verbosity.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 冗余性。
- en: 'Attributes after fitting:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 拟合后的属性：
- en: '`support_`'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '`support_`'
- en: Support vector indices
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 支持向量索引
- en: '`support_vectors_`'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '`support_vectors_`'
- en: Support vectors
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 支持向量
- en: '`coef_`'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`coef_`'
- en: Coefficients (for linear) kernel
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 系数（用于线性）核
- en: '`intercept_`'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`intercept_`'
- en: Constant for decision function
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 决策函数的常数
- en: K-Nearest Neighbor
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: K-最近邻
- en: The KNN model also supports regression by finding k neighbor targets to the
    sample for which you want to predict. For regression, this model averages the
    targets together to determine a prediction.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: KNN 模型也支持回归，通过找到 k 个最近邻的目标来预测样本。对于回归，该模型会将目标值平均，以确定预测结果。
- en: 'Nearest neighbor models have the following properties:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 最近邻模型具有以下特性：
- en: Runtime efficiency
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 运行效率
- en: Training runtime is O(1), but there is a trade-off as the sample data needs
    to be stored. Testing runtime is O(Nd), where N is the number of training examples
    and d is dimensionality.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 训练运行时为 O(1)，但需要权衡，因为样本数据需要存储。测试运行时为 O(Nd)，其中 N 是训练样本数，d 是维度。
- en: Preprocess data
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 预处理数据
- en: Yes, distance-based calculations perform better when standardized.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，基于距离的计算在标准化后性能更好。
- en: Prevent overfitting
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 防止过拟合
- en: Raise `n_neighbors`. Change `p` for L1 or L2 metric.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 增加 `n_neighbors`。为 L1 或 L2 距离修改 `p`。
- en: Interpret results
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 解释结果
- en: Interpret the k-nearest neighbors to the sample (using the `.kneighbors` method).
    Those neighbors (if you can explain them) explain your result.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 解释样本的 k 最近邻（使用 `.kneighbors` 方法）。如果可以解释它们，这些邻居解释了你的结果。
- en: 'Here is an example of using the model:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是使用该模型的示例：
- en: '[PRE6]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Attributes:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '`algorithm=''auto''`'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '`algorithm=''auto''`'
- en: Can be `'brute'`, `'ball_tree'`, or `'kd_tree'`.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 可以是`'brute'`，`'ball_tree'`或`'kd_tree'`。
- en: '`leaf_size=30`'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`leaf_size=30`'
- en: Used for tree algorithms.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 用于树算法。
- en: '`metric=''minkowski''`'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '`metric=''minkowski''`'
- en: Distance metric.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 距离度量。
- en: '`metric_params=None`'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`metric_params=None`'
- en: Additional dictionary of parameters for custom metric function.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 用于自定义度量函数的额外参数字典。
- en: '`n_jobs=1`'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_jobs=1`'
- en: Number of CPUs.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: CPU数量。
- en: '`n_neighbors=5`'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_neighbors=5`'
- en: Number of neighbors.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 邻居数。
- en: '`p=2`'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '`p=2`'
- en: Minkowski power parameter. 1 = manhattan (L1). 2 = euclidean (L2).
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: Minkowski幂参数。1 = 曼哈顿距离（L1）。2 = 欧几里得距离（L2）。
- en: '`weights=''uniform''`'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`weights=''uniform''`'
- en: Can be `'distance'`, in which case, closer points have more influence.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 可以是`'distance'`，此时距离较近的点影响较大。
- en: Decision Tree
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 决策树
- en: Decision trees support classification and regression. At each level of the tree,
    various splits on features are evaluated. The split that will produce the lowest
    error (impurity) is chosen. The `criterion` parameter can be adjusted to determine
    the metric for impurity.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树支持分类和回归。树的每个层次都会评估特征的各种分裂。选择能够产生最低误差（不纯度）的分裂。可以调整`criterion`参数来确定不纯度的度量标准。
- en: 'Decision trees have the following properties:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树具有以下属性：
- en: Runtime efficiency
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 运行效率
- en: 'For creation, loop over each of the m features we have to sort all n samples:
    O(mn log n). For predicting, you walk the tree: O(height).'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 创建时，对每个m个特征进行循环，必须对所有n个样本进行排序：O(mn log n)。预测时，遍历树：O(高度)。
- en: Preprocess data
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 预处理数据
- en: Scaling not necessary. Need to get rid of missing values and convert to numeric.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 不需要缩放。需要消除缺失值并转换为数值型。
- en: Prevent overfitting
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 防止过拟合
- en: Set `max_depth` to a lower number, raise `min_impurity_decrease`.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 将`max_depth`设置为较低的数字，提高`min_impurity_decrease`。
- en: Interpret results
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 解释结果
- en: Can step through the tree of choices. Because there are steps, a tree is bad
    at dealing with linear relationships (a small change in the values of a feature
    can cause a completely different tree to be formed). The tree is also highly dependent
    on the training data. A small change can change the whole tree.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过选择树的选择步骤来步进。由于有步骤，树处理线性关系不佳（特征值的微小变化可能导致完全不同的树形成）。树也高度依赖于训练数据。小的变化可能改变整个树。
- en: 'Here is an example using the scikit-learn library:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是使用scikit-learn库的一个例子：
- en: '[PRE7]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Instance parameters:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 实例参数：
- en: '`criterion=''mse''`'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '`criterion=''mse''`'
- en: Splitting function. Default is mean squared error (L2 loss). `'friedman_mse'`
    or `'mae'` (L1 loss).
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 分裂函数。默认是均方误差（L2损失）。`'friedman_mse'`或`'mae'`（L1损失）。
- en: '`max_depth=None`'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_depth=None`'
- en: Depth of tree. Default will build until leaves contain less than `min_samples_split`.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 树的深度。默认会构建直到叶子节点包含少于`min_samples_split`个样本。
- en: '`max_features=None`'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_features=None`'
- en: Number of features to examine for split. Default is all.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 用于分裂的特征数。默认为所有。
- en: '`max_leaf_nodes=None`'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_leaf_nodes=None`'
- en: Limit number of leaves. Default is unlimited.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 限制叶子节点数。默认为无限制。
- en: '`min_impurity_decrease=0.0`'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_impurity_decrease=0.0`'
- en: Split node if a split will decrease impurity >= value.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 如果分裂会使不纯度减少大于等于某个值，则进行分裂。
- en: '`min_impurity_split=None`'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_impurity_split=None`'
- en: Deprecated.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 已弃用。
- en: '`min_samples_leaf=1`'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_samples_leaf=1`'
- en: Minimum number of samples at each leaf.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 每个叶子节点所需的最小样本数。
- en: '`min_samples_split=2`'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_samples_split=2`'
- en: Minimum number of samples required to split a node.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 要求分裂节点的最小样本数。
- en: '`min_weight_fraction_leaf=0.0`'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_weight_fraction_leaf=0.0`'
- en: Minimum sum of weights required for leaf nodes.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 叶子节点所需的最小权重总和。
- en: '`presort=False`'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '`presort=False`'
- en: May speed up training with small dataset or restricted depth if set to `True`.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果设置为`True`，则可以通过小数据集或限制深度来加速训练。
- en: '`random_state=None`'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`random_state=None`'
- en: Random seed.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 随机种子。
- en: '`splitter=''best''`'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`splitter=''best''`'
- en: Use `'random'` or `'best'`.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`'random'`或`'best'`。
- en: 'Attributes after fitting:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 拟合后的属性：
- en: '`feature_importances_`'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`feature_importances_`'
- en: Array of Gini importance
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 基尼重要性数组
- en: '`max_features_`'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_features_`'
- en: Computed value of `max_features`
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 计算出的`max_features`值
- en: '`n_outputs_`'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_outputs_`'
- en: Number of outputs
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 输出数
- en: '`n_features_`'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_features_`'
- en: Number of features
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 特征数
- en: '`tree_`'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '`tree_`'
- en: Underlying tree object
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 底层树对象
- en: 'View the tree (see [Figure 14-2](#tree2)):'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 查看树（参见[图14-2](#tree2)）：
- en: '[PRE8]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'For Jupyter, use:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Jupyter，请使用：
- en: '[PRE9]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Decision tree.](assets/mlpr_1402.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![决策树。](assets/mlpr_1402.png)'
- en: Figure 14-2\. Decision tree.
  id: totrans-203
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图14-2。决策树。
- en: 'This plot was a little wide. On a computer you can zoom in on portions of it.
    You can also limit the depth of the chart (see [Figure 14-3](#tree3)). (It turns
    out that the most important features are typically near the top of the tree.)
    We will use the `max_depth` parameter to do this:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图有点宽。在电脑上，你可以放大它的某些部分。你还可以通过限制图的深度（见[图 14-3](#tree3)）来做到这一点。（事实证明，最重要的特征通常靠近树的顶部。）我们将使用`max_depth`参数来实现这一点：
- en: '[PRE10]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![The first two layers of a decision tree.](assets/mlpr_1403.png)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![决策树的前两层。](assets/mlpr_1403.png)'
- en: Figure 14-3\. The first two layers of a decision tree.
  id: totrans-207
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-3\. 决策树的前两层。
- en: 'We can also use the dtreeviz package to view a scatter plot at each of the
    nodes of the tree (see [Figure 14-4](#treedtviz2)). We will use a tree limited
    to a depth of two so we can see the details:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用dtreeviz包，在树的每个节点查看散点图（见[图 14-4](#treedtviz2)）。我们将使用深度限制为两层的树以查看详细信息：
- en: '[PRE11]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Regression with dtviz.](assets/mlpr_1404.png)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![使用dtviz进行回归。](assets/mlpr_1404.png)'
- en: Figure 14-4\. Regression with dtviz.
  id: totrans-211
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-4\. 使用dtviz进行回归。
- en: 'Feature importance:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 特征重要性：
- en: '[PRE12]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Random Forest
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 随机森林
- en: Decision trees are good because they are explainable, but they have a tendency
    to overfit. A random forest trades some of the explainability for a model that
    tends to generalize better. This model can also be used for regression.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树很好因为它们是可解释的，但它们有过拟合的倾向。随机森林为了更好地泛化模型而牺牲了一些可解释性。这种模型也可用于回归。
- en: 'Random forests have the following properties:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 随机森林具有以下特性：
- en: Runtime efficiency
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 运行效率
- en: 'Need to create j random trees. This can be done in parallel using `n_jobs`.
    Complexity for each tree is O(mn log n), where n is the number of samples and
    m is the number of features. For creation, loop over each of the m features, and
    sort all n samples: O(mn log n). For predicting, you walk the tree: O(height).'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 需要创建j个随机树。可以使用`n_jobs`并行处理。每棵树的复杂度为O(mn log n)，其中n是样本数，m是特征数。创建时，循环遍历每个m个特征，并对所有n个样本进行排序：O(mn
    log n)。预测时，按树行走：O(高度)。
- en: Preprocess data
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 预处理数据
- en: Not necessary as long as the input is numeric and not missing values.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 只要输入是数值型且没有缺失值，这些都不是必需的。
- en: Prevent overfitting
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 防止过拟合
- en: Add more trees (`n_estimators`). Use lower `max_depth`.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 添加更多树（`n_estimators`）。使用较低的`max_depth`。
- en: Interpret results
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 解释结果
- en: Supports feature importance, but we don’t have a single decision tree that we
    can walk through. Can inspect single trees from the ensemble.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 支持特征重要性，但我们没有可以遍历的单棵决策树。可以检查集成中的单棵树。
- en: 'Here is an example of using the model:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是使用模型的示例：
- en: '[PRE13]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Instance parameters (these options mirror the decision tree):'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 实例参数（这些选项与决策树相似）：
- en: '`bootstrap=True`'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '`bootstrap=True`'
- en: Bootstrap when building trees.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 构建树时使用自举法。
- en: '`criterion=''mse''`'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '`criterion=''mse''`'
- en: Splitting function, `'mae'`.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 分裂函数，`'mae'`。
- en: '`max_depth=None`'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_depth=None`'
- en: Depth of tree. Default will build until leaves contain less than `min_samples_split`.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 树的深度。默认会一直构建，直到叶子包含小于`min_samples_split`。
- en: '`max_features=''auto''`'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_features=''auto''`'
- en: Number of features to examine for split. Default is all.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 用于分割的特征数。默认为全部。
- en: '`max_leaf_nodes=None`'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_leaf_nodes=None`'
- en: Limit number of leaves. Default is unlimited.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 限制叶子的数量。默认是无限制的。
- en: '`min_impurity_decrease=0.0`'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_impurity_decrease=0.0`'
- en: Split node if a split will decrease impurity by this value or more.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 如果分裂可以减少这个值或更多的不纯度，则分割节点。
- en: '`min_impurity_split=None`'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_impurity_split=None`'
- en: Deprecated.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 已弃用。
- en: '`min_samples_leaf=1`'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_samples_leaf=1`'
- en: Minimum number of samples at each leaf.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 每个叶子节点的最小样本数。
- en: '`min_samples_split=2`'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_samples_split=2`'
- en: Minimum number of samples required to split a node.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 分裂节点所需的最小样本数。
- en: '`min_weight_fraction_leaf=0.0`'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_weight_fraction_leaf=0.0`'
- en: Minimum sum total of weights required for leaf nodes.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 叶子节点所需的最小总权重和。
- en: '`n_estimators=10`'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_estimators=10`'
- en: Number of trees in the forest.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 森林中的树木数量。
- en: '`n_jobs=None`'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_jobs=None`'
- en: Number of jobs for fitting and predicting. (`None` means 1.)
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 用于拟合和预测的作业数量。（`None`表示1。）
- en: '`oob_score=False`'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '`oob_score=False`'
- en: Whether to use OOB samples to estimate score on unseen data.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 是否使用OOB样本来估计未见数据的得分。
- en: '`random_state=None`'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`random_state=None`'
- en: Random seed.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 随机种子。
- en: '`verbose=0`'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '`verbose=0`'
- en: Verbosity.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 冗余度。
- en: '`warm_start=False`'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '`warm_start=False`'
- en: Fit a new forest or use existing one.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 拟合一个新的森林或使用现有的森林。
- en: 'Attributes after fitting:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 拟合后的属性：
- en: '`estimators_`'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '`estimators_`'
- en: Collection of trees
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 树的集合
- en: '`feature_importances_`'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '`feature_importances_`'
- en: Array of Gini importance
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 基尼重要性的数组
- en: '`n_classes_`'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_classes_`'
- en: Number of classes
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 类的数量
- en: '`n_features_`'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_features_`'
- en: Number of features
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 特征数量
- en: '`oob_score_`'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '`oob_score_`'
- en: Score of the training dataset using OOB estimate
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 使用OOB估计的训练数据集的得分
- en: 'Feature importance:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 特征重要性：
- en: '[PRE14]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: XGBoost Regression
  id: totrans-273
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: XGBoost回归
- en: The XGBoost library also supports regression. It builds a simple decision tree,
    then “boosts” it by adding subsequent trees. Each tree tries to correct the residuals
    of the previous output. In practice, this works quite well on structured data.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: XGBoost库还支持回归。它构建一个简单的决策树，然后通过添加后续树来“增强”它。每棵树都试图纠正前一个输出的残差。实际上，这在结构化数据上效果非常好。
- en: 'It has the following properties:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 它具有以下属性：
- en: Runtime efficiency
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 运行效率
- en: XGBoost is parallelizeable. Use the `n_jobs` option to indicate the number of
    CPUs. Use GPU for even better performance.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: XGBoost是可并行化的。使用`n_jobs`选项指定CPU的数量。使用GPU可以获得更好的性能。
- en: Preprocess data
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 预处理数据
- en: No scaling necessary with tree models. Need to encode categorical data. Supports
    missing data!
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 树模型不需要缩放。需要编码分类数据。支持缺失数据！
- en: Prevent overfitting
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 防止过拟合
- en: The `early_stopping_rounds=N` parameter can be set to stop training if there
    is no improvement after N rounds. L1 and L2 regularization are controlled by `reg_alpha`
    and `reg_lambda`, respectively. Higher numbers mean more conservative.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在N轮后没有改进，则可以设置`early_stopping_rounds=N`参数停止训练。L1和L2正则化分别由`reg_alpha`和`reg_lambda`控制。较高的数字意味着更为保守。
- en: Interpret results
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 解释结果
- en: Has feature importance.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 具有特征重要性。
- en: 'Here is an example using the library:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是使用该库的一个示例：
- en: '[PRE15]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Instance parameters:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 实例参数：
- en: '`max_depth=3`'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_depth=3`'
- en: Maximum depth.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 最大深度。
- en: '`learning_rate=0.1`'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '`learning_rate=0.1`'
- en: Learning rate (eta) for boosting (between 0 and 1). After each boost step, the
    newly added weights are scaled by this factor. The lower the value, the more conservative,
    but will also need more trees to converge. In the call to `.train`, you can pass
    a `learning_rates` parameter, which is a list of rates at each round (i.e., `[.1]*100
    + [.05]*100`).
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 提升（boosting）的学习率（eta）（在0到1之间）。每次提升步骤后，新添加的权重会按此因子进行缩放。值越低越保守，但也需要更多的树来收敛。在调用`.train`时，可以传递一个`learning_rates`参数，这是每轮的速率列表（例如，`[.1]*100
    + [.05]*100`）。
- en: '`n_estimators=100`'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_estimators=100`'
- en: Number of rounds or boosted trees.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 回合或增强树的数量。
- en: '`silent=True`'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '`silent=True`'
- en: Whether to print messages while running boosting.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 是否在运行提升时打印消息。
- en: '`objective="reg:linear"`'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '`objective="reg:linear"`'
- en: Learning task or callable for classification.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 分类的学习任务或可调用对象。
- en: '`booster="gbtree"`'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '`booster="gbtree"`'
- en: Can be `'gbtree'`, `'gblinear'`, or `'dart'`. The `'dart'` option adds dropout
    (drops random trees to prevent overfitting). The `'gblinear'` option creates a
    regularized linear model (read not a tree but similar to lasso regression).
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 可以是`'gbtree'`，`'gblinear'`或`'dart'`。`'dart'`选项添加了dropout（随机丢弃树以防止过拟合）。`'gblinear'`选项创建了一个正则化的线性模型（不是树，但类似于lasso回归）。
- en: '`nthread=None`'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '`nthread=None`'
- en: Deprecated.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 不推荐使用。
- en: '`n_jobs=1`'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_jobs=1`'
- en: Number of threads to use.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用的线程数。
- en: '`gamma=0`'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '`gamma=0`'
- en: Minimum loss reduction needed to further split a leaf.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步分割叶子所需的最小损失减少量。
- en: '`min_child_weight=1`'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_child_weight=1`'
- en: Minimum value for sum of hessian for a child.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 子节点的Hessian和的最小值。
- en: '`max_delta_step=0`'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_delta_step=0`'
- en: Make update more conservative. Set 1 to 10 for imbalanced classes.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 使更新更为保守。对于不平衡的类，设置1到10。
- en: '`subsample=1`'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '`subsample=1`'
- en: Fraction of samples to use for next boosting round.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 用于下一次提升回合的样本分数的分数。
- en: '`colsample_bytree=1`'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '`colsample_bytree=1`'
- en: Fraction of columns to use for boosting round.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 用于提升回合的列分数的分数。
- en: '`colsample_bylevel=1`'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '`colsample_bylevel=1`'
- en: Fraction of columns to use for level in tree.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 用于树中级别的列分数。
- en: '`colsample_bynode=1`'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '`colsample_bynode=1`'
- en: Fraction of columns to use for split (node in tree).
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 用于分割的列的分数（树中的节点）。
- en: '`reg_alpha=0`'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '`reg_alpha=0`'
- en: L1 regularization (mean of weights). Increase to be more conservative.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: L1正则化（权重的均值）。增加以更为保守。
- en: '`reg_lambda=1`'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '`reg_lambda=1`'
- en: L2 regularization (root of squared weights). Increase to be more conservative.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: L2正则化（平方权重的根）。增加以更为保守。
- en: '`base_score=.5`'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '`base_score=.5`'
- en: Initial prediction.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 初始预测。
- en: '`seed=None`'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '`seed=None`'
- en: Deprecated.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 不推荐使用。
- en: '`random_state=0`'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '`random_state=0`'
- en: Random seed.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 随机种子。
- en: '`missing=None`'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '`missing=None`'
- en: Value to interpret for missing. `None` means `np.nan`.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 用于缺失值的解释值。`None`表示`np.nan`。
- en: '`importance_type=''gain''`'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '`importance_type=''gain''`'
- en: 'The feature importance type: `''gain''`, `''weight''`, `''cover''`, `''total_gain''`,
    or `''total_cover''`.'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 特征重要性类型：`'gain'`，`'weight'`，`'cover'`，`'total_gain'`或`'total_cover'`。
- en: 'Attributes:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 属性：
- en: '`coef_`'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '`coef_`'
- en: Coefficients for gblinear learners (`booster = 'gblinear'`)
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: gblinear学习器的系数（`booster = 'gblinear'`）
- en: '`intercept_`'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '`intercept_`'
- en: Intercept for gblinear learners
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: gblinear学习器的截距
- en: '`feature_importances_`'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '`feature_importances_`'
- en: Feature importances for gbtree learners
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: gbtree学习器的特征重要性
- en: 'Feature importance is the average gain across all the nodes where the feature
    is used:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 特征重要性是该特征在所有使用它的节点上的平均增益：
- en: '[PRE16]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'XGBoost includes plotting facilities for feature importance. Note that the
    `importance_type` parameter changes the values in this plot (see [Figure 14-5](#idfir2)).
    The default is using weight to determine feature importance:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: XGBoost包括用于特征重要性的绘图功能。注意，`importance_type`参数会改变此图中的值（参见[图14-5](#idfir2)）。默认使用权重来确定特征重要性：
- en: '[PRE17]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Feature importance using weight (how many times a feature is split on in
    the trees).](assets/mlpr_1405.png)'
  id: totrans-342
  prefs: []
  type: TYPE_IMG
  zh: '![使用权重的特征重要性（特征在树中分裂的次数）。](assets/mlpr_1405.png)'
- en: Figure 14-5\. Feature importance using weight (how many times a feature is split
    on in the trees).
  id: totrans-343
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图14-5. 使用权重的特征重要性（特征在树中分裂的次数）。
- en: 'Using Yellowbrick to plot feature importances (it will normalize the `feature_importances_`
    attribute) (see [Figure 14-6](#idfir1)):'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Yellowbrick绘制特征重要性（它将规范化`feature_importances_`属性）（参见[图14-6](#idfir1)）：
- en: '[PRE18]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![Feature importance using relative importance of gain (percent importance
    of the most important feature).](assets/mlpr_1406.png)'
  id: totrans-346
  prefs: []
  type: TYPE_IMG
  zh: '![使用增益的相对重要性的特征重要性（最重要特征的百分比重要性）。](assets/mlpr_1406.png)'
- en: Figure 14-6\. Feature importance using relative importance of gain (percent
    importance of the most important feature).
  id: totrans-347
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图14-6. 使用增益的相对重要性的特征重要性（最重要特征的百分比重要性）。
- en: 'XGBoost provides both a textual representation of the trees and a graphical
    one. Here is the text representation:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: XGBoost提供了树的文本表示和图形表示。这是文本表示：
- en: '[PRE19]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The leaf values can be interpreted as the sum of the `base_score` and the leaf.
    (To validate this, call `.predict` with the `ntree_limit=1` parameter to limit
    the model to using the result of the first tree.)
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 叶子值可以解释为`base_score`和叶子的总和。（要验证此点，使用`ntree_limit=1`参数调用`.predict`以限制模型仅使用第一棵树的结果。）
- en: 'Here is a graphical version of the tree (see [Figure 14-7](#idr27)):'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 这是树的图形版本（参见[图14-7](#idr27)）：
- en: '[PRE20]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![XGBoost tree.](assets/mlpr_1407.png)'
  id: totrans-353
  prefs: []
  type: TYPE_IMG
  zh: '![XGBoost树。](assets/mlpr_1407.png)'
- en: Figure 14-7\. XGBoost tree.
  id: totrans-354
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图14-7. XGBoost树。
- en: LightGBM Regression
  id: totrans-355
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: LightGBM回归
- en: The gradient boosting tree library, LightGBM, also supports regression. As mentioned
    in the classification chapter, it can be faster than XGBoost for creating trees
    due to the sampling mechanism used to determine node splits.
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 梯度提升树库LightGBM也支持回归。正如分类章节中提到的那样，由于用于确定节点分裂的抽样机制，它可能比XGBoost创建树更快。
- en: 'Also, remember that it grows trees depth first, so limiting depth may harm
    the model. It has the following properties:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 它是按深度优先方式生成树的，因此限制深度可能会损害模型。它具有以下特性：
- en: Runtime efficiency
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 运行效率
- en: Can take advantage of multiple CPUs. By using binning, can be 15 times faster
    than XGBoost.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 可以利用多个CPU。通过使用分箱，可以比XGBoost快15倍。
- en: Preprocess data
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 预处理数据
- en: Has some support for encoding categorical columns as integers (or pandas `Categorical`
    type), but AUC appears to suffer compared to one-hot encoding.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 对将分类列编码为整数（或pandas的`Categorical`类型）提供了一些支持，但与独热编码相比，AUC似乎表现较差。
- en: Prevent overfitting
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 预防过拟合
- en: Lower `num_leaves`. Increase `min_data_in_leaf`. Use `min_gain_to_split` with
    `lambda_l1` or `lambda_l2`.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 降低`num_leaves`。增加`min_data_in_leaf`。使用`lambda_l1`或`lambda_l2`的`min_gain_to_split`。
- en: Interpret results
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 解释结果
- en: Feature importance is available. Individual trees are weak and tend to be hard
    to interpret.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的特征重要性。单独的树较弱且往往难以解释。
- en: 'Here is an example of using the model:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用模型的一个示例：
- en: '[PRE21]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Instance parameters:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 实例参数：
- en: '`boosting_type=''gbdt''`'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '`boosting_type=''gbdt''`'
- en: Can be `'gbdt'` (gradient boosting), `'rf'` (random forest), `'dart'` (dropouts
    meet multiple additive regression trees), or `'goss'` (gradient-based, one-sided
    sampling).
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 可以是`'gbdt'`（梯度提升）、`'rf'`（随机森林）、`'dart'`（dropout meet multiple additive regression
    trees）或`'goss'`（基于梯度的单侧抽样）。
- en: '`num_leaves=31`'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '`num_leaves=31`'
- en: Maximum tree leaves.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 最大树叶子数。
- en: '`max_depth=-1`'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_depth=-1`'
- en: Maximum tree depth. -1 is unlimited. Larger depths tend to overfit more.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 最大树深度。-1表示无限制。较大的深度往往会导致过拟合。
- en: '`learning_rate=0.1`'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '`learning_rate=0.1`'
- en: Range (0, 1.0]. Learning rate for boosting. A smaller value slows down overfitting
    as the boosting rounds have less impact. A smaller number should give better performance
    but will require more `num_iterations`.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 范围为(0, 1.0]。提升（boosting）的学习率。较小的值减缓过拟合，因为提升轮次对结果的影响较小。较小的数字应该能够提供更好的性能，但会需要更多的`num_iterations`。
- en: '`n_estimators=100`'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_estimators=100`'
- en: Number of trees or boosting rounds.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 树的数量或提升轮次。
- en: '`subsample_for_bin=200000`'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '`subsample_for_bin=200000`'
- en: Samples required to create bins.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 创建分箱所需的样本数。
- en: '`objective=None`'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '`objective=None`'
- en: '`None` - Does regression by default. Can be a function or string.'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '`None` - 默认执行回归。可以是函数或字符串。'
- en: '`min_split_gain=0.0`'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_split_gain=0.0`'
- en: Loss reduction required to partition leaf.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 损失减少所需的叶子分区。
- en: '`min_child_weight=0.001`'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_child_weight=0.001`'
- en: Sum of hessian weight required for a leaf. Larger will be more conservative.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 叶子节点所需的 hessian 权重之和。值越大越保守。
- en: '`min_child_samples=20`'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '`min_child_samples=20`'
- en: Number of samples required for a leaf. Lower numbers mean more overfitting.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 叶子节点所需的样本数。数值越低表示过拟合越严重。
- en: '`subsample=1.0`'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '`subsample=1.0`'
- en: Fraction of samples to use for the next round.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 用于下一轮的样本分数比例。
- en: '`subsample_freq=0`'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '`subsample_freq=0`'
- en: Subsample frequency. Change to 1 to enable.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 子采样频率。设置为 1 以启用。
- en: '`colsample_bytree=1.0`'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: '`colsample_bytree=1.0`'
- en: Range (0, 1.0]. Select percent of features for each boosting round.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 范围是 (0, 1.0]。每轮提升选择的特征百分比。
- en: '`reg_alpha=0.0`'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '`reg_alpha=0.0`'
- en: L1 regularization (mean of weights). Increase to be more conservative.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: L1 正则化（权重的均值）。增加以更加保守。
- en: '`reg_lambda=0.0`'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: '`reg_lambda=0.0`'
- en: L2 regularization (root of squared weights). Increase to be more conservative.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: L2 正则化（平方权重的根）。增加以更加保守。
- en: '`random_state=42`'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '`random_state=42`'
- en: Random seed.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 随机种子。
- en: '`n_jobs=-1`'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: '`n_jobs=-1`'
- en: Number of threads.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 线程数。
- en: '`silent=True`'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '`silent=True`'
- en: Verbose mode.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 冗长模式。
- en: '`importance_type=''split''`'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '`importance_type=''split''`'
- en: 'Determines how importance is calculated: `*split*` (times a feature was used)
    or `*gain*` (total gains of splits when a feature was used).'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 确定重要性计算方式：`*split*`（特征使用次数）或 `*gain*`（特征使用时的总增益）。
- en: 'LightGBM supports feature importance. The `importance_type` parameter determines
    how this is calculated (the default is based on how many times a feature was used):'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: LightGBM 支持特征重要性。`importance_type` 参数确定计算方式（默认基于特征使用次数）：
- en: '[PRE22]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Feature importance plot showing how many times a feature is used (see [Figure 14-8](#id23_2)):'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 特征重要性图显示特征被使用的次数（见 [Figure 14-8](#id23_2)）：
- en: '[PRE23]'
  id: totrans-410
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![Feature importance showing how many times a feature is used.](assets/mlpr_1408.png)'
  id: totrans-411
  prefs: []
  type: TYPE_IMG
  zh: '![显示特征被使用次数的特征重要性。](assets/mlpr_1408.png)'
- en: Figure 14-8\. Feature importance showing how many times a feature is used.
  id: totrans-412
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 14-8\. 显示特征被使用次数的特征重要性。
- en: Tip
  id: totrans-413
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: 'In Jupyter, use the following command to view a tree:'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Jupyter 中，使用以下命令查看树：
- en: '[PRE24]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'

["```py\n>>> import autosklearn, catboost,\ncategory_encoders, dtreeviz, eli5, fancyimpute,\nfastai, featuretools, glmnet_py, graphviz,\nhdbscan, imblearn, janitor, lime, matplotlib,\nmissingno, mlxtend, numpy, pandas, pdpbox, phate,\npydotplus, rfpimp, scikitplot, scipy, seaborn,\nshap, sklearn, statsmodels, tpot, treeinterpreter,\numap, xgbfir, xgboost, yellowbrick\n\n>>> for lib in [\n...     autosklearn,\n...     catboost,\n...     category_encoders,\n...     dtreeviz,\n...     eli5,\n...     fancyimpute,\n...     fastai,\n...     featuretools,\n...     glmnet_py,\n...     graphviz,\n...     hdbscan,\n...     imblearn,\n...     lime,\n...     janitor,\n...     matplotlib,\n...     missingno,\n...     mlxtend,\n...     numpy,\n...     pandas,\n...     pandas_profiling,\n...     pdpbox,\n...     phate,\n...     pydotplus,\n...     rfpimp,\n...     scikitplot,\n...     scipy,\n...     seaborn,\n...     shap,\n...     sklearn,\n...     statsmodels,\n...     tpot,\n...     treeinterpreter,\n...     umap,\n...     xgbfir,\n...     xgboost,\n...     yellowbrick,\n... ]:\n...     try:\n...         print(lib.__name__, lib.__version__)\n...     except:\n...         print(\"Missing\", lib.__name__)\ncatboost 0.11.1\ncategory_encoders 2.0.0\nMissing dtreeviz\neli5 0.8.2\nfancyimpute 0.4.2\nfastai 1.0.28\nfeaturetools 0.4.0\nMissing glmnet_py\ngraphviz 0.10.1\nhdbscan 0.8.22\nimblearn 0.4.3\njanitor 0.16.6\nMissing lime\nmatplotlib 2.2.3\nmissingno 0.4.1\nmlxtend 0.14.0\nnumpy 1.15.2\npandas 0.23.4\nMissing pandas_profiling\npdpbox 0.2.0\nphate 0.4.2\nMissing pydotplus\nrfpimp\nscikitplot 0.3.7\nscipy 1.1.0\nseaborn 0.9.0\nshap 0.25.2\nsklearn 0.21.1\nstatsmodels 0.9.0\ntpot 0.9.5\ntreeinterpreter 0.1.0\numap 0.3.8\nxgboost 0.81\nyellowbrick 0.9\n```", "```py\n$ python -m venv env\n```", "```py\n$ source env/bin/activate\n```", "```py\n  (env) $ which python\n  env/bin/python\n\n```", "```py\nC:> env\\Scripts\\activate.bat\n```", "```py\n  (env) C:> where python\n  env\\Scripts\\python.exe\n\n```", "```py\n(env) $ pip install pandas\n```", "```py\n(env) $ pip search libraryname\n```", "```py\n(env) $ pip freeze > requirements.txt\n```", "```py\n(other_env) $ pip install -r requirements.txt\n```", "```py\n$ conda create --name env python=3.6\n```", "```py\n$ conda activate env\n```", "```py\n(env) $ conda search libraryname\n```", "```py\n(env) $ conda install pandas\n```", "```py\n(env) $ conda env export > environment.yml\n```", "```py\n(other_env) $ conda create -f environment.yml\n```"]